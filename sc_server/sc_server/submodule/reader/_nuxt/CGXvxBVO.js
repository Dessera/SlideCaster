var Es=Object.defineProperty;var RR=R=>{throw TypeError(R)};var Cs=(R,l,U)=>l in R?Es(R,l,{enumerable:!0,configurable:!0,writable:!0,value:U}):R[l]=U;var j=(R,l,U)=>Cs(R,typeof l!="symbol"?l+"":l,U),Gc=(R,l,U)=>l.has(R)||RR("Cannot "+U);var Q=(R,l,U)=>(Gc(R,l,"read from private field"),U?U.call(R):l.get(R)),i=(R,l,U)=>l.has(R)?RR("Cannot add the same private member more than once"):l instanceof WeakSet?l.add(R):l.set(R,U),a=(R,l,U,Z)=>(Gc(R,l,"write to private field"),Z?Z.call(R,U):l.set(R,U),U),h=(R,l,U)=>(Gc(R,l,"access private method"),U);var ZU=(R,l,U,Z)=>({set _(d){a(R,l,d,U)},get _(){return Q(R,l,Z)}});import{e as ws,u as xs,S as js,R as Os,D as rs,b as gs,a as Ks}from"./TWc_vMyF.js";import{e as Hs,F as vs}from"./G9Zi20Z4.js";import{z as Sl,a6 as Ht,c3 as UW,ad as ZW,ai as Ps,F as XF,d as vV,r as CU,i as tW,o as tc,aq as fs,t as CZ,v as PV,aY as IW,c4 as Tc,c5 as uc,bF as As,bG as _s,x as CR,c6 as qs,ar as WQ,a7 as $s,A as VZ,a8 as tl,c7 as IF,c8 as lb}from"./DRufy4CT.js";import"./Cr-Uwpqp.js";var Ub={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M890.5 755.3L537.9 269.2c-12.8-17.6-39-17.6-51.7 0L133.5 755.3A8 8 0 00140 768h75c5.1 0 9.9-2.5 12.9-6.6L512 369.8l284.1 391.6c3 4.1 7.8 6.6 12.9 6.6h75c6.5 0 10.3-7.4 6.5-12.7z"}}]},name:"up",theme:"outlined"};function NR(R){for(var l=1;l<arguments.length;l++){var U=arguments[l]!=null?Object(arguments[l]):{},Z=Object.keys(U);typeof Object.getOwnPropertySymbols=="function"&&(Z=Z.concat(Object.getOwnPropertySymbols(U).filter(function(d){return Object.getOwnPropertyDescriptor(U,d).enumerable}))),Z.forEach(function(d){Zb(R,d,U[d])})}return R}function Zb(R,l,U){return l in R?Object.defineProperty(R,l,{value:U,enumerable:!0,configurable:!0,writable:!0}):R[l]=U,R}var vt=function(l,U){var Z=NR({},l,U.attrs);return Sl(Ht,NR({},Z,{icon:Ub}),null)};vt.displayName="UpOutlined";vt.inheritAttrs=!1;var db={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M391 240.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L200 146.3a8.03 8.03 0 00-11.3 0l-42.4 42.3a8.03 8.03 0 000 11.3L280 333.6l-43.9 43.9a8.01 8.01 0 004.7 13.6L401 410c5.1.6 9.5-3.7 8.9-8.9L391 240.9zm10.1 373.2L240.8 633c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L146.3 824a8.03 8.03 0 000 11.3l42.4 42.3c3.1 3.1 8.2 3.1 11.3 0L333.7 744l43.7 43.7A8.01 8.01 0 00391 783l18.9-160.1c.6-5.1-3.7-9.4-8.8-8.8zm221.8-204.2L783.2 391c6.6-.8 9.4-8.9 4.7-13.6L744 333.6 877.7 200c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.3a8.03 8.03 0 00-11.3 0L690.3 279.9l-43.7-43.7a8.01 8.01 0 00-13.6 4.7L614.1 401c-.6 5.2 3.7 9.5 8.8 8.9zM744 690.4l43.9-43.9a8.01 8.01 0 00-4.7-13.6L623 614c-5.1-.6-9.5 3.7-8.9 8.9L633 783.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L824 877.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L744 690.4z"}}]},name:"fullscreen-exit",theme:"outlined"};function sR(R){for(var l=1;l<arguments.length;l++){var U=arguments[l]!=null?Object(arguments[l]):{},Z=Object.keys(U);typeof Object.getOwnPropertySymbols=="function"&&(Z=Z.concat(Object.getOwnPropertySymbols(U).filter(function(d){return Object.getOwnPropertyDescriptor(U,d).enumerable}))),Z.forEach(function(d){Fb(R,d,U[d])})}return R}function Fb(R,l,U){return l in R?Object.defineProperty(R,l,{value:U,enumerable:!0,configurable:!0,writable:!0}):R[l]=U,R}var Pt=function(l,U){var Z=sR({},l,U.attrs);return Sl(Ht,sR({},Z,{icon:db}),null)};Pt.displayName="FullscreenExitOutlined";Pt.inheritAttrs=!1;var Qb={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M290 236.4l43.9-43.9a8.01 8.01 0 00-4.7-13.6L169 160c-5.1-.6-9.5 3.7-8.9 8.9L179 329.1c.8 6.6 8.9 9.4 13.6 4.7l43.7-43.7L370 423.7c3.1 3.1 8.2 3.1 11.3 0l42.4-42.3c3.1-3.1 3.1-8.2 0-11.3L290 236.4zm352.7 187.3c3.1 3.1 8.2 3.1 11.3 0l133.7-133.6 43.7 43.7a8.01 8.01 0 0013.6-4.7L863.9 169c.6-5.1-3.7-9.5-8.9-8.9L694.8 179c-6.6.8-9.4 8.9-4.7 13.6l43.9 43.9L600.3 370a8.03 8.03 0 000 11.3l42.4 42.4zM845 694.9c-.8-6.6-8.9-9.4-13.6-4.7l-43.7 43.7L654 600.3a8.03 8.03 0 00-11.3 0l-42.4 42.3a8.03 8.03 0 000 11.3L734 787.6l-43.9 43.9a8.01 8.01 0 004.7 13.6L855 864c5.1.6 9.5-3.7 8.9-8.9L845 694.9zm-463.7-94.6a8.03 8.03 0 00-11.3 0L236.3 733.9l-43.7-43.7a8.01 8.01 0 00-13.6 4.7L160.1 855c-.6 5.1 3.7 9.5 8.9 8.9L329.2 845c6.6-.8 9.4-8.9 4.7-13.6L290 787.6 423.7 654c3.1-3.1 3.1-8.2 0-11.3l-42.4-42.4z"}}]},name:"fullscreen",theme:"outlined"};function bR(R){for(var l=1;l<arguments.length;l++){var U=arguments[l]!=null?Object(arguments[l]):{},Z=Object.keys(U);typeof Object.getOwnPropertySymbols=="function"&&(Z=Z.concat(Object.getOwnPropertySymbols(U).filter(function(d){return Object.getOwnPropertyDescriptor(U,d).enumerable}))),Z.forEach(function(d){Vb(R,d,U[d])})}return R}function Vb(R,l,U){return l in R?Object.defineProperty(R,l,{value:U,enumerable:!0,configurable:!0,writable:!0}):R[l]=U,R}var ft=function(l,U){var Z=bR({},l,U.attrs);return Sl(Ht,bR({},Z,{icon:Qb}),null)};ft.displayName="FullscreenOutlined";ft.inheritAttrs=!1;var cQ={};cQ.d=(R,l)=>{for(var U in l)cQ.o(l,U)&&!cQ.o(R,U)&&Object.defineProperty(R,U,{enumerable:!0,get:l[U]})};cQ.o=(R,l)=>Object.prototype.hasOwnProperty.call(R,l);var x=globalThis.pdfjsLib={};cQ.d(x,{AbortException:()=>LF,AnnotationEditorLayer:()=>wt,AnnotationEditorParamsType:()=>C,AnnotationEditorType:()=>v,AnnotationEditorUIManager:()=>eF,AnnotationLayer:()=>da,AnnotationMode:()=>fZ,CMapCompressionType:()=>zc,ColorPicker:()=>OW,DOMSVGFactory:()=>qt,DrawLayer:()=>rt,FeatureTest:()=>$l,GlobalWorkerOptions:()=>wZ,ImageKind:()=>RW,InvalidPDFException:()=>xR,MissingPDFException:()=>zF,OPS:()=>SU,PDFDataRangeTransport:()=>oN,PDFDateString:()=>HR,PDFWorker:()=>vF,PasswordResponses:()=>Rb,PermissionFlag:()=>tb,PixelsPerInch:()=>md,RenderingCancelledException:()=>$t,TextLayer:()=>NQ,UnexpectedResponseException:()=>bc,Util:()=>k,VerbosityLevel:()=>Rc,XfaLayer:()=>IN,build:()=>En,createValidAbsoluteUrl:()=>nb,fetchData:()=>ic,getDocument:()=>pn,getFilenameFromUrl:()=>Yb,getPdfFilenameFromUrl:()=>Xb,getXfaPageViewport:()=>Bb,isDataScheme:()=>Mc,isPdfFile:()=>lR,noContextMenu:()=>UU,normalizeUnicode:()=>Jb,setLayerDimensions:()=>BF,shadow:()=>P,version:()=>In});const rl=typeof process=="object"&&process+""=="[object process]"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!=="browser"),wR=[1,0,0,1,0,0],yc=[.001,0,0,.001,0,0],Wb=1e7,Sc=1.35,bU={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,IS_EDITING:128,OPLIST:256},fZ={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3},cb="pdfjs_internal_editor_",v={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15},C={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35},tb={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},Il={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},RW={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},il={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},O0={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},Rc={ERRORS:0,WARNINGS:1,INFOS:5},zc={NONE:0,BINARY:1},SU={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93},Rb={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let Nc=Rc.WARNINGS;function Nb(R){Number.isInteger(R)&&(Nc=R)}function sb(){return Nc}function sc(R){Nc>=Rc.INFOS&&console.log(`Info: ${R}`)}function O(R){Nc>=Rc.WARNINGS&&console.log(`Warning: ${R}`)}function dl(R){throw new Error(R)}function Yl(R,l){R||dl(l)}function bb(R){switch(R==null?void 0:R.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}function nb(R,l=null,U=null){if(!R)return null;try{if(U&&typeof R=="string"){if(U.addDefaultProtocol&&R.startsWith("www.")){const d=R.match(/\./g);(d==null?void 0:d.length)>=2&&(R=`http://${R}`)}if(U.tryConvertEncoding)try{R=Mb(R)}catch{}}const Z=l?new URL(R,l):new URL(R);if(bb(Z))return Z}catch{}return null}function P(R,l,U,Z=!1){return Object.defineProperty(R,l,{value:U,enumerable:!Z,configurable:!0,writable:!1}),U}const Jd=function(){function l(U,Z){this.constructor===l&&dl("Cannot initialize BaseException."),this.message=U,this.name=Z}return l.prototype=new Error,l.constructor=l,l}();class Lc extends Jd{constructor(l,U){super(l,"PasswordException"),this.code=U}}class kc extends Jd{constructor(l,U){super(l,"UnknownErrorException"),this.details=U}}class xR extends Jd{constructor(l){super(l,"InvalidPDFException")}}class zF extends Jd{constructor(l){super(l,"MissingPDFException")}}class bc extends Jd{constructor(l,U){super(l,"UnexpectedResponseException"),this.status=U}}class ab extends Jd{constructor(l){super(l,"FormatError")}}class LF extends Jd{constructor(l){super(l,"AbortException")}}function jR(R){(typeof R!="object"||(R==null?void 0:R.length)===void 0)&&dl("Invalid argument for bytesToString");const l=R.length,U=8192;if(l<U)return String.fromCharCode.apply(null,R);const Z=[];for(let d=0;d<l;d+=U){const F=Math.min(d+U,l),V=R.subarray(d,F);Z.push(String.fromCharCode.apply(null,V))}return Z.join("")}function nc(R){typeof R!="string"&&dl("Invalid argument for stringToBytes");const l=R.length,U=new Uint8Array(l);for(let Z=0;Z<l;++Z)U[Z]=R.charCodeAt(Z)&255;return U}function hb(R){return String.fromCharCode(R>>24&255,R>>16&255,R>>8&255,R&255)}function At(R){const l=Object.create(null);for(const[U,Z]of R)l[U]=Z;return l}function mb(){const R=new Uint8Array(4);return R[0]=1,new Uint32Array(R.buffer,0,1)[0]===1}function ib(){try{return new Function(""),!0}catch{return!1}}class $l{static get isLittleEndian(){return P(this,"isLittleEndian",mb())}static get isEvalSupported(){return P(this,"isEvalSupported",ib())}static get isOffscreenCanvasSupported(){return P(this,"isOffscreenCanvasSupported",typeof OffscreenCanvas<"u")}static get platform(){return typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.platform)=="string"?P(this,"platform",{isMac:navigator.platform.includes("Mac")}):P(this,"platform",{isMac:!1})}static get isCSSRoundSupported(){var l,U;return P(this,"isCSSRoundSupported",(U=(l=globalThis.CSS)==null?void 0:l.supports)==null?void 0:U.call(l,"width: round(1.5px, 1px)"))}}const Yc=Array.from(Array(256).keys(),R=>R.toString(16).padStart(2,"0"));var jZ,NW,oc;class k{static makeHexColor(l,U,Z){return`#${Yc[l]}${Yc[U]}${Yc[Z]}`}static scaleMinMax(l,U){let Z;l[0]?(l[0]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[0],U[2]*=l[0],l[3]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[3],U[3]*=l[3]):(Z=U[0],U[0]=U[1],U[1]=Z,Z=U[2],U[2]=U[3],U[3]=Z,l[1]<0&&(Z=U[1],U[1]=U[3],U[3]=Z),U[1]*=l[1],U[3]*=l[1],l[2]<0&&(Z=U[0],U[0]=U[2],U[2]=Z),U[0]*=l[2],U[2]*=l[2]),U[0]+=l[4],U[1]+=l[5],U[2]+=l[4],U[3]+=l[5]}static transform(l,U){return[l[0]*U[0]+l[2]*U[1],l[1]*U[0]+l[3]*U[1],l[0]*U[2]+l[2]*U[3],l[1]*U[2]+l[3]*U[3],l[0]*U[4]+l[2]*U[5]+l[4],l[1]*U[4]+l[3]*U[5]+l[5]]}static applyTransform(l,U){const Z=l[0]*U[0]+l[1]*U[2]+U[4],d=l[0]*U[1]+l[1]*U[3]+U[5];return[Z,d]}static applyInverseTransform(l,U){const Z=U[0]*U[3]-U[1]*U[2],d=(l[0]*U[3]-l[1]*U[2]+U[2]*U[5]-U[4]*U[3])/Z,F=(-l[0]*U[1]+l[1]*U[0]+U[4]*U[1]-U[5]*U[0])/Z;return[d,F]}static getAxialAlignedBoundingBox(l,U){const Z=this.applyTransform(l,U),d=this.applyTransform(l.slice(2,4),U),F=this.applyTransform([l[0],l[3]],U),V=this.applyTransform([l[2],l[1]],U);return[Math.min(Z[0],d[0],F[0],V[0]),Math.min(Z[1],d[1],F[1],V[1]),Math.max(Z[0],d[0],F[0],V[0]),Math.max(Z[1],d[1],F[1],V[1])]}static inverseTransform(l){const U=l[0]*l[3]-l[1]*l[2];return[l[3]/U,-l[1]/U,-l[2]/U,l[0]/U,(l[2]*l[5]-l[4]*l[3])/U,(l[4]*l[1]-l[5]*l[0])/U]}static singularValueDecompose2dScale(l){const U=[l[0],l[2],l[1],l[3]],Z=l[0]*U[0]+l[1]*U[2],d=l[0]*U[1]+l[1]*U[3],F=l[2]*U[0]+l[3]*U[2],V=l[2]*U[1]+l[3]*U[3],W=(Z+V)/2,c=Math.sqrt((Z+V)**2-4*(Z*V-F*d))/2,t=W+c||1,N=W-c||1;return[Math.sqrt(t),Math.sqrt(N)]}static normalizeRect(l){const U=l.slice(0);return l[0]>l[2]&&(U[0]=l[2],U[2]=l[0]),l[1]>l[3]&&(U[1]=l[3],U[3]=l[1]),U}static intersect(l,U){const Z=Math.max(Math.min(l[0],l[2]),Math.min(U[0],U[2])),d=Math.min(Math.max(l[0],l[2]),Math.max(U[0],U[2]));if(Z>d)return null;const F=Math.max(Math.min(l[1],l[3]),Math.min(U[1],U[3])),V=Math.min(Math.max(l[1],l[3]),Math.max(U[1],U[3]));return F>V?null:[Z,F,d,V]}static bezierBoundingBox(l,U,Z,d,F,V,W,c,t){return t?(t[0]=Math.min(t[0],l,W),t[1]=Math.min(t[1],U,c),t[2]=Math.max(t[2],l,W),t[3]=Math.max(t[3],U,c)):t=[Math.min(l,W),Math.min(U,c),Math.max(l,W),Math.max(U,c)],h(this,jZ,oc).call(this,l,Z,F,W,U,d,V,c,3*(-l+3*(Z-F)+W),6*(l-2*Z+F),3*(Z-l),t),h(this,jZ,oc).call(this,l,Z,F,W,U,d,V,c,3*(-U+3*(d-V)+c),6*(U-2*d+V),3*(d-U),t),t}}jZ=new WeakSet,NW=function(l,U,Z,d,F,V,W,c,t,N){if(t<=0||t>=1)return;const s=1-t,b=t*t,n=b*t,m=s*(s*(s*l+3*t*U)+3*b*Z)+n*d,M=s*(s*(s*F+3*t*V)+3*b*W)+n*c;N[0]=Math.min(N[0],m),N[1]=Math.min(N[1],M),N[2]=Math.max(N[2],m),N[3]=Math.max(N[3],M)},oc=function(l,U,Z,d,F,V,W,c,t,N,s,b){if(Math.abs(t)<1e-12){Math.abs(N)>=1e-12&&h(this,jZ,NW).call(this,l,U,Z,d,F,V,W,c,-s/N,b);return}const n=N**2-4*s*t;if(n<0)return;const m=Math.sqrt(n),M=2*t;h(this,jZ,NW).call(this,l,U,Z,d,F,V,W,c,(-N+m)/M,b),h(this,jZ,NW).call(this,l,U,Z,d,F,V,W,c,(-N-m)/M,b)},i(k,jZ);function Mb(R){return decodeURIComponent(escape(R))}let Xc=null,nR=null;function Jb(R){return Xc||(Xc=/([\u00a0\u00b5\u037e\u0eb3\u2000-\u200a\u202f\u2126\ufb00-\ufb04\ufb06\ufb20-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufba1\ufba4-\ufba9\ufbae-\ufbb1\ufbd3-\ufbdc\ufbde-\ufbe7\ufbea-\ufbf8\ufbfc-\ufbfd\ufc00-\ufc5d\ufc64-\ufcf1\ufcf5-\ufd3d\ufd88\ufdf4\ufdfa-\ufdfb\ufe71\ufe77\ufe79\ufe7b\ufe7d]+)|(\ufb05+)/gu,nR=new Map([["ﬅ","ſt"]])),R.replaceAll(Xc,(l,U,Z)=>U?U.normalize("NFKC"):nR.get(Z))}function Gb(){if(typeof crypto<"u"&&typeof(crypto==null?void 0:crypto.randomUUID)=="function")return crypto.randomUUID();const R=new Uint8Array(32);if(typeof crypto<"u"&&typeof(crypto==null?void 0:crypto.getRandomValues)=="function")crypto.getRandomValues(R);else for(let l=0;l<32;l++)R[l]=Math.floor(Math.random()*255);return jR(R)}const OR="pdfjs_internal_id_",WZ={BEZIER_CURVE_TO:0,MOVE_TO:1,LINE_TO:2,QUADRATIC_CURVE_TO:3,RESTORE:4,SAVE:5,SCALE:6,TRANSFORM:7,TRANSLATE:8};class ac{constructor(){this.constructor===ac&&dl("Cannot initialize BaseFilterFactory.")}addFilter(l){return"none"}addHCMFilter(l,U){return"none"}addAlphaFilter(l){return"none"}addLuminosityFilter(l){return"none"}addHighlightHCMFilter(l,U,Z,d,F){return"none"}destroy(l=!1){}}var bQ;const QR=class QR{constructor({enableHWA:l=!1}={}){i(this,bQ,!1);this.constructor===QR&&dl("Cannot initialize BaseCanvasFactory."),a(this,bQ,l)}create(l,U){if(l<=0||U<=0)throw new Error("Invalid canvas size");const Z=this._createCanvas(l,U);return{canvas:Z,context:Z.getContext("2d",{willReadFrequently:!Q(this,bQ)})}}reset(l,U,Z){if(!l.canvas)throw new Error("Canvas is not specified");if(U<=0||Z<=0)throw new Error("Invalid canvas size");l.canvas.width=U,l.canvas.height=Z}destroy(l){if(!l.canvas)throw new Error("Canvas is not specified");l.canvas.width=0,l.canvas.height=0,l.canvas=null,l.context=null}_createCanvas(l,U){dl("Abstract method `_createCanvas` called.")}};bQ=new WeakMap;let EW=QR;class hc{constructor({baseUrl:l=null,isCompressed:U=!0}){this.constructor===hc&&dl("Cannot initialize BaseCMapReaderFactory."),this.baseUrl=l,this.isCompressed=U}async fetch({name:l}){if(!this.baseUrl)throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');if(!l)throw new Error("CMap name must be specified.");const U=this.baseUrl+l+(this.isCompressed?".bcmap":""),Z=this.isCompressed?zc.BINARY:zc.NONE;return this._fetchData(U,Z).catch(d=>{throw new Error(`Unable to load ${this.isCompressed?"binary ":""}CMap at: ${U}`)})}_fetchData(l,U){dl("Abstract method `_fetchData` called.")}}class mc{constructor({baseUrl:l=null}){this.constructor===mc&&dl("Cannot initialize BaseStandardFontDataFactory."),this.baseUrl=l}async fetch({filename:l}){if(!this.baseUrl)throw new Error('The standard font "baseUrl" parameter must be specified, ensure that the "standardFontDataUrl" API parameter is provided.');if(!l)throw new Error("Font filename must be specified.");const U=`${this.baseUrl}${l}`;return this._fetchData(U).catch(Z=>{throw new Error(`Unable to load font data at: ${U}`)})}_fetchData(l){dl("Abstract method `_fetchData` called.")}}class _t{constructor(){this.constructor===_t&&dl("Cannot initialize BaseSVGFactory.")}create(l,U,Z=!1){if(l<=0||U<=0)throw new Error("Invalid SVG dimensions");const d=this._createSVG("svg:svg");return d.setAttribute("version","1.1"),Z||(d.setAttribute("width",`${l}px`),d.setAttribute("height",`${U}px`)),d.setAttribute("preserveAspectRatio","none"),d.setAttribute("viewBox",`0 0 ${l} ${U}`),d}createElement(l){if(typeof l!="string")throw new Error("Invalid SVG element type");return this._createSVG(l)}_createSVG(l){dl("Abstract method `_createSVG` called.")}}const tZ="http://www.w3.org/2000/svg",Xd=class Xd{};j(Xd,"CSS",96),j(Xd,"PDF",72),j(Xd,"PDF_TO_CSS_UNITS",Xd.CSS/Xd.PDF);let md=Xd;var ed,pd,xU,nZ,wl,gW,ud,L,El,CF,wF,sW,xF,rR,Dc,jF,H0,v0,Ic,P0;class Tb extends ac{constructor({docId:U,ownerDocument:Z=globalThis.document}={}){super();i(this,L);i(this,ed);i(this,pd);i(this,xU);i(this,nZ);i(this,wl);i(this,gW);i(this,ud,0);a(this,nZ,U),a(this,wl,Z)}addFilter(U){if(!U)return"none";let Z=Q(this,L,El).get(U);if(Z)return Z;const[d,F,V]=h(this,L,sW).call(this,U),W=U.length===1?d:`${d}${F}${V}`;if(Z=Q(this,L,El).get(W),Z)return Q(this,L,El).set(U,Z),Z;const c=`g_${Q(this,nZ)}_transfer_map_${ZU(this,ud)._++}`,t=h(this,L,xF).call(this,c);Q(this,L,El).set(U,t),Q(this,L,El).set(W,t);const N=h(this,L,jF).call(this,c);return h(this,L,v0).call(this,d,F,V,N),t}addHCMFilter(U,Z){var m;const d=`${U}-${Z}`,F="base";let V=Q(this,L,CF).get(F);if((V==null?void 0:V.key)===d||(V?((m=V.filter)==null||m.remove(),V.key=d,V.url="none",V.filter=null):(V={key:d,url:"none",filter:null},Q(this,L,CF).set(F,V)),!U||!Z))return V.url;const W=h(this,L,P0).call(this,U);U=k.makeHexColor(...W);const c=h(this,L,P0).call(this,Z);if(Z=k.makeHexColor(...c),Q(this,L,wF).style.color="",U==="#000000"&&Z==="#ffffff"||U===Z)return V.url;const t=new Array(256);for(let M=0;M<=255;M++){const G=M/255;t[M]=G<=.03928?G/12.92:((G+.055)/1.055)**2.4}const N=t.join(","),s=`g_${Q(this,nZ)}_hcm_filter`,b=V.filter=h(this,L,jF).call(this,s);h(this,L,v0).call(this,N,N,N,b),h(this,L,Dc).call(this,b);const n=(M,G)=>{const J=W[M]/255,T=c[M]/255,S=new Array(G+1);for(let Y=0;Y<=G;Y++)S[Y]=J+Y/G*(T-J);return S.join(",")};return h(this,L,v0).call(this,n(0,5),n(1,5),n(2,5),b),V.url=h(this,L,xF).call(this,s),V.url}addAlphaFilter(U){let Z=Q(this,L,El).get(U);if(Z)return Z;const[d]=h(this,L,sW).call(this,[U]),F=`alpha_${d}`;if(Z=Q(this,L,El).get(F),Z)return Q(this,L,El).set(U,Z),Z;const V=`g_${Q(this,nZ)}_alpha_map_${ZU(this,ud)._++}`,W=h(this,L,xF).call(this,V);Q(this,L,El).set(U,W),Q(this,L,El).set(F,W);const c=h(this,L,jF).call(this,V);return h(this,L,Ic).call(this,d,c),W}addLuminosityFilter(U){let Z=Q(this,L,El).get(U||"luminosity");if(Z)return Z;let d,F;if(U?([d]=h(this,L,sW).call(this,[U]),F=`luminosity_${d}`):F="luminosity",Z=Q(this,L,El).get(F),Z)return Q(this,L,El).set(U,Z),Z;const V=`g_${Q(this,nZ)}_luminosity_map_${ZU(this,ud)._++}`,W=h(this,L,xF).call(this,V);Q(this,L,El).set(U,W),Q(this,L,El).set(F,W);const c=h(this,L,jF).call(this,V);return h(this,L,rR).call(this,c),U&&h(this,L,Ic).call(this,d,c),W}addHighlightHCMFilter(U,Z,d,F,V){var T;const W=`${Z}-${d}-${F}-${V}`;let c=Q(this,L,CF).get(U);if((c==null?void 0:c.key)===W||(c?((T=c.filter)==null||T.remove(),c.key=W,c.url="none",c.filter=null):(c={key:W,url:"none",filter:null},Q(this,L,CF).set(U,c)),!Z||!d))return c.url;const[t,N]=[Z,d].map(h(this,L,P0).bind(this));let s=Math.round(.2126*t[0]+.7152*t[1]+.0722*t[2]),b=Math.round(.2126*N[0]+.7152*N[1]+.0722*N[2]),[n,m]=[F,V].map(h(this,L,P0).bind(this));b<s&&([s,b,n,m]=[b,s,m,n]),Q(this,L,wF).style.color="";const M=(S,Y,e)=>{const X=new Array(256),B=(b-s)/e,p=S/255,u=(Y-S)/(255*e);let I=0;for(let D=0;D<=e;D++){const A=Math.round(s+D*B),K=p+D*u;for(let ll=I;ll<=A;ll++)X[ll]=K;I=A+1}for(let D=I;D<256;D++)X[D]=X[I-1];return X.join(",")},G=`g_${Q(this,nZ)}_hcm_${U}_filter`,J=c.filter=h(this,L,jF).call(this,G);return h(this,L,Dc).call(this,J),h(this,L,v0).call(this,M(n[0],m[0],5),M(n[1],m[1],5),M(n[2],m[2],5),J),c.url=h(this,L,xF).call(this,G),c.url}destroy(U=!1){U&&Q(this,L,CF).size!==0||(Q(this,xU)&&(Q(this,xU).parentNode.parentNode.remove(),a(this,xU,null)),Q(this,pd)&&(Q(this,pd).clear(),a(this,pd,null)),a(this,ud,0))}}ed=new WeakMap,pd=new WeakMap,xU=new WeakMap,nZ=new WeakMap,wl=new WeakMap,gW=new WeakMap,ud=new WeakMap,L=new WeakSet,El=function(){return Q(this,pd)||a(this,pd,new Map)},CF=function(){return Q(this,gW)||a(this,gW,new Map)},wF=function(){if(!Q(this,xU)){const U=Q(this,wl).createElement("div"),{style:Z}=U;Z.visibility="hidden",Z.contain="strict",Z.width=Z.height=0,Z.position="absolute",Z.top=Z.left=0,Z.zIndex=-1;const d=Q(this,wl).createElementNS(tZ,"svg");d.setAttribute("width",0),d.setAttribute("height",0),a(this,xU,Q(this,wl).createElementNS(tZ,"defs")),U.append(d),d.append(Q(this,xU)),Q(this,wl).body.append(U)}return Q(this,xU)},sW=function(U){if(U.length===1){const t=U[0],N=new Array(256);for(let b=0;b<256;b++)N[b]=t[b]/255;const s=N.join(",");return[s,s,s]}const[Z,d,F]=U,V=new Array(256),W=new Array(256),c=new Array(256);for(let t=0;t<256;t++)V[t]=Z[t]/255,W[t]=d[t]/255,c[t]=F[t]/255;return[V.join(","),W.join(","),c.join(",")]},xF=function(U){if(Q(this,ed)===void 0){a(this,ed,"");const Z=Q(this,wl).URL;Z!==Q(this,wl).baseURI&&(Mc(Z)?O('#createUrl: ignore "data:"-URL for performance reasons.'):a(this,ed,Z.split("#",1)[0]))}return`url(${Q(this,ed)}#${U})`},rR=function(U){const Z=Q(this,wl).createElementNS(tZ,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0"),U.append(Z)},Dc=function(U){const Z=Q(this,wl).createElementNS(tZ,"feColorMatrix");Z.setAttribute("type","matrix"),Z.setAttribute("values","0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0"),U.append(Z)},jF=function(U){const Z=Q(this,wl).createElementNS(tZ,"filter");return Z.setAttribute("color-interpolation-filters","sRGB"),Z.setAttribute("id",U),Q(this,L,wF).append(Z),Z},H0=function(U,Z,d){const F=Q(this,wl).createElementNS(tZ,Z);F.setAttribute("type","discrete"),F.setAttribute("tableValues",d),U.append(F)},v0=function(U,Z,d,F){const V=Q(this,wl).createElementNS(tZ,"feComponentTransfer");F.append(V),h(this,L,H0).call(this,V,"feFuncR",U),h(this,L,H0).call(this,V,"feFuncG",Z),h(this,L,H0).call(this,V,"feFuncB",d)},Ic=function(U,Z){const d=Q(this,wl).createElementNS(tZ,"feComponentTransfer");Z.append(d),h(this,L,H0).call(this,d,"feFuncA",U)},P0=function(U){return Q(this,L,wF).style.color=U,UR(getComputedStyle(Q(this,L,wF)).getPropertyValue("color"))};class Sb extends EW{constructor({ownerDocument:l=globalThis.document,enableHWA:U=!1}={}){super({enableHWA:U}),this._document=l}_createCanvas(l,U){const Z=this._document.createElement("canvas");return Z.width=l,Z.height=U,Z}}async function ic(R,l="text"){if(f0(R,document.baseURI)){const U=await fetch(R);if(!U.ok)throw new Error(U.statusText);switch(l){case"arraybuffer":return U.arrayBuffer();case"blob":return U.blob();case"json":return U.json()}return U.text()}return new Promise((U,Z)=>{const d=new XMLHttpRequest;d.open("GET",R,!0),d.responseType=l,d.onreadystatechange=()=>{if(d.readyState===XMLHttpRequest.DONE){if(d.status===200||d.status===0){switch(l){case"arraybuffer":case"blob":case"json":U(d.response);return}U(d.responseText);return}Z(new Error(d.statusText))}},d.send(null)})}class gR extends hc{_fetchData(l,U){return ic(l,this.isCompressed?"arraybuffer":"text").then(Z=>({cMapData:Z instanceof ArrayBuffer?new Uint8Array(Z):nc(Z),compressionType:U}))}}class KR extends mc{_fetchData(l){return ic(l,"arraybuffer").then(U=>new Uint8Array(U))}}class qt extends _t{_createSVG(l){return document.createElementNS(tZ,l)}}class fV{constructor({viewBox:l,scale:U,rotation:Z,offsetX:d=0,offsetY:F=0,dontFlip:V=!1}){this.viewBox=l,this.scale=U,this.rotation=Z,this.offsetX=d,this.offsetY=F;const W=(l[2]+l[0])/2,c=(l[3]+l[1])/2;let t,N,s,b;switch(Z%=360,Z<0&&(Z+=360),Z){case 180:t=-1,N=0,s=0,b=1;break;case 90:t=0,N=1,s=1,b=0;break;case 270:t=0,N=-1,s=-1,b=0;break;case 0:t=1,N=0,s=0,b=-1;break;default:throw new Error("PageViewport: Invalid rotation, must be a multiple of 90 degrees.")}V&&(s=-s,b=-b);let n,m,M,G;t===0?(n=Math.abs(c-l[1])*U+d,m=Math.abs(W-l[0])*U+F,M=(l[3]-l[1])*U,G=(l[2]-l[0])*U):(n=Math.abs(W-l[0])*U+d,m=Math.abs(c-l[1])*U+F,M=(l[2]-l[0])*U,G=(l[3]-l[1])*U),this.transform=[t*U,N*U,s*U,b*U,n-t*U*W-s*U*c,m-N*U*W-b*U*c],this.width=M,this.height=G}get rawDims(){const{viewBox:l}=this;return P(this,"rawDims",{pageWidth:l[2]-l[0],pageHeight:l[3]-l[1],pageX:l[0],pageY:l[1]})}clone({scale:l=this.scale,rotation:U=this.rotation,offsetX:Z=this.offsetX,offsetY:d=this.offsetY,dontFlip:F=!1}={}){return new fV({viewBox:this.viewBox.slice(),scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:F})}convertToViewportPoint(l,U){return k.applyTransform([l,U],this.transform)}convertToViewportRectangle(l){const U=k.applyTransform([l[0],l[1]],this.transform),Z=k.applyTransform([l[2],l[3]],this.transform);return[U[0],U[1],Z[0],Z[1]]}convertToPdfPoint(l,U){return k.applyInverseTransform([l,U],this.transform)}}class $t extends Jd{constructor(l,U=0){super(l,"RenderingCancelledException"),this.extraDelay=U}}function Mc(R){const l=R.length;let U=0;for(;U<l&&R[U].trim()==="";)U++;return R.substring(U,U+5).toLowerCase()==="data:"}function lR(R){return typeof R=="string"&&/\.pdf$/i.test(R)}function Yb(R){return[R]=R.split(/[#?]/,1),R.substring(R.lastIndexOf("/")+1)}function Xb(R,l="document.pdf"){if(typeof R!="string")return l;if(Mc(R))return O('getPdfFilenameFromUrl: ignore "data:"-URL for performance reasons.'),l;const U=/^(?:(?:[^:]+:)?\/\/[^/]+)?([^?#]*)(\?[^#]*)?(#.*)?$/,Z=/[^/?#=]+\.pdf\b(?!.*\.pdf\b)/i,d=U.exec(R);let F=Z.exec(d[1])||Z.exec(d[2])||Z.exec(d[3]);if(F&&(F=F[0],F.includes("%")))try{F=Z.exec(decodeURIComponent(F))[0]}catch{}return F||l}class aR{constructor(){j(this,"started",Object.create(null));j(this,"times",[])}time(l){l in this.started&&O(`Timer is already running for ${l}`),this.started[l]=Date.now()}timeEnd(l){l in this.started||O(`Timer has not been started for ${l}`),this.times.push({name:l,start:this.started[l],end:Date.now()}),delete this.started[l]}toString(){const l=[];let U=0;for(const{name:Z}of this.times)U=Math.max(Z.length,U);for(const{name:Z,start:d,end:F}of this.times)l.push(`${Z.padEnd(U)} ${F-d}ms
`);return l.join("")}}function f0(R,l){try{const{protocol:U}=l?new URL(R,l):new URL(R);return U==="http:"||U==="https:"}catch{return!1}}function UU(R){R.preventDefault()}let hR;class HR{static toDateObject(l){if(!l||typeof l!="string")return null;hR||(hR=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));const U=hR.exec(l);if(!U)return null;const Z=parseInt(U[1],10);let d=parseInt(U[2],10);d=d>=1&&d<=12?d-1:0;let F=parseInt(U[3],10);F=F>=1&&F<=31?F:1;let V=parseInt(U[4],10);V=V>=0&&V<=23?V:0;let W=parseInt(U[5],10);W=W>=0&&W<=59?W:0;let c=parseInt(U[6],10);c=c>=0&&c<=59?c:0;const t=U[7]||"Z";let N=parseInt(U[8],10);N=N>=0&&N<=23?N:0;let s=parseInt(U[9],10)||0;return s=s>=0&&s<=59?s:0,t==="-"?(V+=N,W+=s):t==="+"&&(V-=N,W-=s),new Date(Date.UTC(Z,d,F,V,W,c))}}function Bb(R,{scale:l=1,rotation:U=0}){const{width:Z,height:d}=R.attributes.style,F=[0,0,parseInt(Z),parseInt(d)];return new fV({viewBox:F,scale:l,rotation:U})}function UR(R){if(R.startsWith("#")){const l=parseInt(R.slice(1),16);return[(l&16711680)>>16,(l&65280)>>8,l&255]}return R.startsWith("rgb(")?R.slice(4,-1).split(",").map(l=>parseInt(l)):R.startsWith("rgba(")?R.slice(5,-1).split(",").map(l=>parseInt(l)).slice(0,3):(O(`Not a valid color format: "${R}"`),[0,0,0])}function eb(R){const l=document.createElement("span");l.style.visibility="hidden",document.body.append(l);for(const U of R.keys()){l.style.color=U;const Z=window.getComputedStyle(l).color;R.set(U,UR(Z))}l.remove()}function Nl(R){const{a:l,b:U,c:Z,d,e:F,f:V}=R.getTransform();return[l,U,Z,d,F,V]}function cZ(R){const{a:l,b:U,c:Z,d,e:F,f:V}=R.getTransform().invertSelf();return[l,U,Z,d,F,V]}function BF(R,l,U=!1,Z=!0){if(l instanceof fV){const{pageWidth:d,pageHeight:F}=l.rawDims,{style:V}=R,W=$l.isCSSRoundSupported,c=`var(--scale-factor) * ${d}px`,t=`var(--scale-factor) * ${F}px`,N=W?`round(${c}, 1px)`:`calc(${c})`,s=W?`round(${t}, 1px)`:`calc(${t})`;!U||l.rotation%180===0?(V.width=N,V.height=s):(V.width=s,V.height=N)}Z&&R.setAttribute("data-main-rotation",l.rotation)}var yd,zd,QU,Ld,KW,vR,Pl,PR,fR,bW,AR,Cc;const HW=class HW{constructor(l){i(this,Pl);i(this,yd,null);i(this,zd,null);i(this,QU);i(this,Ld,null);a(this,QU,l)}render(){const l=a(this,yd,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar");const U=Q(this,QU)._uiManager._signal;l.addEventListener("contextmenu",UU,{signal:U}),l.addEventListener("pointerdown",h(HW,KW,vR),{signal:U});const Z=a(this,Ld,document.createElement("div"));Z.className="buttons",l.append(Z);const d=Q(this,QU).toolbarPosition;if(d){const{style:F}=l,V=Q(this,QU)._uiManager.direction==="ltr"?1-d[0]:d[0];F.insetInlineEnd=`${100*V}%`,F.top=`calc(${100*d[1]}% + var(--editor-toolbar-vert-offset))`}return h(this,Pl,AR).call(this),l}hide(){var l;Q(this,yd).classList.add("hidden"),(l=Q(this,zd))==null||l.hideDropdown()}show(){Q(this,yd).classList.remove("hidden")}addAltTextButton(l){h(this,Pl,bW).call(this,l),Q(this,Ld).prepend(l,Q(this,Pl,Cc))}addColorPicker(l){a(this,zd,l);const U=l.renderButton();h(this,Pl,bW).call(this,U),Q(this,Ld).prepend(U,Q(this,Pl,Cc))}remove(){var l;Q(this,yd).remove(),(l=Q(this,zd))==null||l.destroy(),a(this,zd,null)}};yd=new WeakMap,zd=new WeakMap,QU=new WeakMap,Ld=new WeakMap,KW=new WeakSet,vR=function(l){l.stopPropagation()},Pl=new WeakSet,PR=function(l){Q(this,QU)._focusEventsAllowed=!1,l.preventDefault(),l.stopPropagation()},fR=function(l){Q(this,QU)._focusEventsAllowed=!0,l.preventDefault(),l.stopPropagation()},bW=function(l){const U=Q(this,QU)._uiManager._signal;l.addEventListener("focusin",h(this,Pl,PR).bind(this),{capture:!0,signal:U}),l.addEventListener("focusout",h(this,Pl,fR).bind(this),{capture:!0,signal:U}),l.addEventListener("contextmenu",UU,{signal:U})},AR=function(){const l=document.createElement("button");l.className="delete",l.tabIndex=0,l.setAttribute("data-l10n-id",`pdfjs-editor-remove-${Q(this,QU).editorType}-button`),h(this,Pl,bW).call(this,l),l.addEventListener("click",U=>{Q(this,QU)._uiManager.delete()},{signal:Q(this,QU)._uiManager._signal}),Q(this,Ld).append(l)},Cc=function(){const l=document.createElement("div");return l.className="divider",l},i(HW,KW);let Ec=HW;var nQ,kd,od,id,_R,qR,$R;class pb{constructor(l){i(this,id);i(this,nQ,null);i(this,kd,null);i(this,od);a(this,od,l)}show(l,U,Z){const[d,F]=h(this,id,qR).call(this,U,Z),{style:V}=Q(this,kd)||a(this,kd,h(this,id,_R).call(this));l.append(Q(this,kd)),V.insetInlineEnd=`${100*d}%`,V.top=`calc(${100*F}% + var(--editor-toolbar-vert-offset))`}hide(){Q(this,kd).remove()}}nQ=new WeakMap,kd=new WeakMap,od=new WeakMap,id=new WeakSet,_R=function(){const l=a(this,kd,document.createElement("div"));l.className="editToolbar",l.setAttribute("role","toolbar"),l.addEventListener("contextmenu",UU,{signal:Q(this,od)._signal});const U=a(this,nQ,document.createElement("div"));return U.className="buttons",l.append(U),h(this,id,$R).call(this),l},qR=function(l,U){let Z=0,d=0;for(const F of l){const V=F.y+F.height;if(V<Z)continue;const W=F.x+(U?F.width:0);if(V>Z){d=W,Z=V;continue}U?W>d&&(d=W):W<d&&(d=W)}return[U?1-d:d,Z]},$R=function(){const l=document.createElement("button");l.className="highlightButton",l.tabIndex=0,l.setAttribute("data-l10n-id","pdfjs-highlight-floating-button1");const U=document.createElement("span");l.append(U),U.className="visuallyHidden",U.setAttribute("data-l10n-id","pdfjs-highlight-floating-button-label");const Z=Q(this,od)._signal;l.addEventListener("contextmenu",UU,{signal:Z}),l.addEventListener("click",()=>{Q(this,od).highlightSelection("floating_button")},{signal:Z}),Q(this,nQ).append(l)};function CW(R,l,U){for(const Z of U)l.addEventListener(Z,R[Z].bind(R))}function ub(R){return Math.round(Math.min(255,Math.max(1,255*R))).toString(16).padStart(2,"0")}var vW;class yb{constructor(){i(this,vW,0)}get id(){return`${cb}${ZU(this,vW)._++}`}}vW=new WeakMap;var aQ,PW,hU,hQ,xc;const VR=class VR{constructor(){i(this,hQ);i(this,aQ,Gb());i(this,PW,0);i(this,hU,null)}static get _isSVGFittingCanvas(){const l='data:image/svg+xml;charset=UTF-8,<svg viewBox="0 0 1 1" width="1" height="1" xmlns="http://www.w3.org/2000/svg"><rect width="1" height="1" style="fill:red;"/></svg>',Z=new OffscreenCanvas(1,3).getContext("2d",{willReadFrequently:!0}),d=new Image;d.src=l;const F=d.decode().then(()=>(Z.drawImage(d,0,0,1,1,0,0,1,3),new Uint32Array(Z.getImageData(0,0,1,1).data.buffer)[0]===0));return P(this,"_isSVGFittingCanvas",F)}async getFromFile(l){const{lastModified:U,name:Z,size:d,type:F}=l;return h(this,hQ,xc).call(this,`${U}_${Z}_${d}_${F}`,l)}async getFromUrl(l){return h(this,hQ,xc).call(this,l,l)}async getFromId(l){Q(this,hU)||a(this,hU,new Map);const U=Q(this,hU).get(l);return U?U.bitmap?(U.refCounter+=1,U):U.file?this.getFromFile(U.file):this.getFromUrl(U.url):null}getSvgUrl(l){const U=Q(this,hU).get(l);return U!=null&&U.isSvg?U.svgUrl:null}deleteId(l){Q(this,hU)||a(this,hU,new Map);const U=Q(this,hU).get(l);U&&(U.refCounter-=1,U.refCounter===0&&(U.bitmap=null))}isValidId(l){return l.startsWith(`image_${Q(this,aQ)}_`)}};aQ=new WeakMap,PW=new WeakMap,hU=new WeakMap,hQ=new WeakSet,xc=async function(l,U){Q(this,hU)||a(this,hU,new Map);let Z=Q(this,hU).get(l);if(Z===null)return null;if(Z!=null&&Z.bitmap)return Z.refCounter+=1,Z;try{Z||(Z={bitmap:null,id:`image_${Q(this,aQ)}_${ZU(this,PW)._++}`,refCounter:0,isSvg:!1});let d;if(typeof U=="string"?(Z.url=U,d=await ic(U,"blob")):d=Z.file=U,d.type==="image/svg+xml"){const F=VR._isSVGFittingCanvas,V=new FileReader,W=new Image,c=new Promise((t,N)=>{W.onload=()=>{Z.bitmap=W,Z.isSvg=!0,t()},V.onload=async()=>{const s=Z.svgUrl=V.result;W.src=await F?`${s}#svgView(preserveAspectRatio(none))`:s},W.onerror=V.onerror=N});V.readAsDataURL(d),await c}else Z.bitmap=await createImageBitmap(d);Z.refCounter=1}catch(d){console.error(d),Z=null}return Q(this,hU).set(l,Z),Z&&Q(this,hU).set(Z.id,Z),Z};let wc=VR;var Xl,AZ,mQ,Bl;class zb{constructor(l=128){i(this,Xl,[]);i(this,AZ,!1);i(this,mQ);i(this,Bl,-1);a(this,mQ,l)}add({cmd:l,undo:U,post:Z,mustExec:d,type:F=NaN,overwriteIfSameType:V=!1,keepUndo:W=!1}){if(d&&l(),Q(this,AZ))return;const c={cmd:l,undo:U,post:Z,type:F};if(Q(this,Bl)===-1){Q(this,Xl).length>0&&(Q(this,Xl).length=0),a(this,Bl,0),Q(this,Xl).push(c);return}if(V&&Q(this,Xl)[Q(this,Bl)].type===F){W&&(c.undo=Q(this,Xl)[Q(this,Bl)].undo),Q(this,Xl)[Q(this,Bl)]=c;return}const t=Q(this,Bl)+1;t===Q(this,mQ)?Q(this,Xl).splice(0,1):(a(this,Bl,t),t<Q(this,Xl).length&&Q(this,Xl).splice(t)),Q(this,Xl).push(c)}undo(){if(Q(this,Bl)===-1)return;a(this,AZ,!0);const{undo:l,post:U}=Q(this,Xl)[Q(this,Bl)];l(),U==null||U(),a(this,AZ,!1),a(this,Bl,Q(this,Bl)-1)}redo(){if(Q(this,Bl)<Q(this,Xl).length-1){a(this,Bl,Q(this,Bl)+1),a(this,AZ,!0);const{cmd:l,post:U}=Q(this,Xl)[Q(this,Bl)];l(),U==null||U(),a(this,AZ,!1)}}hasSomethingToUndo(){return Q(this,Bl)!==-1}hasSomethingToRedo(){return Q(this,Bl)<Q(this,Xl).length-1}destroy(){a(this,Xl,null)}}Xl=new WeakMap,AZ=new WeakMap,mQ=new WeakMap,Bl=new WeakMap;var fW,lN;class AV{constructor(l){i(this,fW);this.buffer=[],this.callbacks=new Map,this.allKeys=new Set;const{isMac:U}=$l.platform;for(const[Z,d,F={}]of l)for(const V of Z){const W=V.startsWith("mac+");U&&W?(this.callbacks.set(V.slice(4),{callback:d,options:F}),this.allKeys.add(V.split("+").at(-1))):!U&&!W&&(this.callbacks.set(V,{callback:d,options:F}),this.allKeys.add(V.split("+").at(-1)))}}exec(l,U){if(!this.allKeys.has(U.key))return;const Z=this.callbacks.get(h(this,fW,lN).call(this,U));if(!Z)return;const{callback:d,options:{bubbles:F=!1,args:V=[],checker:W=null}}=Z;W&&!W(l,U)||(d.bind(l,...V,U)(),F||(U.stopPropagation(),U.preventDefault()))}}fW=new WeakSet,lN=function(l){l.altKey&&this.buffer.push("alt"),l.ctrlKey&&this.buffer.push("ctrl"),l.metaKey&&this.buffer.push("meta"),l.shiftKey&&this.buffer.push("shift"),this.buffer.push(l.key);const U=this.buffer.join("+");return this.buffer.length=0,U};const AW=class AW{get _colors(){const l=new Map([["CanvasText",null],["Canvas",null]]);return eb(l),P(this,"_colors",l)}convert(l){const U=UR(l);if(!window.matchMedia("(forced-colors: active)").matches)return U;for(const[Z,d]of this._colors)if(d.every((F,V)=>F===U[V]))return AW._colorsMapping.get(Z);return U}getHexCode(l){const U=this._colors.get(l);return U?k.makeHexColor(...U):l}};j(AW,"_colorsMapping",new Map([["CanvasText",[0,0,0]],["Canvas",[255,255,255]]]));let jc=AW;var PF,VU,Ml,zl,fF,aZ,AF,YU,_F,Dd,jU,XU,Id,iQ,MQ,JQ,OU,qF,_Z,rU,_W,qZ,GQ,Ed,TQ,$F,el,Ul,hZ,Cd,SQ,YQ,XQ,BQ,eQ,pQ,uQ,yQ,zQ,LQ,kQ,oQ,DQ,$Z,gU,mZ,IQ,y,nW,Oc,UN,ZN,aW,dN,FN,QN,rc,VN,gc,Kc,WN,Kl,HZ,cN,tN,Hc,RN,A0,vc;const KF=class KF{constructor(l,U,Z,d,F,V,W,c,t,N){i(this,y);i(this,PF,new AbortController);i(this,VU,null);i(this,Ml,new Map);i(this,zl,new Map);i(this,fF,null);i(this,aZ,null);i(this,AF,null);i(this,YU,new zb);i(this,_F,0);i(this,Dd,new Set);i(this,jU,null);i(this,XU,null);i(this,Id,new Set);i(this,iQ,!1);i(this,MQ,!1);i(this,JQ,null);i(this,OU,null);i(this,qF,null);i(this,_Z,!1);i(this,rU,null);i(this,_W,new yb);i(this,qZ,!1);i(this,GQ,!1);i(this,Ed,null);i(this,TQ,null);i(this,$F,null);i(this,el,v.NONE);i(this,Ul,new Set);i(this,hZ,null);i(this,Cd,null);i(this,SQ,null);i(this,YQ,this.blur.bind(this));i(this,XQ,this.focus.bind(this));i(this,BQ,this.copy.bind(this));i(this,eQ,this.cut.bind(this));i(this,pQ,this.paste.bind(this));i(this,uQ,this.keydown.bind(this));i(this,yQ,this.keyup.bind(this));i(this,zQ,this.onEditingAction.bind(this));i(this,LQ,this.onPageChanging.bind(this));i(this,kQ,this.onScaleChanging.bind(this));i(this,oQ,this.onRotationChanging.bind(this));i(this,DQ,{isEditing:!1,isEmpty:!0,hasSomethingToUndo:!1,hasSomethingToRedo:!1,hasSelectedEditor:!1,hasSelectedText:!1});i(this,$Z,[0,0]);i(this,gU,null);i(this,mZ,null);i(this,IQ,null);this._signal=Q(this,PF).signal,a(this,mZ,l),a(this,IQ,U),a(this,fF,Z),this._eventBus=d,this._eventBus._on("editingaction",Q(this,zQ)),this._eventBus._on("pagechanging",Q(this,LQ)),this._eventBus._on("scalechanging",Q(this,kQ)),this._eventBus._on("rotationchanging",Q(this,oQ)),h(this,y,dN).call(this),h(this,y,WN).call(this),h(this,y,rc).call(this),a(this,aZ,F.annotationStorage),a(this,JQ,F.filterFactory),a(this,Cd,V),a(this,qF,W||null),a(this,iQ,c),a(this,MQ,t),a(this,$F,N||null),this.viewParameters={realScale:md.PDF_TO_CSS_UNITS,rotation:0},this.isShiftKeyDown=!1}static get _keyboardManager(){const l=KF.prototype,U=V=>Q(V,mZ).contains(document.activeElement)&&document.activeElement.tagName!=="BUTTON"&&V.hasSomethingToControl(),Z=(V,{target:W})=>{if(W instanceof HTMLInputElement){const{type:c}=W;return c!=="text"&&c!=="number"}return!0},d=this.TRANSLATE_SMALL,F=this.TRANSLATE_BIG;return P(this,"_keyboardManager",new AV([[["ctrl+a","mac+meta+a"],l.selectAll,{checker:Z}],[["ctrl+z","mac+meta+z"],l.undo,{checker:Z}],[["ctrl+y","ctrl+shift+z","mac+meta+shift+z","ctrl+shift+Z","mac+meta+shift+Z"],l.redo,{checker:Z}],[["Backspace","alt+Backspace","ctrl+Backspace","shift+Backspace","mac+Backspace","mac+alt+Backspace","mac+ctrl+Backspace","Delete","ctrl+Delete","shift+Delete","mac+Delete"],l.delete,{checker:Z}],[["Enter","mac+Enter"],l.addNewEditorFromKeyboard,{checker:(V,{target:W})=>!(W instanceof HTMLButtonElement)&&Q(V,mZ).contains(W)&&!V.isEnterHandled}],[[" ","mac+ "],l.addNewEditorFromKeyboard,{checker:(V,{target:W})=>!(W instanceof HTMLButtonElement)&&Q(V,mZ).contains(document.activeElement)}],[["Escape","mac+Escape"],l.unselectAll],[["ArrowLeft","mac+ArrowLeft"],l.translateSelectedEditors,{args:[-d,0],checker:U}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l.translateSelectedEditors,{args:[-F,0],checker:U}],[["ArrowRight","mac+ArrowRight"],l.translateSelectedEditors,{args:[d,0],checker:U}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l.translateSelectedEditors,{args:[F,0],checker:U}],[["ArrowUp","mac+ArrowUp"],l.translateSelectedEditors,{args:[0,-d],checker:U}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l.translateSelectedEditors,{args:[0,-F],checker:U}],[["ArrowDown","mac+ArrowDown"],l.translateSelectedEditors,{args:[0,d],checker:U}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l.translateSelectedEditors,{args:[0,F],checker:U}]]))}destroy(){var l,U,Z;(l=Q(this,PF))==null||l.abort(),a(this,PF,null),this._signal=null,this._eventBus._off("editingaction",Q(this,zQ)),this._eventBus._off("pagechanging",Q(this,LQ)),this._eventBus._off("scalechanging",Q(this,kQ)),this._eventBus._off("rotationchanging",Q(this,oQ));for(const d of Q(this,zl).values())d.destroy();Q(this,zl).clear(),Q(this,Ml).clear(),Q(this,Id).clear(),a(this,VU,null),Q(this,Ul).clear(),Q(this,YU).destroy(),(U=Q(this,fF))==null||U.destroy(),(Z=Q(this,rU))==null||Z.hide(),a(this,rU,null),Q(this,OU)&&(clearTimeout(Q(this,OU)),a(this,OU,null)),Q(this,gU)&&(clearTimeout(Q(this,gU)),a(this,gU,null))}async mlGuess(l){var U;return((U=Q(this,$F))==null?void 0:U.guess(l))||null}async isMLEnabledFor(l){var U;return!!await((U=Q(this,$F))==null?void 0:U.isEnabledFor(l))}get useNewAltTextFlow(){return Q(this,MQ)}get hcmFilter(){return P(this,"hcmFilter",Q(this,Cd)?Q(this,JQ).addHCMFilter(Q(this,Cd).foreground,Q(this,Cd).background):"none")}get direction(){return P(this,"direction",getComputedStyle(Q(this,mZ)).direction)}get highlightColors(){return P(this,"highlightColors",Q(this,qF)?new Map(Q(this,qF).split(",").map(l=>l.split("=").map(U=>U.trim()))):null)}get highlightColorNames(){return P(this,"highlightColorNames",this.highlightColors?new Map(Array.from(this.highlightColors,l=>l.reverse())):null)}setMainHighlightColorPicker(l){a(this,TQ,l)}editAltText(l){var U;(U=Q(this,fF))==null||U.editAltText(this,l)}switchToMode(l,U){this._eventBus.on("annotationeditormodechanged",U,{once:!0,signal:this._signal}),this._eventBus.dispatch("showannotationeditorui",{source:this,mode:l})}setPreference(l,U){this._eventBus.dispatch("setpreference",{source:this,name:l,value:U})}onPageChanging({pageNumber:l}){a(this,_F,l-1)}focusMainContainer(){Q(this,mZ).focus()}findParent(l,U){for(const Z of Q(this,zl).values()){const{x:d,y:F,width:V,height:W}=Z.div.getBoundingClientRect();if(l>=d&&l<=d+V&&U>=F&&U<=F+W)return Z}return null}disableUserSelect(l=!1){Q(this,IQ).classList.toggle("noUserSelect",l)}addShouldRescale(l){Q(this,Id).add(l)}removeShouldRescale(l){Q(this,Id).delete(l)}onScaleChanging({scale:l}){this.commitOrRemove(),this.viewParameters.realScale=l*md.PDF_TO_CSS_UNITS;for(const U of Q(this,Id))U.onScaleChanging()}onRotationChanging({pagesRotation:l}){this.commitOrRemove(),this.viewParameters.rotation=l}highlightSelection(l=""){const U=document.getSelection();if(!U||U.isCollapsed)return;const{anchorNode:Z,anchorOffset:d,focusNode:F,focusOffset:V}=U,W=U.toString(),t=h(this,y,nW).call(this,U).closest(".textLayer"),N=this.getSelectionBoxes(t);if(!N)return;U.empty();const s=h(this,y,Oc).call(this,t),b=Q(this,el)===v.NONE,n=()=>{s==null||s.createAndAddNewEditor({x:0,y:0},!1,{methodOfCreation:l,boxes:N,anchorNode:Z,anchorOffset:d,focusNode:F,focusOffset:V,text:W}),b&&this.showAllEditors("highlight",!0,!0)};if(b){this.switchToMode(v.HIGHLIGHT,n);return}n()}addToAnnotationStorage(l){!l.isEmpty()&&Q(this,aZ)&&!Q(this,aZ).has(l.id)&&Q(this,aZ).setValue(l.id,l)}blur(){if(this.isShiftKeyDown=!1,Q(this,_Z)&&(a(this,_Z,!1),h(this,y,aW).call(this,"main_toolbar")),!this.hasSelection)return;const{activeElement:l}=document;for(const U of Q(this,Ul))if(U.div.contains(l)){a(this,Ed,[U,l]),U._focusEventsAllowed=!1;break}}focus(){if(!Q(this,Ed))return;const[l,U]=Q(this,Ed);a(this,Ed,null),U.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:this._signal}),U.focus()}addEditListeners(){h(this,y,rc).call(this),h(this,y,gc).call(this)}removeEditListeners(){h(this,y,VN).call(this),h(this,y,Kc).call(this)}dragOver(l){for(const{type:U}of l.dataTransfer.items)for(const Z of Q(this,XU))if(Z.isHandlingMimeForPasting(U)){l.dataTransfer.dropEffect="copy",l.preventDefault();return}}drop(l){for(const U of l.dataTransfer.items)for(const Z of Q(this,XU))if(Z.isHandlingMimeForPasting(U.type)){Z.paste(U,this.currentLayer),l.preventDefault();return}}copy(l){var Z;if(l.preventDefault(),(Z=Q(this,VU))==null||Z.commitOrRemove(),!this.hasSelection)return;const U=[];for(const d of Q(this,Ul)){const F=d.serialize(!0);F&&U.push(F)}U.length!==0&&l.clipboardData.setData("application/pdfjs",JSON.stringify(U))}cut(l){this.copy(l),this.delete()}paste(l){l.preventDefault();const{clipboardData:U}=l;for(const F of U.items)for(const V of Q(this,XU))if(V.isHandlingMimeForPasting(F.type)){V.paste(F,this.currentLayer);return}let Z=U.getData("application/pdfjs");if(!Z)return;try{Z=JSON.parse(Z)}catch(F){O(`paste: "${F.message}".`);return}if(!Array.isArray(Z))return;this.unselectAll();const d=this.currentLayer;try{const F=[];for(const c of Z){const t=d.deserialize(c);if(!t)return;F.push(t)}const V=()=>{for(const c of F)h(this,y,Hc).call(this,c);h(this,y,vc).call(this,F)},W=()=>{for(const c of F)c.remove()};this.addCommands({cmd:V,undo:W,mustExec:!0})}catch(F){O(`paste: "${F.message}".`)}}keydown(l){!this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!0),Q(this,el)!==v.NONE&&!this.isEditorHandlingKeyboard&&KF._keyboardManager.exec(this,l)}keyup(l){this.isShiftKeyDown&&l.key==="Shift"&&(this.isShiftKeyDown=!1,Q(this,_Z)&&(a(this,_Z,!1),h(this,y,aW).call(this,"main_toolbar")))}onEditingAction({name:l}){switch(l){case"undo":case"redo":case"delete":case"selectAll":this[l]();break;case"highlightSelection":this.highlightSelection("context_menu");break}}setEditingState(l){l?(h(this,y,FN).call(this),h(this,y,gc).call(this),h(this,y,Kl).call(this,{isEditing:Q(this,el)!==v.NONE,isEmpty:h(this,y,A0).call(this),hasSomethingToUndo:Q(this,YU).hasSomethingToUndo(),hasSomethingToRedo:Q(this,YU).hasSomethingToRedo(),hasSelectedEditor:!1})):(h(this,y,QN).call(this),h(this,y,Kc).call(this),h(this,y,Kl).call(this,{isEditing:!1}),this.disableUserSelect(!1))}registerEditorTypes(l){if(!Q(this,XU)){a(this,XU,l);for(const U of Q(this,XU))h(this,y,HZ).call(this,U.defaultPropertiesToUpdate)}}getId(){return Q(this,_W).id}get currentLayer(){return Q(this,zl).get(Q(this,_F))}getLayer(l){return Q(this,zl).get(l)}get currentPageIndex(){return Q(this,_F)}addLayer(l){Q(this,zl).set(l.pageIndex,l),Q(this,qZ)?l.enable():l.disable()}removeLayer(l){Q(this,zl).delete(l.pageIndex)}updateMode(l,U=null,Z=!1){if(Q(this,el)!==l){if(a(this,el,l),l===v.NONE){this.setEditingState(!1),h(this,y,tN).call(this);return}this.setEditingState(!0),h(this,y,cN).call(this),this.unselectAll();for(const d of Q(this,zl).values())d.updateMode(l);if(!U&&Z){this.addNewEditorFromKeyboard();return}if(U){for(const d of Q(this,Ml).values())if(d.annotationElementId===U){this.setSelected(d),d.enterInEditMode();break}}}}addNewEditorFromKeyboard(){this.currentLayer.canCreateNewEmptyEditor()&&this.currentLayer.addNewEditor()}updateToolbar(l){l!==Q(this,el)&&this._eventBus.dispatch("switchannotationeditormode",{source:this,mode:l})}updateParams(l,U){var Z;if(Q(this,XU)){switch(l){case C.CREATE:this.currentLayer.addNewEditor();return;case C.HIGHLIGHT_DEFAULT_COLOR:(Z=Q(this,TQ))==null||Z.updateColor(U);break;case C.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:{type:"highlight",action:"toggle_visibility"}}}),(Q(this,SQ)||a(this,SQ,new Map)).set(l,U),this.showAllEditors("highlight",U);break}for(const d of Q(this,Ul))d.updateParams(l,U);for(const d of Q(this,XU))d.updateDefaultParams(l,U)}}showAllEditors(l,U,Z=!1){var F;for(const V of Q(this,Ml).values())V.editorType===l&&V.show(U);(((F=Q(this,SQ))==null?void 0:F.get(C.HIGHLIGHT_SHOW_ALL))??!0)!==U&&h(this,y,HZ).call(this,[[C.HIGHLIGHT_SHOW_ALL,U]])}enableWaiting(l=!1){if(Q(this,GQ)!==l){a(this,GQ,l);for(const U of Q(this,zl).values())l?U.disableClick():U.enableClick(),U.div.classList.toggle("waiting",l)}}getEditors(l){const U=[];for(const Z of Q(this,Ml).values())Z.pageIndex===l&&U.push(Z);return U}getEditor(l){return Q(this,Ml).get(l)}addEditor(l){Q(this,Ml).set(l.id,l)}removeEditor(l){var U;l.div.contains(document.activeElement)&&(Q(this,OU)&&clearTimeout(Q(this,OU)),a(this,OU,setTimeout(()=>{this.focusMainContainer(),a(this,OU,null)},0))),Q(this,Ml).delete(l.id),this.unselect(l),(!l.annotationElementId||!Q(this,Dd).has(l.annotationElementId))&&((U=Q(this,aZ))==null||U.remove(l.id))}addDeletedAnnotationElement(l){Q(this,Dd).add(l.annotationElementId),this.addChangedExistingAnnotation(l),l.deleted=!0}isDeletedAnnotationElement(l){return Q(this,Dd).has(l)}removeDeletedAnnotationElement(l){Q(this,Dd).delete(l.annotationElementId),this.removeChangedExistingAnnotation(l),l.deleted=!1}setActiveEditor(l){Q(this,VU)!==l&&(a(this,VU,l),l&&h(this,y,HZ).call(this,l.propertiesToUpdate))}updateUI(l){Q(this,y,RN)===l&&h(this,y,HZ).call(this,l.propertiesToUpdate)}toggleSelected(l){if(Q(this,Ul).has(l)){Q(this,Ul).delete(l),l.unselect(),h(this,y,Kl).call(this,{hasSelectedEditor:this.hasSelection});return}Q(this,Ul).add(l),l.select(),h(this,y,HZ).call(this,l.propertiesToUpdate),h(this,y,Kl).call(this,{hasSelectedEditor:!0})}setSelected(l){for(const U of Q(this,Ul))U!==l&&U.unselect();Q(this,Ul).clear(),Q(this,Ul).add(l),l.select(),h(this,y,HZ).call(this,l.propertiesToUpdate),h(this,y,Kl).call(this,{hasSelectedEditor:!0})}isSelected(l){return Q(this,Ul).has(l)}get firstSelectedEditor(){return Q(this,Ul).values().next().value}unselect(l){l.unselect(),Q(this,Ul).delete(l),h(this,y,Kl).call(this,{hasSelectedEditor:this.hasSelection})}get hasSelection(){return Q(this,Ul).size!==0}get isEnterHandled(){return Q(this,Ul).size===1&&this.firstSelectedEditor.isEnterHandled}undo(){Q(this,YU).undo(),h(this,y,Kl).call(this,{hasSomethingToUndo:Q(this,YU).hasSomethingToUndo(),hasSomethingToRedo:!0,isEmpty:h(this,y,A0).call(this)})}redo(){Q(this,YU).redo(),h(this,y,Kl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:Q(this,YU).hasSomethingToRedo(),isEmpty:h(this,y,A0).call(this)})}addCommands(l){Q(this,YU).add(l),h(this,y,Kl).call(this,{hasSomethingToUndo:!0,hasSomethingToRedo:!1,isEmpty:h(this,y,A0).call(this)})}delete(){if(this.commitOrRemove(),!this.hasSelection)return;const l=[...Q(this,Ul)],U=()=>{for(const d of l)d.remove()},Z=()=>{for(const d of l)h(this,y,Hc).call(this,d)};this.addCommands({cmd:U,undo:Z,mustExec:!0})}commitOrRemove(){var l;(l=Q(this,VU))==null||l.commitOrRemove()}hasSomethingToControl(){return Q(this,VU)||this.hasSelection}selectAll(){for(const l of Q(this,Ul))l.commit();h(this,y,vc).call(this,Q(this,Ml).values())}unselectAll(){if(!(Q(this,VU)&&(Q(this,VU).commitOrRemove(),Q(this,el)!==v.NONE))&&this.hasSelection){for(const l of Q(this,Ul))l.unselect();Q(this,Ul).clear(),h(this,y,Kl).call(this,{hasSelectedEditor:!1})}}translateSelectedEditors(l,U,Z=!1){if(Z||this.commitOrRemove(),!this.hasSelection)return;Q(this,$Z)[0]+=l,Q(this,$Z)[1]+=U;const[d,F]=Q(this,$Z),V=[...Q(this,Ul)],W=1e3;Q(this,gU)&&clearTimeout(Q(this,gU)),a(this,gU,setTimeout(()=>{a(this,gU,null),Q(this,$Z)[0]=Q(this,$Z)[1]=0,this.addCommands({cmd:()=>{for(const c of V)Q(this,Ml).has(c.id)&&c.translateInPage(d,F)},undo:()=>{for(const c of V)Q(this,Ml).has(c.id)&&c.translateInPage(-d,-F)},mustExec:!1})},W));for(const c of V)c.translateInPage(l,U)}setUpDragSession(){if(this.hasSelection){this.disableUserSelect(!0),a(this,jU,new Map);for(const l of Q(this,Ul))Q(this,jU).set(l,{savedX:l.x,savedY:l.y,savedPageIndex:l.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!Q(this,jU))return!1;this.disableUserSelect(!1);const l=Q(this,jU);a(this,jU,null);let U=!1;for(const[{x:d,y:F,pageIndex:V},W]of l)W.newX=d,W.newY=F,W.newPageIndex=V,U||(U=d!==W.savedX||F!==W.savedY||V!==W.savedPageIndex);if(!U)return!1;const Z=(d,F,V,W)=>{if(Q(this,Ml).has(d.id)){const c=Q(this,zl).get(W);c?d._setParentAndPosition(c,F,V):(d.pageIndex=W,d.x=F,d.y=V)}};return this.addCommands({cmd:()=>{for(const[d,{newX:F,newY:V,newPageIndex:W}]of l)Z(d,F,V,W)},undo:()=>{for(const[d,{savedX:F,savedY:V,savedPageIndex:W}]of l)Z(d,F,V,W)},mustExec:!0}),!0}dragSelectedEditors(l,U){if(Q(this,jU))for(const Z of Q(this,jU).keys())Z.drag(l,U)}rebuild(l){if(l.parent===null){const U=this.getLayer(l.pageIndex);U?(U.changeParent(l),U.addOrRebuild(l)):(this.addEditor(l),this.addToAnnotationStorage(l),l.rebuild())}else l.parent.addOrRebuild(l)}get isEditorHandlingKeyboard(){var l;return((l=this.getActive())==null?void 0:l.shouldGetKeyboardEvents())||Q(this,Ul).size===1&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(l){return Q(this,VU)===l}getActive(){return Q(this,VU)}getMode(){return Q(this,el)}get imageManager(){return P(this,"imageManager",new wc)}getSelectionBoxes(l){if(!l)return null;const U=document.getSelection();for(let t=0,N=U.rangeCount;t<N;t++)if(!l.contains(U.getRangeAt(t).commonAncestorContainer))return null;const{x:Z,y:d,width:F,height:V}=l.getBoundingClientRect();let W;switch(l.getAttribute("data-main-rotation")){case"90":W=(t,N,s,b)=>({x:(N-d)/V,y:1-(t+s-Z)/F,width:b/V,height:s/F});break;case"180":W=(t,N,s,b)=>({x:1-(t+s-Z)/F,y:1-(N+b-d)/V,width:s/F,height:b/V});break;case"270":W=(t,N,s,b)=>({x:1-(N+b-d)/V,y:(t-Z)/F,width:b/V,height:s/F});break;default:W=(t,N,s,b)=>({x:(t-Z)/F,y:(N-d)/V,width:s/F,height:b/V});break}const c=[];for(let t=0,N=U.rangeCount;t<N;t++){const s=U.getRangeAt(t);if(!s.collapsed)for(const{x:b,y:n,width:m,height:M}of s.getClientRects())m===0||M===0||c.push(W(b,n,m,M))}return c.length===0?null:c}addChangedExistingAnnotation({annotationElementId:l,id:U}){(Q(this,AF)||a(this,AF,new Map)).set(l,U)}removeChangedExistingAnnotation({annotationElementId:l}){var U;(U=Q(this,AF))==null||U.delete(l)}renderAnnotationElement(l){var d;const U=(d=Q(this,AF))==null?void 0:d.get(l.data.id);if(!U)return;const Z=Q(this,aZ).getRawValue(U);Z&&(Q(this,el)===v.NONE&&!Z.hasBeenModified||Z.renderAnnotationElement(l))}};PF=new WeakMap,VU=new WeakMap,Ml=new WeakMap,zl=new WeakMap,fF=new WeakMap,aZ=new WeakMap,AF=new WeakMap,YU=new WeakMap,_F=new WeakMap,Dd=new WeakMap,jU=new WeakMap,XU=new WeakMap,Id=new WeakMap,iQ=new WeakMap,MQ=new WeakMap,JQ=new WeakMap,OU=new WeakMap,qF=new WeakMap,_Z=new WeakMap,rU=new WeakMap,_W=new WeakMap,qZ=new WeakMap,GQ=new WeakMap,Ed=new WeakMap,TQ=new WeakMap,$F=new WeakMap,el=new WeakMap,Ul=new WeakMap,hZ=new WeakMap,Cd=new WeakMap,SQ=new WeakMap,YQ=new WeakMap,XQ=new WeakMap,BQ=new WeakMap,eQ=new WeakMap,pQ=new WeakMap,uQ=new WeakMap,yQ=new WeakMap,zQ=new WeakMap,LQ=new WeakMap,kQ=new WeakMap,oQ=new WeakMap,DQ=new WeakMap,$Z=new WeakMap,gU=new WeakMap,mZ=new WeakMap,IQ=new WeakMap,y=new WeakSet,nW=function({anchorNode:l}){return l.nodeType===Node.TEXT_NODE?l.parentElement:l},Oc=function(l){const{currentLayer:U}=this;if(U.hasTextLayer(l))return U;for(const Z of Q(this,zl).values())if(Z.hasTextLayer(l))return Z;return null},UN=function(){const l=document.getSelection();if(!l||l.isCollapsed)return;const Z=h(this,y,nW).call(this,l).closest(".textLayer"),d=this.getSelectionBoxes(Z);d&&(Q(this,rU)||a(this,rU,new pb(this)),Q(this,rU).show(Z,d,this.direction==="ltr"))},ZN=function(){var F,V,W;const l=document.getSelection();if(!l||l.isCollapsed){Q(this,hZ)&&((F=Q(this,rU))==null||F.hide(),a(this,hZ,null),h(this,y,Kl).call(this,{hasSelectedText:!1}));return}const{anchorNode:U}=l;if(U===Q(this,hZ))return;const d=h(this,y,nW).call(this,l).closest(".textLayer");if(!d){Q(this,hZ)&&((V=Q(this,rU))==null||V.hide(),a(this,hZ,null),h(this,y,Kl).call(this,{hasSelectedText:!1}));return}if((W=Q(this,rU))==null||W.hide(),a(this,hZ,U),h(this,y,Kl).call(this,{hasSelectedText:!0}),!(Q(this,el)!==v.HIGHLIGHT&&Q(this,el)!==v.NONE)&&(Q(this,el)===v.HIGHLIGHT&&this.showAllEditors("highlight",!0,!0),a(this,_Z,this.isShiftKeyDown),!this.isShiftKeyDown)){const c=Q(this,el)===v.HIGHLIGHT?h(this,y,Oc).call(this,d):null;c==null||c.toggleDrawing();const t=this._signal,N=s=>{s.type==="pointerup"&&s.button!==0||(c==null||c.toggleDrawing(!0),window.removeEventListener("pointerup",N),window.removeEventListener("blur",N),s.type==="pointerup"&&h(this,y,aW).call(this,"main_toolbar"))};window.addEventListener("pointerup",N,{signal:t}),window.addEventListener("blur",N,{signal:t})}},aW=function(l=""){Q(this,el)===v.HIGHLIGHT?this.highlightSelection(l):Q(this,iQ)&&h(this,y,UN).call(this)},dN=function(){document.addEventListener("selectionchange",h(this,y,ZN).bind(this),{signal:this._signal})},FN=function(){const l=this._signal;window.addEventListener("focus",Q(this,XQ),{signal:l}),window.addEventListener("blur",Q(this,YQ),{signal:l})},QN=function(){window.removeEventListener("focus",Q(this,XQ)),window.removeEventListener("blur",Q(this,YQ))},rc=function(){const l=this._signal;window.addEventListener("keydown",Q(this,uQ),{signal:l}),window.addEventListener("keyup",Q(this,yQ),{signal:l})},VN=function(){window.removeEventListener("keydown",Q(this,uQ)),window.removeEventListener("keyup",Q(this,yQ))},gc=function(){const l=this._signal;document.addEventListener("copy",Q(this,BQ),{signal:l}),document.addEventListener("cut",Q(this,eQ),{signal:l}),document.addEventListener("paste",Q(this,pQ),{signal:l})},Kc=function(){document.removeEventListener("copy",Q(this,BQ)),document.removeEventListener("cut",Q(this,eQ)),document.removeEventListener("paste",Q(this,pQ))},WN=function(){const l=this._signal;document.addEventListener("dragover",this.dragOver.bind(this),{signal:l}),document.addEventListener("drop",this.drop.bind(this),{signal:l})},Kl=function(l){Object.entries(l).some(([Z,d])=>Q(this,DQ)[Z]!==d)&&(this._eventBus.dispatch("annotationeditorstateschanged",{source:this,details:Object.assign(Q(this,DQ),l)}),Q(this,el)===v.HIGHLIGHT&&l.hasSelectedEditor===!1&&h(this,y,HZ).call(this,[[C.HIGHLIGHT_FREE,!0]]))},HZ=function(l){this._eventBus.dispatch("annotationeditorparamschanged",{source:this,details:l})},cN=function(){if(!Q(this,qZ)){a(this,qZ,!0);for(const l of Q(this,zl).values())l.enable();for(const l of Q(this,Ml).values())l.enable()}},tN=function(){if(this.unselectAll(),Q(this,qZ)){a(this,qZ,!1);for(const l of Q(this,zl).values())l.disable();for(const l of Q(this,Ml).values())l.disable()}},Hc=function(l){const U=Q(this,zl).get(l.pageIndex);U?U.addOrRebuild(l):(this.addEditor(l),this.addToAnnotationStorage(l))},RN=function(){let l=null;for(l of Q(this,Ul));return l},A0=function(){if(Q(this,Ml).size===0)return!0;if(Q(this,Ml).size===1)for(const l of Q(this,Ml).values())return l.isEmpty();return!1},vc=function(l){for(const U of Q(this,Ul))U.unselect();Q(this,Ul).clear();for(const U of l)U.isEmpty()||(Q(this,Ul).add(U),U.select());h(this,y,Kl).call(this,{hasSelectedEditor:this.hasSelection})},j(KF,"TRANSLATE_SMALL",1),j(KF,"TRANSLATE_BIG",10);let eF=KF;var iZ,MZ,BU,JZ,WU,l0,eU,EQ,Pc;const RZ=class RZ{constructor(l){i(this,EQ);i(this,iZ,"");i(this,MZ,!1);i(this,BU,null);i(this,JZ,null);i(this,WU,null);i(this,l0,!1);i(this,eU,null);a(this,eU,l)}static initialize(l){RZ._l10nPromise||(RZ._l10nPromise=l)}async render(){const l=a(this,BU,document.createElement("button"));l.className="altText";const U=await RZ._l10nPromise.get("pdfjs-editor-alt-text-button-label");l.textContent=U,l.setAttribute("aria-label",U),l.tabIndex="0";const Z=Q(this,eU)._uiManager._signal;l.addEventListener("contextmenu",UU,{signal:Z}),l.addEventListener("pointerdown",F=>F.stopPropagation(),{signal:Z});const d=F=>{F.preventDefault(),Q(this,eU)._uiManager.editAltText(Q(this,eU))};return l.addEventListener("click",d,{capture:!0,signal:Z}),l.addEventListener("keydown",F=>{F.target===l&&F.key==="Enter"&&(a(this,l0,!0),d(F))},{signal:Z}),await h(this,EQ,Pc).call(this),l}finish(){Q(this,BU)&&(Q(this,BU).focus({focusVisible:Q(this,l0)}),a(this,l0,!1))}isEmpty(){return!Q(this,iZ)&&!Q(this,MZ)}get data(){return{altText:Q(this,iZ),decorative:Q(this,MZ)}}set data({altText:l,decorative:U}){Q(this,iZ)===l&&Q(this,MZ)===U||(a(this,iZ,l),a(this,MZ,U),h(this,EQ,Pc).call(this))}toggle(l=!1){Q(this,BU)&&(!l&&Q(this,WU)&&(clearTimeout(Q(this,WU)),a(this,WU,null)),Q(this,BU).disabled=!l)}destroy(){var l;(l=Q(this,BU))==null||l.remove(),a(this,BU,null),a(this,JZ,null)}};iZ=new WeakMap,MZ=new WeakMap,BU=new WeakMap,JZ=new WeakMap,WU=new WeakMap,l0=new WeakMap,eU=new WeakMap,EQ=new WeakSet,Pc=async function(){var d;const l=Q(this,BU);if(!l)return;if(!Q(this,iZ)&&!Q(this,MZ)){l.classList.remove("done"),(d=Q(this,JZ))==null||d.remove();return}l.classList.add("done"),RZ._l10nPromise.get("pdfjs-editor-alt-text-edit-button-label").then(F=>{l.setAttribute("aria-label",F)});let U=Q(this,JZ);if(!U){a(this,JZ,U=document.createElement("span")),U.className="tooltip",U.setAttribute("role","tooltip");const F=U.id=`alt-text-tooltip-${Q(this,eU).id}`;l.setAttribute("aria-describedby",F);const V=100,W=Q(this,eU)._uiManager._signal;W.addEventListener("abort",()=>{clearTimeout(Q(this,WU)),a(this,WU,null)},{once:!0}),l.addEventListener("mouseenter",()=>{a(this,WU,setTimeout(()=>{a(this,WU,null),Q(this,JZ).classList.add("show"),Q(this,eU)._reportTelemetry({action:"alt_text_tooltip"})},V))},{signal:W}),l.addEventListener("mouseleave",()=>{var c;Q(this,WU)&&(clearTimeout(Q(this,WU)),a(this,WU,null)),(c=Q(this,JZ))==null||c.classList.remove("show")},{signal:W})}U.innerText=Q(this,MZ)?await RZ._l10nPromise.get("pdfjs-editor-alt-text-decorative-tooltip"):Q(this,iZ),U.parentNode||l.append(U);const Z=Q(this,eU).getImageForAltText();Z==null||Z.setAttribute("aria-describedby",U.id)},j(RZ,"_l10nPromise",null);let wW=RZ;var wd,pU,xl,U0,xd,Ll,jd,Z0,d0,jl,CQ,Od,ld,wQ,rd,GZ,KU,F0,Q0,mU,xQ,qW,r,fc,jQ,Ac,_c,NN,sN,qc,$c,lt,bN,nN,aN,hN,Ut,_0;const Ql=class Ql{constructor(l){i(this,r);i(this,wd,null);i(this,pU,null);i(this,xl,null);i(this,U0,!1);i(this,xd,!1);i(this,Ll,null);i(this,jd,null);i(this,Z0,this.focusin.bind(this));i(this,d0,this.focusout.bind(this));i(this,jl,null);i(this,CQ,"");i(this,Od,!1);i(this,ld,null);i(this,wQ,!1);i(this,rd,!1);i(this,GZ,!1);i(this,KU,null);i(this,F0,0);i(this,Q0,0);i(this,mU,null);j(this,"_initialOptions",Object.create(null));j(this,"_isVisible",!0);j(this,"_uiManager",null);j(this,"_focusEventsAllowed",!0);j(this,"_l10nPromise",null);i(this,xQ,!1);i(this,qW,Ql._zIndex++);this.constructor===Ql&&dl("Cannot initialize AnnotationEditor."),this.parent=l.parent,this.id=l.id,this.width=this.height=null,this.pageIndex=l.parent.pageIndex,this.name=l.name,this.div=null,this._uiManager=l.uiManager,this.annotationElementId=null,this._willKeepAspectRatio=!1,this._initialOptions.isCentered=l.isCentered,this._structTreeParentId=null;const{rotation:U,rawDims:{pageWidth:Z,pageHeight:d,pageX:F,pageY:V}}=this.parent.viewport;this.rotation=U,this.pageRotation=(360+U-this._uiManager.viewParameters.rotation)%360,this.pageDimensions=[Z,d],this.pageTranslation=[F,V];const[W,c]=this.parentDimensions;this.x=l.x/W,this.y=l.y/c,this.isAttachedToDOM=!1,this.deleted=!1}static get _resizerKeyboardManager(){const l=Ql.prototype._resizeWithKeyboard,U=eF.TRANSLATE_SMALL,Z=eF.TRANSLATE_BIG;return P(this,"_resizerKeyboardManager",new AV([[["ArrowLeft","mac+ArrowLeft"],l,{args:[-U,0]}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],l,{args:[-Z,0]}],[["ArrowRight","mac+ArrowRight"],l,{args:[U,0]}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],l,{args:[Z,0]}],[["ArrowUp","mac+ArrowUp"],l,{args:[0,-U]}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],l,{args:[0,-Z]}],[["ArrowDown","mac+ArrowDown"],l,{args:[0,U]}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],l,{args:[0,Z]}],[["Escape","mac+Escape"],Ql.prototype._stopResizingWithKeyboard]]))}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get _defaultLineColor(){return P(this,"_defaultLineColor",this._colorManager.getHexCode("CanvasText"))}static deleteAnnotationElement(l){const U=new Lb({id:l.parent.getNextId(),parent:l.parent,uiManager:l._uiManager});U.annotationElementId=l.annotationElementId,U.deleted=!0,U._uiManager.addToAnnotationStorage(U)}static initialize(l,U,Z){if(Ql._l10nPromise||(Ql._l10nPromise=new Map(["pdfjs-editor-alt-text-button-label","pdfjs-editor-alt-text-edit-button-label","pdfjs-editor-alt-text-decorative-tooltip","pdfjs-editor-resizer-label-topLeft","pdfjs-editor-resizer-label-topMiddle","pdfjs-editor-resizer-label-topRight","pdfjs-editor-resizer-label-middleRight","pdfjs-editor-resizer-label-bottomRight","pdfjs-editor-resizer-label-bottomMiddle","pdfjs-editor-resizer-label-bottomLeft","pdfjs-editor-resizer-label-middleLeft"].map(F=>[F,l.get(F.replaceAll(/([A-Z])/g,V=>`-${V.toLowerCase()}`))]))),Z!=null&&Z.strings)for(const F of Z.strings)Ql._l10nPromise.set(F,l.get(F));if(Ql._borderLineWidth!==-1)return;const d=getComputedStyle(document.documentElement);Ql._borderLineWidth=parseFloat(d.getPropertyValue("--outline-width"))||0}static updateDefaultParams(l,U){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(l){return!1}static paste(l,U){dl("Not implemented")}get propertiesToUpdate(){return[]}get _isDraggable(){return Q(this,xQ)}set _isDraggable(l){var U;a(this,xQ,l),(U=this.div)==null||U.classList.toggle("draggable",l)}get isEnterHandled(){return!0}center(){const[l,U]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*U/(l*2),this.y+=this.width*l/(U*2);break;case 180:this.x+=this.width/2,this.y+=this.height/2;break;case 270:this.x+=this.height*U/(l*2),this.y-=this.width*l/(U*2);break;default:this.x-=this.width/2,this.y-=this.height/2;break}this.fixAndSetPosition()}addCommands(l){this._uiManager.addCommands(l)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=Q(this,qW)}setParent(l){l!==null?(this.pageIndex=l.pageIndex,this.pageDimensions=l.pageDimensions):h(this,r,_0).call(this),this.parent=l}focusin(l){this._focusEventsAllowed&&(Q(this,Od)?a(this,Od,!1):this.parent.setSelected(this))}focusout(l){var Z;if(!this._focusEventsAllowed||!this.isAttachedToDOM)return;const U=l.relatedTarget;U!=null&&U.closest(`#${this.id}`)||(l.preventDefault(),(Z=this.parent)!=null&&Z.isMultipleSelection||this.commitOrRemove())}commitOrRemove(){this.isEmpty()?this.remove():this.commit()}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(l,U,Z,d){const[F,V]=this.parentDimensions;[Z,d]=this.screenToPageTranslation(Z,d),this.x=(l+Z)/F,this.y=(U+d)/V,this.fixAndSetPosition()}translate(l,U){h(this,r,fc).call(this,this.parentDimensions,l,U)}translateInPage(l,U){Q(this,ld)||a(this,ld,[this.x,this.y]),h(this,r,fc).call(this,this.pageDimensions,l,U),this.div.scrollIntoView({block:"nearest"})}drag(l,U){Q(this,ld)||a(this,ld,[this.x,this.y]);const[Z,d]=this.parentDimensions;if(this.x+=l/Z,this.y+=U/d,this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:t,y:N}=this.div.getBoundingClientRect();this.parent.findNewParent(this,t,N)&&(this.x-=Math.floor(this.x),this.y-=Math.floor(this.y))}let{x:F,y:V}=this;const[W,c]=this.getBaseTranslation();F+=W,V+=c,this.div.style.left=`${(100*F).toFixed(2)}%`,this.div.style.top=`${(100*V).toFixed(2)}%`,this.div.scrollIntoView({block:"nearest"})}get _hasBeenMoved(){return!!Q(this,ld)&&(Q(this,ld)[0]!==this.x||Q(this,ld)[1]!==this.y)}getBaseTranslation(){const[l,U]=this.parentDimensions,{_borderLineWidth:Z}=Ql,d=Z/l,F=Z/U;switch(this.rotation){case 90:return[-d,F];case 180:return[d,F];case 270:return[d,-F];default:return[-d,-F]}}get _mustFixPosition(){return!0}fixAndSetPosition(l=this.rotation){const[U,Z]=this.pageDimensions;let{x:d,y:F,width:V,height:W}=this;if(V*=U,W*=Z,d*=U,F*=Z,this._mustFixPosition)switch(l){case 0:d=Math.max(0,Math.min(U-V,d)),F=Math.max(0,Math.min(Z-W,F));break;case 90:d=Math.max(0,Math.min(U-W,d)),F=Math.min(Z,Math.max(V,F));break;case 180:d=Math.min(U,Math.max(V,d)),F=Math.min(Z,Math.max(W,F));break;case 270:d=Math.min(U,Math.max(W,d)),F=Math.max(0,Math.min(Z-V,F));break}this.x=d/=U,this.y=F/=Z;const[c,t]=this.getBaseTranslation();d+=c,F+=t;const{style:N}=this.div;N.left=`${(100*d).toFixed(2)}%`,N.top=`${(100*F).toFixed(2)}%`,this.moveInDOM()}screenToPageTranslation(l,U){var Z;return h(Z=Ql,jQ,Ac).call(Z,l,U,this.parentRotation)}pageTranslationToScreen(l,U){var Z;return h(Z=Ql,jQ,Ac).call(Z,l,U,360-this.parentRotation)}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:l,pageDimensions:[U,Z]}=this,d=U*l,F=Z*l;return $l.isCSSRoundSupported?[Math.round(d),Math.round(F)]:[d,F]}setDims(l,U){const[Z,d]=this.parentDimensions;this.div.style.width=`${(100*l/Z).toFixed(2)}%`,Q(this,xd)||(this.div.style.height=`${(100*U/d).toFixed(2)}%`)}fixDims(){const{style:l}=this.div,{height:U,width:Z}=l,d=Z.endsWith("%"),F=!Q(this,xd)&&U.endsWith("%");if(d&&F)return;const[V,W]=this.parentDimensions;d||(l.width=`${(100*parseFloat(Z)/V).toFixed(2)}%`),!Q(this,xd)&&!F&&(l.height=`${(100*parseFloat(U)/W).toFixed(2)}%`)}getInitialTranslation(){return[0,0]}altTextFinish(){var l;(l=Q(this,xl))==null||l.finish()}async addEditToolbar(){return Q(this,jl)||Q(this,rd)?Q(this,jl):(a(this,jl,new Ec(this)),this.div.append(Q(this,jl).render()),Q(this,xl)&&Q(this,jl).addAltTextButton(await Q(this,xl).render()),Q(this,jl))}removeEditToolbar(){var l;Q(this,jl)&&(Q(this,jl).remove(),a(this,jl,null),(l=Q(this,xl))==null||l.destroy())}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){Q(this,xl)||(wW.initialize(Ql._l10nPromise),a(this,xl,new wW(this)),Q(this,wd)&&(Q(this,xl).data=Q(this,wd),a(this,wd,null)),await this.addEditToolbar())}get altTextData(){var l;return(l=Q(this,xl))==null?void 0:l.data}set altTextData(l){Q(this,xl)&&(Q(this,xl).data=l)}hasAltText(){var l;return!((l=Q(this,xl))!=null&&l.isEmpty())}render(){this.div=document.createElement("div"),this.div.setAttribute("data-editor-rotation",(360-this.rotation)%360),this.div.className=this.name,this.div.setAttribute("id",this.id),this.div.tabIndex=Q(this,U0)?-1:0,this._isVisible||this.div.classList.add("hidden"),this.setInForeground();const l=this._uiManager._signal;this.div.addEventListener("focusin",Q(this,Z0),{signal:l}),this.div.addEventListener("focusout",Q(this,d0),{signal:l});const[U,Z]=this.parentDimensions;this.parentRotation%180!==0&&(this.div.style.maxWidth=`${(100*Z/U).toFixed(2)}%`,this.div.style.maxHeight=`${(100*U/Z).toFixed(2)}%`);const[d,F]=this.getInitialTranslation();return this.translate(d,F),CW(this,this.div,["pointerdown"]),this.div}pointerdown(l){const{isMac:U}=$l.platform;if(l.button!==0||l.ctrlKey&&U){l.preventDefault();return}if(a(this,Od,!0),this._isDraggable){h(this,r,bN).call(this,l);return}h(this,r,lt).call(this,l)}moveInDOM(){Q(this,KU)&&clearTimeout(Q(this,KU)),a(this,KU,setTimeout(()=>{var l;a(this,KU,null),(l=this.parent)==null||l.moveEditorInDOM(this)},0))}_setParentAndPosition(l,U,Z){l.changeParent(this),this.x=U,this.y=Z,this.fixAndSetPosition()}getRect(l,U,Z=this.rotation){const d=this.parentScale,[F,V]=this.pageDimensions,[W,c]=this.pageTranslation,t=l/d,N=U/d,s=this.x*F,b=this.y*V,n=this.width*F,m=this.height*V;switch(Z){case 0:return[s+t+W,V-b-N-m+c,s+t+n+W,V-b-N+c];case 90:return[s+N+W,V-b+t+c,s+N+m+W,V-b+t+n+c];case 180:return[s-t-n+W,V-b+N+c,s-t+W,V-b+N+m+c];case 270:return[s-N-m+W,V-b-t-n+c,s-N+W,V-b-t+c];default:throw new Error("Invalid rotation")}}getRectInCurrentCoords(l,U){const[Z,d,F,V]=l,W=F-Z,c=V-d;switch(this.rotation){case 0:return[Z,U-V,W,c];case 90:return[Z,U-d,c,W];case 180:return[F,U-d,W,c];case 270:return[F,U-V,c,W];default:throw new Error("Invalid rotation")}}onceAdded(){}isEmpty(){return!1}enableEditMode(){a(this,rd,!0)}disableEditMode(){a(this,rd,!1)}isInEditMode(){return Q(this,rd)}shouldGetKeyboardEvents(){return Q(this,GZ)}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}rebuild(){var U,Z;const l=this._uiManager._signal;(U=this.div)==null||U.addEventListener("focusin",Q(this,Z0),{signal:l}),(Z=this.div)==null||Z.addEventListener("focusout",Q(this,d0),{signal:l})}rotate(l){}serialize(l=!1,U=null){dl("An editor must be serializable")}static deserialize(l,U,Z){const d=new this.prototype.constructor({parent:U,id:U.getNextId(),uiManager:Z});d.rotation=l.rotation,a(d,wd,l.accessibilityData);const[F,V]=d.pageDimensions,[W,c,t,N]=d.getRectInCurrentCoords(l.rect,V);return d.x=W/F,d.y=c/V,d.width=t/F,d.height=N/V,d}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||this.serialize()!==null)}remove(){if(this.div.removeEventListener("focusin",Q(this,Z0)),this.div.removeEventListener("focusout",Q(this,d0)),this.isEmpty()||this.commit(),this.parent?this.parent.remove(this):this._uiManager.removeEditor(this),Q(this,KU)&&(clearTimeout(Q(this,KU)),a(this,KU,null)),h(this,r,_0).call(this),this.removeEditToolbar(),Q(this,mU)){for(const l of Q(this,mU).values())clearTimeout(l);a(this,mU,null)}this.parent=null}get isResizable(){return!1}makeResizable(){this.isResizable&&(h(this,r,NN).call(this),Q(this,Ll).classList.remove("hidden"),CW(this,this.div,["keydown"]))}get toolbarPosition(){return null}keydown(l){if(!this.isResizable||l.target!==this.div||l.key!=="Enter")return;this._uiManager.setSelected(this),a(this,jd,{savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height});const U=Q(this,Ll).children;if(!Q(this,pU)){a(this,pU,Array.from(U));const V=h(this,r,nN).bind(this),W=h(this,r,aN).bind(this),c=this._uiManager._signal;for(const t of Q(this,pU)){const N=t.getAttribute("data-resizer-name");t.setAttribute("role","spinbutton"),t.addEventListener("keydown",V,{signal:c}),t.addEventListener("blur",W,{signal:c}),t.addEventListener("focus",h(this,r,hN).bind(this,N),{signal:c}),Ql._l10nPromise.get(`pdfjs-editor-resizer-label-${N}`).then(s=>t.setAttribute("aria-label",s))}}const Z=Q(this,pU)[0];let d=0;for(const V of U){if(V===Z)break;d++}const F=(360-this.rotation+this.parentRotation)%360/90*(Q(this,pU).length/4);if(F!==d){if(F<d)for(let W=0;W<d-F;W++)Q(this,Ll).append(Q(this,Ll).firstChild);else if(F>d)for(let W=0;W<F-d;W++)Q(this,Ll).firstChild.before(Q(this,Ll).lastChild);let V=0;for(const W of U){const t=Q(this,pU)[V++].getAttribute("data-resizer-name");Ql._l10nPromise.get(`pdfjs-editor-resizer-label-${t}`).then(N=>W.setAttribute("aria-label",N))}}h(this,r,Ut).call(this,0),a(this,GZ,!0),Q(this,Ll).firstChild.focus({focusVisible:!0}),l.preventDefault(),l.stopImmediatePropagation()}_resizeWithKeyboard(l,U){Q(this,GZ)&&h(this,r,$c).call(this,Q(this,CQ),{movementX:l,movementY:U})}_stopResizingWithKeyboard(){h(this,r,_0).call(this),this.div.focus()}select(){var l,U;if(this.makeResizable(),(l=this.div)==null||l.classList.add("selectedEditor"),!Q(this,jl)){this.addEditToolbar().then(()=>{var Z,d;(Z=this.div)!=null&&Z.classList.contains("selectedEditor")&&((d=Q(this,jl))==null||d.show())});return}(U=Q(this,jl))==null||U.show()}unselect(){var l,U,Z,d;(l=Q(this,Ll))==null||l.classList.add("hidden"),(U=this.div)==null||U.classList.remove("selectedEditor"),(Z=this.div)!=null&&Z.contains(document.activeElement)&&this._uiManager.currentLayer.div.focus({preventScroll:!0}),(d=Q(this,jl))==null||d.hide()}updateParams(l,U){}disableEditing(){}enableEditing(){}enterInEditMode(){}getImageForAltText(){return null}get contentDiv(){return this.div}get isEditing(){return Q(this,wQ)}set isEditing(l){a(this,wQ,l),this.parent&&(l?(this.parent.setSelected(this),this.parent.setActiveEditor(this)):this.parent.setActiveEditor(null))}setAspectRatio(l,U){a(this,xd,!0);const Z=l/U,{style:d}=this.div;d.aspectRatio=Z,d.height="auto"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return!0}get telemetryInitialData(){return{action:"added"}}get telemetryFinalData(){return null}_reportTelemetry(l,U=!1){if(U){Q(this,mU)||a(this,mU,new Map);const{action:Z}=l;let d=Q(this,mU).get(Z);d&&clearTimeout(d),d=setTimeout(()=>{this._reportTelemetry(l),Q(this,mU).delete(Z),Q(this,mU).size===0&&a(this,mU,null)},Ql._telemetryTimeout),Q(this,mU).set(Z,d);return}l.type||(l.type=this.editorType),this._uiManager._eventBus.dispatch("reporttelemetry",{source:this,details:{type:"editing",data:l}})}show(l=this._isVisible){this.div.classList.toggle("hidden",!l),this._isVisible=l}enable(){this.div&&(this.div.tabIndex=0),a(this,U0,!1)}disable(){this.div&&(this.div.tabIndex=-1),a(this,U0,!0)}renderAnnotationElement(l){let U=l.container.querySelector(".annotationContent");if(!U)U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),l.container.prepend(U);else if(U.nodeName==="CANVAS"){const Z=U;U=document.createElement("div"),U.classList.add("annotationContent",this.editorType),Z.before(U)}return U}resetAnnotationElement(l){const{firstChild:U}=l.container;U.nodeName==="DIV"&&U.classList.contains("annotationContent")&&U.remove()}};wd=new WeakMap,pU=new WeakMap,xl=new WeakMap,U0=new WeakMap,xd=new WeakMap,Ll=new WeakMap,jd=new WeakMap,Z0=new WeakMap,d0=new WeakMap,jl=new WeakMap,CQ=new WeakMap,Od=new WeakMap,ld=new WeakMap,wQ=new WeakMap,rd=new WeakMap,GZ=new WeakMap,KU=new WeakMap,F0=new WeakMap,Q0=new WeakMap,mU=new WeakMap,xQ=new WeakMap,qW=new WeakMap,r=new WeakSet,fc=function([l,U],Z,d){[Z,d]=this.screenToPageTranslation(Z,d),this.x+=Z/l,this.y+=d/U,this.fixAndSetPosition()},jQ=new WeakSet,Ac=function(l,U,Z){switch(Z){case 90:return[U,-l];case 180:return[-l,-U];case 270:return[-U,l];default:return[l,U]}},_c=function(l){switch(l){case 90:{const[U,Z]=this.pageDimensions;return[0,-U/Z,Z/U,0]}case 180:return[-1,0,0,-1];case 270:{const[U,Z]=this.pageDimensions;return[0,U/Z,-Z/U,0]}default:return[1,0,0,1]}},NN=function(){if(Q(this,Ll))return;a(this,Ll,document.createElement("div")),Q(this,Ll).classList.add("resizers");const l=this._willKeepAspectRatio?["topLeft","topRight","bottomRight","bottomLeft"]:["topLeft","topMiddle","topRight","middleRight","bottomRight","bottomMiddle","bottomLeft","middleLeft"],U=this._uiManager._signal;for(const Z of l){const d=document.createElement("div");Q(this,Ll).append(d),d.classList.add("resizer",Z),d.setAttribute("data-resizer-name",Z),d.addEventListener("pointerdown",h(this,r,sN).bind(this,Z),{signal:U}),d.addEventListener("contextmenu",UU,{signal:U}),d.tabIndex=-1}this.div.prepend(Q(this,Ll))},sN=function(l,U){var M;U.preventDefault();const{isMac:Z}=$l.platform;if(U.button!==0||U.ctrlKey&&Z)return;(M=Q(this,xl))==null||M.toggle(!1);const d=h(this,r,$c).bind(this,l),F=this._isDraggable;this._isDraggable=!1;const V=this._uiManager._signal,W={passive:!0,capture:!0,signal:V};this.parent.togglePointerEvents(!1),window.addEventListener("pointermove",d,W),window.addEventListener("contextmenu",UU,{signal:V});const c=this.x,t=this.y,N=this.width,s=this.height,b=this.parent.div.style.cursor,n=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(U.target).cursor;const m=()=>{var G;this.parent.togglePointerEvents(!0),(G=Q(this,xl))==null||G.toggle(!0),this._isDraggable=F,window.removeEventListener("pointerup",m),window.removeEventListener("blur",m),window.removeEventListener("pointermove",d,W),window.removeEventListener("contextmenu",UU),this.parent.div.style.cursor=b,this.div.style.cursor=n,h(this,r,qc).call(this,c,t,N,s)};window.addEventListener("pointerup",m,{signal:V}),window.addEventListener("blur",m,{signal:V})},qc=function(l,U,Z,d){const F=this.x,V=this.y,W=this.width,c=this.height;F===l&&V===U&&W===Z&&c===d||this.addCommands({cmd:()=>{this.width=W,this.height=c,this.x=F,this.y=V;const[t,N]=this.parentDimensions;this.setDims(t*W,N*c),this.fixAndSetPosition()},undo:()=>{this.width=Z,this.height=d,this.x=l,this.y=U;const[t,N]=this.parentDimensions;this.setDims(t*Z,N*d),this.fixAndSetPosition()},mustExec:!0})},$c=function(l,U){const[Z,d]=this.parentDimensions,F=this.x,V=this.y,W=this.width,c=this.height,t=Ql.MIN_SIZE/Z,N=Ql.MIN_SIZE/d,s=E=>Math.round(E*1e4)/1e4,b=h(this,r,_c).call(this,this.rotation),n=(E,w)=>[b[0]*E+b[2]*w,b[1]*E+b[3]*w],m=h(this,r,_c).call(this,360-this.rotation),M=(E,w)=>[m[0]*E+m[2]*w,m[1]*E+m[3]*w];let G,J,T=!1,S=!1;switch(l){case"topLeft":T=!0,G=(E,w)=>[0,0],J=(E,w)=>[E,w];break;case"topMiddle":G=(E,w)=>[E/2,0],J=(E,w)=>[E/2,w];break;case"topRight":T=!0,G=(E,w)=>[E,0],J=(E,w)=>[0,w];break;case"middleRight":S=!0,G=(E,w)=>[E,w/2],J=(E,w)=>[0,w/2];break;case"bottomRight":T=!0,G=(E,w)=>[E,w],J=(E,w)=>[0,0];break;case"bottomMiddle":G=(E,w)=>[E/2,w],J=(E,w)=>[E/2,0];break;case"bottomLeft":T=!0,G=(E,w)=>[0,w],J=(E,w)=>[E,0];break;case"middleLeft":S=!0,G=(E,w)=>[0,w/2],J=(E,w)=>[E,w/2];break}const Y=G(W,c),e=J(W,c);let X=n(...e);const B=s(F+X[0]),p=s(V+X[1]);let u=1,I=1,[D,A]=this.screenToPageTranslation(U.movementX,U.movementY);if([D,A]=M(D/Z,A/d),T){const E=Math.hypot(W,c);u=I=Math.max(Math.min(Math.hypot(e[0]-Y[0]-D,e[1]-Y[1]-A)/E,1/W,1/c),t/W,N/c)}else S?u=Math.max(t,Math.min(1,Math.abs(e[0]-Y[0]-D)))/W:I=Math.max(N,Math.min(1,Math.abs(e[1]-Y[1]-A)))/c;const K=s(W*u),ll=s(c*I);X=n(...J(K,ll));const _=B-X[0],cl=p-X[1];this.width=K,this.height=ll,this.x=_,this.y=cl,this.setDims(Z*K,d*ll),this.fixAndSetPosition()},lt=function(l){const{isMac:U}=$l.platform;l.ctrlKey&&!U||l.shiftKey||l.metaKey&&U?this.parent.toggleSelected(this):this.parent.setSelected(this)},bN=function(l){const U=this._uiManager.isSelected(this);this._uiManager.setUpDragSession();let Z,d;const F=this._uiManager._signal;U&&(this.div.classList.add("moving"),Z={passive:!0,capture:!0,signal:F},a(this,F0,l.clientX),a(this,Q0,l.clientY),d=W=>{const{clientX:c,clientY:t}=W,[N,s]=this.screenToPageTranslation(c-Q(this,F0),t-Q(this,Q0));a(this,F0,c),a(this,Q0,t),this._uiManager.dragSelectedEditors(N,s)},window.addEventListener("pointermove",d,Z));const V=()=>{window.removeEventListener("pointerup",V),window.removeEventListener("blur",V),U&&(this.div.classList.remove("moving"),window.removeEventListener("pointermove",d,Z)),a(this,Od,!1),this._uiManager.endDragSession()||h(this,r,lt).call(this,l)};window.addEventListener("pointerup",V,{signal:F}),window.addEventListener("blur",V,{signal:F})},nN=function(l){Ql._resizerKeyboardManager.exec(this,l)},aN=function(l){var U;Q(this,GZ)&&((U=l.relatedTarget)==null?void 0:U.parentNode)!==Q(this,Ll)&&h(this,r,_0).call(this)},hN=function(l){a(this,CQ,Q(this,GZ)?l:"")},Ut=function(l){if(Q(this,pU))for(const U of Q(this,pU))U.tabIndex=l},_0=function(){if(a(this,GZ,!1),h(this,r,Ut).call(this,-1),Q(this,jd)){const{savedX:l,savedY:U,savedWidth:Z,savedHeight:d}=Q(this,jd);h(this,r,qc).call(this,l,U,Z,d),a(this,jd,null)}},i(Ql,jQ),j(Ql,"_borderLineWidth",-1),j(Ql,"_colorManager",new jc),j(Ql,"_zIndex",1),j(Ql,"_telemetryTimeout",1e3);let $=Ql;class Lb extends ${constructor(l){super(l),this.annotationElementId=l.annotationElementId,this.deleted=!0}serialize(){return{id:this.annotationElementId,deleted:!0,pageIndex:this.pageIndex}}}const mR=3285377520,aU=4294901760,wU=65535;class mN{constructor(l){this.h1=l?l&4294967295:mR,this.h2=l?l&4294967295:mR}update(l){let U,Z;if(typeof l=="string"){U=new Uint8Array(l.length*2),Z=0;for(let M=0,G=l.length;M<G;M++){const J=l.charCodeAt(M);J<=255?U[Z++]=J:(U[Z++]=J>>>8,U[Z++]=J&255)}}else if(ArrayBuffer.isView(l))U=l.slice(),Z=U.byteLength;else throw new Error("Invalid data format, must be a string or TypedArray.");const d=Z>>2,F=Z-d*4,V=new Uint32Array(U.buffer,0,d);let W=0,c=0,t=this.h1,N=this.h2;const s=3432918353,b=461845907,n=s&wU,m=b&wU;for(let M=0;M<d;M++)M&1?(W=V[M],W=W*s&aU|W*n&wU,W=W<<15|W>>>17,W=W*b&aU|W*m&wU,t^=W,t=t<<13|t>>>19,t=t*5+3864292196):(c=V[M],c=c*s&aU|c*n&wU,c=c<<15|c>>>17,c=c*b&aU|c*m&wU,N^=c,N=N<<13|N>>>19,N=N*5+3864292196);switch(W=0,F){case 3:W^=U[d*4+2]<<16;case 2:W^=U[d*4+1]<<8;case 1:W^=U[d*4],W=W*s&aU|W*n&wU,W=W<<15|W>>>17,W=W*b&aU|W*m&wU,d&1?t^=W:N^=W}this.h1=t,this.h2=N}hexdigest(){let l=this.h1,U=this.h2;return l^=U>>>1,l=l*3981806797&aU|l*36045&wU,U=U*4283543511&aU|((U<<16|l>>>16)*2950163797&aU)>>>16,l^=U>>>1,l=l*444984403&aU|l*60499&wU,U=U*3301882366&aU|((U<<16|l>>>16)*3120437893&aU)>>>16,l^=U>>>1,(l>>>0).toString(16).padStart(8,"0")+(U>>>0).toString(16).padStart(8,"0")}}const Zt=Object.freeze({map:null,hash:"",transfer:void 0});var gd,Kd,pl,$W,iN;class ZR{constructor(){i(this,$W);i(this,gd,!1);i(this,Kd,null);i(this,pl,new Map);this.onSetModified=null,this.onResetModified=null,this.onAnnotationEditor=null}getValue(l,U){const Z=Q(this,pl).get(l);return Z===void 0?U:Object.assign(U,Z)}getRawValue(l){return Q(this,pl).get(l)}remove(l){if(Q(this,pl).delete(l),Q(this,pl).size===0&&this.resetModified(),typeof this.onAnnotationEditor=="function"){for(const U of Q(this,pl).values())if(U instanceof $)return;this.onAnnotationEditor(null)}}setValue(l,U){const Z=Q(this,pl).get(l);let d=!1;if(Z!==void 0)for(const[F,V]of Object.entries(U))Z[F]!==V&&(d=!0,Z[F]=V);else d=!0,Q(this,pl).set(l,U);d&&h(this,$W,iN).call(this),U instanceof $&&typeof this.onAnnotationEditor=="function"&&this.onAnnotationEditor(U.constructor._type)}has(l){return Q(this,pl).has(l)}getAll(){return Q(this,pl).size>0?At(Q(this,pl)):null}setAll(l){for(const[U,Z]of Object.entries(l))this.setValue(U,Z)}get size(){return Q(this,pl).size}resetModified(){Q(this,gd)&&(a(this,gd,!1),typeof this.onResetModified=="function"&&this.onResetModified())}get print(){return new MN(this)}get serializable(){if(Q(this,pl).size===0)return Zt;const l=new Map,U=new mN,Z=[],d=Object.create(null);let F=!1;for(const[V,W]of Q(this,pl)){const c=W instanceof $?W.serialize(!1,d):W;c&&(l.set(V,c),U.update(`${V}:${JSON.stringify(c)}`),F||(F=!!c.bitmap))}if(F)for(const V of l.values())V.bitmap&&Z.push(V.bitmap);return l.size>0?{map:l,hash:U.hexdigest(),transfer:Z}:Zt}get editorStats(){let l=null;const U=new Map;for(const Z of Q(this,pl).values()){if(!(Z instanceof $))continue;const d=Z.telemetryFinalData;if(!d)continue;const{type:F}=d;U.has(F)||U.set(F,Object.getPrototypeOf(Z).constructor),l||(l=Object.create(null));const V=l[F]||(l[F]=new Map);for(const[W,c]of Object.entries(d)){if(W==="type")continue;let t=V.get(W);t||(t=new Map,V.set(W,t));const N=t.get(c)??0;t.set(c,N+1)}}for(const[Z,d]of U)l[Z]=d.computeTelemetryFinalData(l[Z]);return l}resetModifiedIds(){a(this,Kd,null)}get modifiedIds(){if(Q(this,Kd))return Q(this,Kd);const l=[];for(const U of Q(this,pl).values())!(U instanceof $)||!U.annotationElementId||!U.serialize()||l.push(U.annotationElementId);return a(this,Kd,{ids:new Set(l),hash:l.join(",")})}}gd=new WeakMap,Kd=new WeakMap,pl=new WeakMap,$W=new WeakSet,iN=function(){Q(this,gd)||(a(this,gd,!0),typeof this.onSetModified=="function"&&this.onSetModified())};var OQ;class MN extends ZR{constructor(U){super();i(this,OQ);const{map:Z,hash:d,transfer:F}=U.serializable,V=structuredClone(Z,F?{transfer:F}:null);a(this,OQ,{map:V,hash:d,transfer:F})}get print(){dl("Should not call PrintAnnotationStorage.print")}get serializable(){return Q(this,OQ)}get modifiedIds(){return P(this,"modifiedIds",{ids:new Set,hash:""})}}OQ=new WeakMap;var V0;class kb{constructor({ownerDocument:l=globalThis.document,styleElement:U=null}){i(this,V0,new Set);this._document=l,this.nativeFontFaces=new Set,this.styleElement=null,this.loadingRequests=[],this.loadTestFontId=0}addNativeFontFace(l){this.nativeFontFaces.add(l),this._document.fonts.add(l)}removeNativeFontFace(l){this.nativeFontFaces.delete(l),this._document.fonts.delete(l)}insertRule(l){this.styleElement||(this.styleElement=this._document.createElement("style"),this._document.documentElement.getElementsByTagName("head")[0].append(this.styleElement));const U=this.styleElement.sheet;U.insertRule(l,U.cssRules.length)}clear(){for(const l of this.nativeFontFaces)this._document.fonts.delete(l);this.nativeFontFaces.clear(),Q(this,V0).clear(),this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}async loadSystemFont({systemFontInfo:l,_inspectFont:U}){if(!(!l||Q(this,V0).has(l.loadedName))){if(Yl(!this.disableFontFace,"loadSystemFont shouldn't be called when `disableFontFace` is set."),this.isFontLoadingAPISupported){const{loadedName:Z,src:d,style:F}=l,V=new FontFace(Z,d,F);this.addNativeFontFace(V);try{await V.load(),Q(this,V0).add(Z),U==null||U(l)}catch{O(`Cannot load system font: ${l.baseFontName}, installing it could help to improve PDF rendering.`),this.removeNativeFontFace(V)}return}dl("Not implemented: loadSystemFont without the Font Loading API.")}}async bind(l){if(l.attached||l.missingFile&&!l.systemFontInfo)return;if(l.attached=!0,l.systemFontInfo){await this.loadSystemFont(l);return}if(this.isFontLoadingAPISupported){const Z=l.createNativeFontFace();if(Z){this.addNativeFontFace(Z);try{await Z.loaded}catch(d){throw O(`Failed to load font '${Z.family}': '${d}'.`),l.disableFontFace=!0,d}}return}const U=l.createFontFaceRule();if(U){if(this.insertRule(U),this.isSyncFontLoadingSupported)return;await new Promise(Z=>{const d=this._queueLoadingCallback(Z);this._prepareFontLoadEvent(l,d)})}}get isFontLoadingAPISupported(){var U;const l=!!((U=this._document)!=null&&U.fonts);return P(this,"isFontLoadingAPISupported",l)}get isSyncFontLoadingSupported(){let l=!1;return(rl||typeof navigator<"u"&&typeof(navigator==null?void 0:navigator.userAgent)=="string"&&/Mozilla\/5.0.*?rv:\d+.*? Gecko/.test(navigator.userAgent))&&(l=!0),P(this,"isSyncFontLoadingSupported",l)}_queueLoadingCallback(l){function U(){for(Yl(!d.done,"completeRequest() cannot be called twice."),d.done=!0;Z.length>0&&Z[0].done;){const F=Z.shift();setTimeout(F.callback,0)}}const{loadingRequests:Z}=this,d={done:!1,complete:U,callback:l};return Z.push(d),d}get _loadTestFont(){const l=atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==");return P(this,"_loadTestFont",l)}_prepareFontLoadEvent(l,U){function Z(Y,e){return Y.charCodeAt(e)<<24|Y.charCodeAt(e+1)<<16|Y.charCodeAt(e+2)<<8|Y.charCodeAt(e+3)&255}function d(Y,e,X,B){const p=Y.substring(0,e),u=Y.substring(e+X);return p+B+u}let F,V;const W=this._document.createElement("canvas");W.width=1,W.height=1;const c=W.getContext("2d");let t=0;function N(Y,e){if(++t>30){O("Load test font never loaded."),e();return}if(c.font="30px "+Y,c.fillText(".",0,20),c.getImageData(0,0,1,1).data[3]>0){e();return}setTimeout(N.bind(null,Y,e))}const s=`lt${Date.now()}${this.loadTestFontId++}`;let b=this._loadTestFont;b=d(b,976,s.length,s);const m=16,M=1482184792;let G=Z(b,m);for(F=0,V=s.length-3;F<V;F+=4)G=G-M+Z(s,F)|0;F<s.length&&(G=G-M+Z(s+"XXX",F)|0),b=d(b,m,4,hb(G));const J=`url(data:font/opentype;base64,${btoa(b)});`,T=`@font-face {font-family:"${s}";src:${J}}`;this.insertRule(T);const S=this._document.createElement("div");S.style.visibility="hidden",S.style.width=S.style.height="10px",S.style.position="absolute",S.style.top=S.style.left="0px";for(const Y of[l.loadedName,s]){const e=this._document.createElement("span");e.textContent="Hi",e.style.fontFamily=Y,S.append(e)}this._document.body.append(S),N(s,()=>{S.remove(),U.complete()})}}V0=new WeakMap;class ob{constructor(l,{disableFontFace:U=!1,inspectFont:Z=null}){this.compiledGlyphs=Object.create(null);for(const d in l)this[d]=l[d];this.disableFontFace=U===!0,this._inspectFont=Z}createNativeFontFace(){var U;if(!this.data||this.disableFontFace)return null;let l;if(!this.cssFontInfo)l=new FontFace(this.loadedName,this.data,{});else{const Z={weight:this.cssFontInfo.fontWeight};this.cssFontInfo.italicAngle&&(Z.style=`oblique ${this.cssFontInfo.italicAngle}deg`),l=new FontFace(this.cssFontInfo.fontFamily,this.data,Z)}return(U=this._inspectFont)==null||U.call(this,this),l}createFontFaceRule(){var d;if(!this.data||this.disableFontFace)return null;const l=jR(this.data),U=`url(data:${this.mimetype};base64,${btoa(l)});`;let Z;if(!this.cssFontInfo)Z=`@font-face {font-family:"${this.loadedName}";src:${U}}`;else{let F=`font-weight: ${this.cssFontInfo.fontWeight};`;this.cssFontInfo.italicAngle&&(F+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`),Z=`@font-face {font-family:"${this.cssFontInfo.fontFamily}";${F}src:${U}}`}return(d=this._inspectFont)==null||d.call(this,this,U),Z}getPathGenerator(l,U){if(this.compiledGlyphs[U]!==void 0)return this.compiledGlyphs[U];let Z;try{Z=l.get(this.loadedName+"_path_"+U)}catch(F){O(`getPathGenerator - ignoring character: "${F}".`)}if(!Array.isArray(Z)||Z.length===0)return this.compiledGlyphs[U]=function(F,V){};const d=[];for(let F=0,V=Z.length;F<V;)switch(Z[F++]){case WZ.BEZIER_CURVE_TO:{const[W,c,t,N,s,b]=Z.slice(F,F+6);d.push(n=>n.bezierCurveTo(W,c,t,N,s,b)),F+=6}break;case WZ.MOVE_TO:{const[W,c]=Z.slice(F,F+2);d.push(t=>t.moveTo(W,c)),F+=2}break;case WZ.LINE_TO:{const[W,c]=Z.slice(F,F+2);d.push(t=>t.lineTo(W,c)),F+=2}break;case WZ.QUADRATIC_CURVE_TO:{const[W,c,t,N]=Z.slice(F,F+4);d.push(s=>s.quadraticCurveTo(W,c,t,N)),F+=4}break;case WZ.RESTORE:d.push(W=>W.restore());break;case WZ.SAVE:d.push(W=>W.save());break;case WZ.SCALE:Yl(d.length===2,"Scale command is only valid at the third position.");break;case WZ.TRANSFORM:{const[W,c,t,N,s,b]=Z.slice(F,F+6);d.push(n=>n.transform(W,c,t,N,s,b)),F+=6}break;case WZ.TRANSLATE:{const[W,c]=Z.slice(F,F+2);d.push(t=>t.translate(W,c)),F+=2}break}return this.compiledGlyphs[U]=function(V,W){d[0](V),d[1](V),V.scale(W,-W);for(let c=2,t=d.length;c<t;c++)d[c](V)}}}if(rl){var dt=Promise.withResolvers(),tQ=null;(async()=>{const l=await UW(()=>import("./BIHI7g3E.js"),[],import.meta.url),U=await UW(()=>import("./BIHI7g3E.js"),[],import.meta.url),Z=await UW(()=>import("./BIHI7g3E.js"),[],import.meta.url),d=await UW(()=>import("./BIHI7g3E.js"),[],import.meta.url);let F,V;return new Map(Object.entries({fs:l,http:U,https:Z,url:d,canvas:F,path2d:V}))})().then(l=>{tQ=l,dt.resolve()},l=>{O(`loadPackages: ${l}`),tQ=new Map,dt.resolve()})}class FZ{static get promise(){return dt.promise}static get(l){return tQ==null?void 0:tQ.get(l)}}const JN=function(R){return FZ.get("fs").promises.readFile(R).then(U=>new Uint8Array(U))};class Db extends ac{}class Ib extends EW{_createCanvas(l,U){return FZ.get("canvas").createCanvas(l,U)}}class Eb extends hc{_fetchData(l,U){return JN(l).then(Z=>({cMapData:Z,compressionType:U}))}}class Cb extends mc{_fetchData(l){return JN(l)}}const vl={FILL:"Fill",STROKE:"Stroke",SHADING:"Shading"};function Ft(R,l){if(!l)return;const U=l[2]-l[0],Z=l[3]-l[1],d=new Path2D;d.rect(l[0],l[1],U,Z),R.clip(d)}class _V{constructor(){this.constructor===_V&&dl("Cannot initialize BaseShadingPattern.")}getPattern(){dl("Abstract method `getPattern` called.")}}class wb extends _V{constructor(l){super(),this._type=l[1],this._bbox=l[2],this._colorStops=l[3],this._p0=l[4],this._p1=l[5],this._r0=l[6],this._r1=l[7],this.matrix=null}_createGradient(l){let U;this._type==="axial"?U=l.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1]):this._type==="radial"&&(U=l.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1));for(const Z of this._colorStops)U.addColorStop(Z[0],Z[1]);return U}getPattern(l,U,Z,d){let F;if(d===vl.STROKE||d===vl.FILL){const V=U.current.getClippedPathBoundingBox(d,Nl(l))||[0,0,0,0],W=Math.ceil(V[2]-V[0])||1,c=Math.ceil(V[3]-V[1])||1,t=U.cachedCanvases.getCanvas("pattern",W,c,!0),N=t.context;N.clearRect(0,0,N.canvas.width,N.canvas.height),N.beginPath(),N.rect(0,0,N.canvas.width,N.canvas.height),N.translate(-V[0],-V[1]),Z=k.transform(Z,[1,0,0,1,V[0],V[1]]),N.transform(...U.baseTransform),this.matrix&&N.transform(...this.matrix),Ft(N,this._bbox),N.fillStyle=this._createGradient(N),N.fill(),F=l.createPattern(t.canvas,"no-repeat");const s=new DOMMatrix(Z);F.setTransform(s)}else Ft(l,this._bbox),F=this._createGradient(l);return F}}function Bc(R,l,U,Z,d,F,V,W){const c=l.coords,t=l.colors,N=R.data,s=R.width*4;let b;c[U+1]>c[Z+1]&&(b=U,U=Z,Z=b,b=F,F=V,V=b),c[Z+1]>c[d+1]&&(b=Z,Z=d,d=b,b=V,V=W,W=b),c[U+1]>c[Z+1]&&(b=U,U=Z,Z=b,b=F,F=V,V=b);const n=(c[U]+l.offsetX)*l.scaleX,m=(c[U+1]+l.offsetY)*l.scaleY,M=(c[Z]+l.offsetX)*l.scaleX,G=(c[Z+1]+l.offsetY)*l.scaleY,J=(c[d]+l.offsetX)*l.scaleX,T=(c[d+1]+l.offsetY)*l.scaleY;if(m>=T)return;const S=t[F],Y=t[F+1],e=t[F+2],X=t[V],B=t[V+1],p=t[V+2],u=t[W],I=t[W+1],D=t[W+2],A=Math.round(m),K=Math.round(T);let ll,_,cl,E,w,oF,DF,$V;for(let gl=A;gl<=K;gl++){if(gl<G){const ml=gl<m?0:(m-gl)/(m-G);ll=n-(n-M)*ml,_=S-(S-X)*ml,cl=Y-(Y-B)*ml,E=e-(e-p)*ml}else{let ml;gl>T?ml=1:G===T?ml=0:ml=(G-gl)/(G-T),ll=M-(M-J)*ml,_=X-(X-u)*ml,cl=B-(B-I)*ml,E=p-(p-D)*ml}let ul;gl<m?ul=0:gl>T?ul=1:ul=(m-gl)/(m-T),w=n-(n-J)*ul,oF=S-(S-u)*ul,DF=Y-(Y-I)*ul,$V=e-(e-D)*ul;const lW=Math.round(Math.min(ll,w)),Gd=Math.round(Math.max(ll,w));let KZ=s*gl+lW*4;for(let ml=lW;ml<=Gd;ml++)ul=(ll-ml)/(ll-w),ul<0?ul=0:ul>1&&(ul=1),N[KZ++]=_-(_-oF)*ul|0,N[KZ++]=cl-(cl-DF)*ul|0,N[KZ++]=E-(E-$V)*ul|0,N[KZ++]=255}}function xb(R,l,U){const Z=l.coords,d=l.colors;let F,V;switch(l.type){case"lattice":const W=l.verticesPerRow,c=Math.floor(Z.length/W)-1,t=W-1;for(F=0;F<c;F++){let N=F*W;for(let s=0;s<t;s++,N++)Bc(R,U,Z[N],Z[N+1],Z[N+W],d[N],d[N+1],d[N+W]),Bc(R,U,Z[N+W+1],Z[N+1],Z[N+W],d[N+W+1],d[N+1],d[N+W])}break;case"triangles":for(F=0,V=Z.length;F<V;F+=3)Bc(R,U,Z[F],Z[F+1],Z[F+2],d[F],d[F+1],d[F+2]);break;default:throw new Error("illegal figure")}}class jb extends _V{constructor(l){super(),this._coords=l[2],this._colors=l[3],this._figures=l[4],this._bounds=l[5],this._bbox=l[7],this._background=l[8],this.matrix=null}_createMeshCanvas(l,U,Z){const W=Math.floor(this._bounds[0]),c=Math.floor(this._bounds[1]),t=Math.ceil(this._bounds[2])-W,N=Math.ceil(this._bounds[3])-c,s=Math.min(Math.ceil(Math.abs(t*l[0]*1.1)),3e3),b=Math.min(Math.ceil(Math.abs(N*l[1]*1.1)),3e3),n=t/s,m=N/b,M={coords:this._coords,colors:this._colors,offsetX:-W,offsetY:-c,scaleX:1/n,scaleY:1/m},G=s+2*2,J=b+2*2,T=Z.getCanvas("mesh",G,J,!1),S=T.context,Y=S.createImageData(s,b);if(U){const X=Y.data;for(let B=0,p=X.length;B<p;B+=4)X[B]=U[0],X[B+1]=U[1],X[B+2]=U[2],X[B+3]=255}for(const X of this._figures)xb(Y,X,M);return S.putImageData(Y,2,2),{canvas:T.canvas,offsetX:W-2*n,offsetY:c-2*m,scaleX:n,scaleY:m}}getPattern(l,U,Z,d){Ft(l,this._bbox);let F;if(d===vl.SHADING)F=k.singularValueDecompose2dScale(Nl(l));else if(F=k.singularValueDecompose2dScale(U.baseTransform),this.matrix){const W=k.singularValueDecompose2dScale(this.matrix);F=[F[0]*W[0],F[1]*W[1]]}const V=this._createMeshCanvas(F,d===vl.SHADING?null:this._background,U.cachedCanvases);return d!==vl.SHADING&&(l.setTransform(...U.baseTransform),this.matrix&&l.transform(...this.matrix)),l.translate(V.offsetX,V.offsetY),l.scale(V.scaleX,V.scaleY),l.createPattern(V.canvas,"no-repeat")}}class Ob extends _V{getPattern(){return"hotpink"}}function rb(R){switch(R[0]){case"RadialAxial":return new wb(R);case"Mesh":return new jb(R);case"Dummy":return new Ob}throw new Error(`Unknown IR type: ${R[0]}`)}const iR={COLORED:1,UNCOLORED:2},lc=class lc{constructor(l,U,Z,d,F){this.operatorList=l[2],this.matrix=l[3],this.bbox=l[4],this.xstep=l[5],this.ystep=l[6],this.paintType=l[7],this.tilingType=l[8],this.color=U,this.ctx=Z,this.canvasGraphicsFactory=d,this.baseTransform=F}createPatternCanvas(l){const U=this.operatorList,Z=this.bbox,d=this.xstep,F=this.ystep,V=this.paintType,W=this.tilingType,c=this.color,t=this.canvasGraphicsFactory;sc("TilingType: "+W);const N=Z[0],s=Z[1],b=Z[2],n=Z[3],m=k.singularValueDecompose2dScale(this.matrix),M=k.singularValueDecompose2dScale(this.baseTransform),G=[m[0]*M[0],m[1]*M[1]],J=this.getSizeAndScale(d,this.ctx.canvas.width,G[0]),T=this.getSizeAndScale(F,this.ctx.canvas.height,G[1]),S=l.cachedCanvases.getCanvas("pattern",J.size,T.size,!0),Y=S.context,e=t.createCanvasGraphics(Y);e.groupLevel=l.groupLevel,this.setFillAndStrokeStyleToContext(e,V,c);let X=N,B=s,p=b,u=n;return N<0&&(X=0,p+=Math.abs(N)),s<0&&(B=0,u+=Math.abs(s)),Y.translate(-(J.scale*X),-(T.scale*B)),e.transform(J.scale,0,0,T.scale,0,0),Y.save(),this.clipBbox(e,X,B,p,u),e.baseTransform=Nl(e.ctx),e.executeOperatorList(U),e.endDrawing(),{canvas:S.canvas,scaleX:J.scale,scaleY:T.scale,offsetX:X,offsetY:B}}getSizeAndScale(l,U,Z){l=Math.abs(l);const d=Math.max(lc.MAX_PATTERN_SIZE,U);let F=Math.ceil(l*Z);return F>=d?F=d:Z=F/l,{scale:Z,size:F}}clipBbox(l,U,Z,d,F){const V=d-U,W=F-Z;l.ctx.rect(U,Z,V,W),l.current.updateRectMinMax(Nl(l.ctx),[U,Z,d,F]),l.clip(),l.endPath()}setFillAndStrokeStyleToContext(l,U,Z){const d=l.ctx,F=l.current;switch(U){case iR.COLORED:const V=this.ctx;d.fillStyle=V.fillStyle,d.strokeStyle=V.strokeStyle,F.fillColor=V.fillStyle,F.strokeColor=V.strokeStyle;break;case iR.UNCOLORED:const W=k.makeHexColor(Z[0],Z[1],Z[2]);d.fillStyle=W,d.strokeStyle=W,F.fillColor=W,F.strokeColor=W;break;default:throw new ab(`Unsupported paint type: ${U}`)}}getPattern(l,U,Z,d){let F=Z;d!==vl.SHADING&&(F=k.transform(F,U.baseTransform),this.matrix&&(F=k.transform(F,this.matrix)));const V=this.createPatternCanvas(U);let W=new DOMMatrix(F);W=W.translate(V.offsetX,V.offsetY),W=W.scale(1/V.scaleX,1/V.scaleY);const c=l.createPattern(V.canvas,"repeat");return c.setTransform(W),c}};j(lc,"MAX_PATTERN_SIZE",3e3);let Qt=lc;function gb({src:R,srcPos:l=0,dest:U,width:Z,height:d,nonBlackColor:F=4294967295,inverseDecode:V=!1}){const W=$l.isLittleEndian?4278190080:255,[c,t]=V?[F,W]:[W,F],N=Z>>3,s=Z&7,b=R.length;U=new Uint32Array(U.buffer);let n=0;for(let m=0;m<d;m++){for(const G=l+N;l<G;l++){const J=l<b?R[l]:255;U[n++]=J&128?t:c,U[n++]=J&64?t:c,U[n++]=J&32?t:c,U[n++]=J&16?t:c,U[n++]=J&8?t:c,U[n++]=J&4?t:c,U[n++]=J&2?t:c,U[n++]=J&1?t:c}if(s===0)continue;const M=l<b?R[l++]:255;for(let G=0;G<s;G++)U[n++]=M&1<<7-G?t:c}return{srcPos:l,destPos:n}}const MR=16,JR=100,Kb=15,GR=10,TR=1e3,ql=16;function Hb(R,l){if(R._removeMirroring)throw new Error("Context is already forwarding operations.");R.__originalSave=R.save,R.__originalRestore=R.restore,R.__originalRotate=R.rotate,R.__originalScale=R.scale,R.__originalTranslate=R.translate,R.__originalTransform=R.transform,R.__originalSetTransform=R.setTransform,R.__originalResetTransform=R.resetTransform,R.__originalClip=R.clip,R.__originalMoveTo=R.moveTo,R.__originalLineTo=R.lineTo,R.__originalBezierCurveTo=R.bezierCurveTo,R.__originalRect=R.rect,R.__originalClosePath=R.closePath,R.__originalBeginPath=R.beginPath,R._removeMirroring=()=>{R.save=R.__originalSave,R.restore=R.__originalRestore,R.rotate=R.__originalRotate,R.scale=R.__originalScale,R.translate=R.__originalTranslate,R.transform=R.__originalTransform,R.setTransform=R.__originalSetTransform,R.resetTransform=R.__originalResetTransform,R.clip=R.__originalClip,R.moveTo=R.__originalMoveTo,R.lineTo=R.__originalLineTo,R.bezierCurveTo=R.__originalBezierCurveTo,R.rect=R.__originalRect,R.closePath=R.__originalClosePath,R.beginPath=R.__originalBeginPath,delete R._removeMirroring},R.save=function(){l.save(),this.__originalSave()},R.restore=function(){l.restore(),this.__originalRestore()},R.translate=function(Z,d){l.translate(Z,d),this.__originalTranslate(Z,d)},R.scale=function(Z,d){l.scale(Z,d),this.__originalScale(Z,d)},R.transform=function(Z,d,F,V,W,c){l.transform(Z,d,F,V,W,c),this.__originalTransform(Z,d,F,V,W,c)},R.setTransform=function(Z,d,F,V,W,c){l.setTransform(Z,d,F,V,W,c),this.__originalSetTransform(Z,d,F,V,W,c)},R.resetTransform=function(){l.resetTransform(),this.__originalResetTransform()},R.rotate=function(Z){l.rotate(Z),this.__originalRotate(Z)},R.clip=function(Z){l.clip(Z),this.__originalClip(Z)},R.moveTo=function(U,Z){l.moveTo(U,Z),this.__originalMoveTo(U,Z)},R.lineTo=function(U,Z){l.lineTo(U,Z),this.__originalLineTo(U,Z)},R.bezierCurveTo=function(U,Z,d,F,V,W){l.bezierCurveTo(U,Z,d,F,V,W),this.__originalBezierCurveTo(U,Z,d,F,V,W)},R.rect=function(U,Z,d,F){l.rect(U,Z,d,F),this.__originalRect(U,Z,d,F)},R.closePath=function(){l.closePath(),this.__originalClosePath()},R.beginPath=function(){l.beginPath(),this.__originalBeginPath()}}class vb{constructor(l){this.canvasFactory=l,this.cache=Object.create(null)}getCanvas(l,U,Z){let d;return this.cache[l]!==void 0?(d=this.cache[l],this.canvasFactory.reset(d,U,Z)):(d=this.canvasFactory.create(U,Z),this.cache[l]=d),d}delete(l){delete this.cache[l]}clear(){for(const l in this.cache){const U=this.cache[l];this.canvasFactory.destroy(U),delete this.cache[l]}}}function dW(R,l,U,Z,d,F,V,W,c,t){const[N,s,b,n,m,M]=Nl(R);if(s===0&&b===0){const T=V*N+m,S=Math.round(T),Y=W*n+M,e=Math.round(Y),X=(V+c)*N+m,B=Math.abs(Math.round(X)-S)||1,p=(W+t)*n+M,u=Math.abs(Math.round(p)-e)||1;return R.setTransform(Math.sign(N),0,0,Math.sign(n),S,e),R.drawImage(l,U,Z,d,F,0,0,B,u),R.setTransform(N,s,b,n,m,M),[B,u]}if(N===0&&n===0){const T=W*b+m,S=Math.round(T),Y=V*s+M,e=Math.round(Y),X=(W+t)*b+m,B=Math.abs(Math.round(X)-S)||1,p=(V+c)*s+M,u=Math.abs(Math.round(p)-e)||1;return R.setTransform(0,Math.sign(s),Math.sign(b),0,S,e),R.drawImage(l,U,Z,d,F,0,0,u,B),R.setTransform(N,s,b,n,m,M),[u,B]}R.drawImage(l,U,Z,d,F,V,W,c,t);const G=Math.hypot(N,s),J=Math.hypot(b,n);return[G*c,J*t]}function Pb(R){const{width:l,height:U}=R;if(l>TR||U>TR)return null;const Z=1e3,d=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),F=l+1;let V=new Uint8Array(F*(U+1)),W,c,t;const N=l+7&-8;let s=new Uint8Array(N*U),b=0;for(const J of R.data){let T=128;for(;T>0;)s[b++]=J&T?0:255,T>>=1}let n=0;for(b=0,s[b]!==0&&(V[0]=1,++n),c=1;c<l;c++)s[b]!==s[b+1]&&(V[c]=s[b]?2:1,++n),b++;for(s[b]!==0&&(V[c]=2,++n),W=1;W<U;W++){b=W*N,t=W*F,s[b-N]!==s[b]&&(V[t]=s[b]?1:8,++n);let J=(s[b]?4:0)+(s[b-N]?8:0);for(c=1;c<l;c++)J=(J>>2)+(s[b+1]?4:0)+(s[b-N+1]?8:0),d[J]&&(V[t+c]=d[J],++n),b++;if(s[b-N]!==s[b]&&(V[t+c]=s[b]?2:4,++n),n>Z)return null}for(b=N*(U-1),t=W*F,s[b]!==0&&(V[t]=8,++n),c=1;c<l;c++)s[b]!==s[b+1]&&(V[t+c]=s[b]?4:8,++n),b++;if(s[b]!==0&&(V[t+c]=4,++n),n>Z)return null;const m=new Int32Array([0,F,-1,0,-F,0,0,0,1]),M=new Path2D;for(W=0;n&&W<=U;W++){let J=W*F;const T=J+l;for(;J<T&&!V[J];)J++;if(J===T)continue;M.moveTo(J%F,W);const S=J;let Y=V[J];do{const e=m[Y];do J+=e;while(!V[J]);const X=V[J];X!==5&&X!==10?(Y=X,V[J]=0):(Y=X&51*Y>>4,V[J]&=Y>>2|Y<<2),M.lineTo(J%F,J/F|0),V[J]||--n}while(S!==J);--W}return s=null,V=null,function(J){J.save(),J.scale(1/l,-1/U),J.translate(0,-U),J.fill(M),J.beginPath(),J.restore()}}class SR{constructor(l,U){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=wR,this.textMatrixScale=1,this.fontMatrix=yc,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=Il.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.transferMaps="none",this.startNewPathAndClipBox([0,0,l,U])}clone(){const l=Object.create(this);return l.clipBox=this.clipBox.slice(),l}setCurrentPoint(l,U){this.x=l,this.y=U}updatePathMinMax(l,U,Z){[U,Z]=k.applyTransform([U,Z],l),this.minX=Math.min(this.minX,U),this.minY=Math.min(this.minY,Z),this.maxX=Math.max(this.maxX,U),this.maxY=Math.max(this.maxY,Z)}updateRectMinMax(l,U){const Z=k.applyTransform(U,l),d=k.applyTransform(U.slice(2),l),F=k.applyTransform([U[0],U[3]],l),V=k.applyTransform([U[2],U[1]],l);this.minX=Math.min(this.minX,Z[0],d[0],F[0],V[0]),this.minY=Math.min(this.minY,Z[1],d[1],F[1],V[1]),this.maxX=Math.max(this.maxX,Z[0],d[0],F[0],V[0]),this.maxY=Math.max(this.maxY,Z[1],d[1],F[1],V[1])}updateScalingPathMinMax(l,U){k.scaleMinMax(l,U),this.minX=Math.min(this.minX,U[0]),this.minY=Math.min(this.minY,U[1]),this.maxX=Math.max(this.maxX,U[2]),this.maxY=Math.max(this.maxY,U[3])}updateCurvePathMinMax(l,U,Z,d,F,V,W,c,t,N){const s=k.bezierBoundingBox(U,Z,d,F,V,W,c,t,N);N||this.updateRectMinMax(l,s)}getPathBoundingBox(l=vl.FILL,U=null){const Z=[this.minX,this.minY,this.maxX,this.maxY];if(l===vl.STROKE){U||dl("Stroke bounding box must include transform.");const d=k.singularValueDecompose2dScale(U),F=d[0]*this.lineWidth/2,V=d[1]*this.lineWidth/2;Z[0]-=F,Z[1]-=V,Z[2]+=F,Z[3]+=V}return Z}updateClipFromPath(){const l=k.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(l||[0,0,0,0])}isEmptyClip(){return this.minX===1/0}startNewPathAndClipBox(l){this.clipBox=l,this.minX=1/0,this.minY=1/0,this.maxX=0,this.maxY=0}getClippedPathBoundingBox(l=vl.FILL,U=null){return k.intersect(this.clipBox,this.getPathBoundingBox(l,U))}}function YR(R,l){if(typeof ImageData<"u"&&l instanceof ImageData){R.putImageData(l,0,0);return}const U=l.height,Z=l.width,d=U%ql,F=(U-d)/ql,V=d===0?F:F+1,W=R.createImageData(Z,ql);let c=0,t;const N=l.data,s=W.data;let b,n,m,M;if(l.kind===RW.GRAYSCALE_1BPP){const G=N.byteLength,J=new Uint32Array(s.buffer,0,s.byteLength>>2),T=J.length,S=Z+7>>3,Y=4294967295,e=$l.isLittleEndian?4278190080:255;for(b=0;b<V;b++){for(m=b<F?ql:d,t=0,n=0;n<m;n++){const X=G-c;let B=0;const p=X>S?Z:X*8-7,u=p&-8;let I=0,D=0;for(;B<u;B+=8)D=N[c++],J[t++]=D&128?Y:e,J[t++]=D&64?Y:e,J[t++]=D&32?Y:e,J[t++]=D&16?Y:e,J[t++]=D&8?Y:e,J[t++]=D&4?Y:e,J[t++]=D&2?Y:e,J[t++]=D&1?Y:e;for(;B<p;B++)I===0&&(D=N[c++],I=128),J[t++]=D&I?Y:e,I>>=1}for(;t<T;)J[t++]=0;R.putImageData(W,0,b*ql)}}else if(l.kind===RW.RGBA_32BPP){for(n=0,M=Z*ql*4,b=0;b<F;b++)s.set(N.subarray(c,c+M)),c+=M,R.putImageData(W,0,n),n+=ql;b<V&&(M=Z*d*4,s.set(N.subarray(c,c+M)),R.putImageData(W,0,n))}else if(l.kind===RW.RGB_24BPP)for(m=ql,M=Z*m,b=0;b<V;b++){for(b>=F&&(m=d,M=Z*m),t=0,n=M;n--;)s[t++]=N[c++],s[t++]=N[c++],s[t++]=N[c++],s[t++]=255;R.putImageData(W,0,b*ql)}else throw new Error(`bad image kind: ${l.kind}`)}function XR(R,l){if(l.bitmap){R.drawImage(l.bitmap,0,0);return}const U=l.height,Z=l.width,d=U%ql,F=(U-d)/ql,V=d===0?F:F+1,W=R.createImageData(Z,ql);let c=0;const t=l.data,N=W.data;for(let s=0;s<V;s++){const b=s<F?ql:d;({srcPos:c}=gb({src:t,srcPos:c,dest:N,width:Z,height:b,nonBlackColor:0})),R.putImageData(W,0,s*ql)}}function r0(R,l){const U=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font","filter"];for(const Z of U)R[Z]!==void 0&&(l[Z]=R[Z]);R.setLineDash!==void 0&&(l.setLineDash(R.getLineDash()),l.lineDashOffset=R.lineDashOffset)}function FW(R){if(R.strokeStyle=R.fillStyle="#000000",R.fillRule="nonzero",R.globalAlpha=1,R.lineWidth=1,R.lineCap="butt",R.lineJoin="miter",R.miterLimit=10,R.globalCompositeOperation="source-over",R.font="10px sans-serif",R.setLineDash!==void 0&&(R.setLineDash([]),R.lineDashOffset=0),!rl){const{filter:l}=R;l!=="none"&&l!==""&&(R.filter="none")}}function BR(R,l){if(l)return!0;const U=k.singularValueDecompose2dScale(R);U[0]=Math.fround(U[0]),U[1]=Math.fround(U[1]);const Z=Math.fround((globalThis.devicePixelRatio||1)*md.PDF_TO_CSS_UNITS);return U[0]<=Z&&U[1]<=Z}const fb=["butt","round","square"],Ab=["miter","round","bevel"],_b={},eR={};var Md,Vt,Wt;const WR=class WR{constructor(l,U,Z,d,F,{optionalContentConfig:V,markedContentStack:W=null},c,t){i(this,Md);this.ctx=l,this.current=new SR(this.ctx.canvas.width,this.ctx.canvas.height),this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=U,this.objs=Z,this.canvasFactory=d,this.filterFactory=F,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.suspendedCtx=null,this.contentVisible=!0,this.markedContentStack=W||[],this.optionalContentConfig=V,this.cachedCanvases=new vb(this.canvasFactory),this.cachedPatterns=new Map,this.annotationCanvasMap=c,this.viewportScale=1,this.outputScaleX=1,this.outputScaleY=1,this.pageColors=t,this._cachedScaleForStroking=[-1,0],this._cachedGetSinglePixelWidth=null,this._cachedBitmapsMap=new Map}getObject(l,U=null){return typeof l=="string"?l.startsWith("g_")?this.commonObjs.get(l):this.objs.get(l):U}beginDrawing({transform:l,viewport:U,transparency:Z=!1,background:d=null}){const F=this.ctx.canvas.width,V=this.ctx.canvas.height,W=this.ctx.fillStyle;if(this.ctx.fillStyle=d||"#ffffff",this.ctx.fillRect(0,0,F,V),this.ctx.fillStyle=W,Z){const c=this.cachedCanvases.getCanvas("transparent",F,V);this.compositeCtx=this.ctx,this.transparentCanvas=c.canvas,this.ctx=c.context,this.ctx.save(),this.ctx.transform(...Nl(this.compositeCtx))}this.ctx.save(),FW(this.ctx),l&&(this.ctx.transform(...l),this.outputScaleX=l[0],this.outputScaleY=l[0]),this.ctx.transform(...U.transform),this.viewportScale=U.scale,this.baseTransform=Nl(this.ctx)}executeOperatorList(l,U,Z,d){const F=l.argsArray,V=l.fnArray;let W=U||0;const c=F.length;if(c===W)return W;const t=c-W>GR&&typeof Z=="function",N=t?Date.now()+Kb:0;let s=0;const b=this.commonObjs,n=this.objs;let m;for(;;){if(d!==void 0&&W===d.nextBreakPoint)return d.breakIt(W,Z),W;if(m=V[W],m!==SU.dependency)this[m].apply(this,F[W]);else for(const M of F[W]){const G=M.startsWith("g_")?b:n;if(!G.has(M))return G.get(M,Z),W}if(W++,W===c)return W;if(t&&++s>GR){if(Date.now()>N)return Z(),W;s=0}}}endDrawing(){h(this,Md,Vt).call(this),this.cachedCanvases.clear(),this.cachedPatterns.clear();for(const l of this._cachedBitmapsMap.values()){for(const U of l.values())typeof HTMLCanvasElement<"u"&&U instanceof HTMLCanvasElement&&(U.width=U.height=0);l.clear()}this._cachedBitmapsMap.clear(),h(this,Md,Wt).call(this)}_scaleImage(l,U){const Z=l.width,d=l.height;let F=Math.max(Math.hypot(U[0],U[1]),1),V=Math.max(Math.hypot(U[2],U[3]),1),W=Z,c=d,t="prescale1",N,s;for(;F>2&&W>1||V>2&&c>1;){let b=W,n=c;F>2&&W>1&&(b=W>=16384?Math.floor(W/2)-1||1:Math.ceil(W/2),F/=W/b),V>2&&c>1&&(n=c>=16384?Math.floor(c/2)-1||1:Math.ceil(c)/2,V/=c/n),N=this.cachedCanvases.getCanvas(t,b,n),s=N.context,s.clearRect(0,0,b,n),s.drawImage(l,0,0,W,c,0,0,b,n),l=N.canvas,W=b,c=n,t=t==="prescale1"?"prescale2":"prescale1"}return{img:l,paintWidth:W,paintHeight:c}}_createMaskCanvas(l){const U=this.ctx,{width:Z,height:d}=l,F=this.current.fillColor,V=this.current.patternFill,W=Nl(U);let c,t,N,s;if((l.bitmap||l.data)&&l.count>1){const p=l.bitmap||l.data.buffer;t=JSON.stringify(V?W:[W.slice(0,4),F]),c=this._cachedBitmapsMap.get(p),c||(c=new Map,this._cachedBitmapsMap.set(p,c));const u=c.get(t);if(u&&!V){const I=Math.round(Math.min(W[0],W[2])+W[4]),D=Math.round(Math.min(W[1],W[3])+W[5]);return{canvas:u,offsetX:I,offsetY:D}}N=u}N||(s=this.cachedCanvases.getCanvas("maskCanvas",Z,d),XR(s.context,l));let b=k.transform(W,[1/Z,0,0,-1/d,0,0]);b=k.transform(b,[1,0,0,1,0,-d]);const[n,m,M,G]=k.getAxialAlignedBoundingBox([0,0,Z,d],b),J=Math.round(M-n)||1,T=Math.round(G-m)||1,S=this.cachedCanvases.getCanvas("fillCanvas",J,T),Y=S.context,e=n,X=m;Y.translate(-e,-X),Y.transform(...b),N||(N=this._scaleImage(s.canvas,cZ(Y)),N=N.img,c&&V&&c.set(t,N)),Y.imageSmoothingEnabled=BR(Nl(Y),l.interpolate),dW(Y,N,0,0,N.width,N.height,0,0,Z,d),Y.globalCompositeOperation="source-in";const B=k.transform(cZ(Y),[1,0,0,1,-e,-X]);return Y.fillStyle=V?F.getPattern(U,this,B,vl.FILL):F,Y.fillRect(0,0,Z,d),c&&!V&&(this.cachedCanvases.delete("fillCanvas"),c.set(t,S.canvas)),{canvas:S.canvas,offsetX:Math.round(e),offsetY:Math.round(X)}}setLineWidth(l){l!==this.current.lineWidth&&(this._cachedScaleForStroking[0]=-1),this.current.lineWidth=l,this.ctx.lineWidth=l}setLineCap(l){this.ctx.lineCap=fb[l]}setLineJoin(l){this.ctx.lineJoin=Ab[l]}setMiterLimit(l){this.ctx.miterLimit=l}setDash(l,U){const Z=this.ctx;Z.setLineDash!==void 0&&(Z.setLineDash(l),Z.lineDashOffset=U)}setRenderingIntent(l){}setFlatness(l){}setGState(l){for(const[U,Z]of l)switch(U){case"LW":this.setLineWidth(Z);break;case"LC":this.setLineCap(Z);break;case"LJ":this.setLineJoin(Z);break;case"ML":this.setMiterLimit(Z);break;case"D":this.setDash(Z[0],Z[1]);break;case"RI":this.setRenderingIntent(Z);break;case"FL":this.setFlatness(Z);break;case"Font":this.setFont(Z[0],Z[1]);break;case"CA":this.current.strokeAlpha=Z;break;case"ca":this.current.fillAlpha=Z,this.ctx.globalAlpha=Z;break;case"BM":this.ctx.globalCompositeOperation=Z;break;case"SMask":this.current.activeSMask=Z?this.tempSMask:null,this.tempSMask=null,this.checkSMaskState();break;case"TR":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(Z);break}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const l=this.inSMaskMode;this.current.activeSMask&&!l?this.beginSMaskMode():!this.current.activeSMask&&l&&this.endSMaskMode()}beginSMaskMode(){if(this.inSMaskMode)throw new Error("beginSMaskMode called while already in smask mode");const l=this.ctx.canvas.width,U=this.ctx.canvas.height,Z="smaskGroupAt"+this.groupLevel,d=this.cachedCanvases.getCanvas(Z,l,U);this.suspendedCtx=this.ctx,this.ctx=d.context;const F=this.ctx;F.setTransform(...Nl(this.suspendedCtx)),r0(this.suspendedCtx,F),Hb(F,this.suspendedCtx),this.setGState([["BM","source-over"],["ca",1],["CA",1]])}endSMaskMode(){if(!this.inSMaskMode)throw new Error("endSMaskMode called while not in smask mode");this.ctx._removeMirroring(),r0(this.ctx,this.suspendedCtx),this.ctx=this.suspendedCtx,this.suspendedCtx=null}compose(l){if(!this.current.activeSMask)return;l?(l[0]=Math.floor(l[0]),l[1]=Math.floor(l[1]),l[2]=Math.ceil(l[2]),l[3]=Math.ceil(l[3])):l=[0,0,this.ctx.canvas.width,this.ctx.canvas.height];const U=this.current.activeSMask,Z=this.suspendedCtx;this.composeSMask(Z,U,this.ctx,l),this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.restore()}composeSMask(l,U,Z,d){const F=d[0],V=d[1],W=d[2]-F,c=d[3]-V;W===0||c===0||(this.genericComposeSMask(U.context,Z,W,c,U.subtype,U.backdrop,U.transferMap,F,V,U.offsetX,U.offsetY),l.save(),l.globalAlpha=1,l.globalCompositeOperation="source-over",l.setTransform(1,0,0,1,0,0),l.drawImage(Z.canvas,0,0),l.restore())}genericComposeSMask(l,U,Z,d,F,V,W,c,t,N,s){let b=l.canvas,n=c-N,m=t-s;if(V){if(n<0||m<0||n+Z>b.width||m+d>b.height){const G=this.cachedCanvases.getCanvas("maskExtension",Z,d),J=G.context;J.drawImage(b,-n,-m),V.some(T=>T!==0)&&(J.globalCompositeOperation="destination-atop",J.fillStyle=k.makeHexColor(...V),J.fillRect(0,0,Z,d),J.globalCompositeOperation="source-over"),b=G.canvas,n=m=0}else if(V.some(G=>G!==0)){l.save(),l.globalAlpha=1,l.setTransform(1,0,0,1,0,0);const G=new Path2D;G.rect(n,m,Z,d),l.clip(G),l.globalCompositeOperation="destination-atop",l.fillStyle=k.makeHexColor(...V),l.fillRect(n,m,Z,d),l.restore()}}U.save(),U.globalAlpha=1,U.setTransform(1,0,0,1,0,0),F==="Alpha"&&W?U.filter=this.filterFactory.addAlphaFilter(W):F==="Luminosity"&&(U.filter=this.filterFactory.addLuminosityFilter(W));const M=new Path2D;M.rect(c,t,Z,d),U.clip(M),U.globalCompositeOperation="destination-in",U.drawImage(b,n,m,Z,d,c,t,Z,d),U.restore()}save(){this.inSMaskMode?(r0(this.ctx,this.suspendedCtx),this.suspendedCtx.save()):this.ctx.save();const l=this.current;this.stateStack.push(l),this.current=l.clone()}restore(){this.stateStack.length===0&&this.inSMaskMode&&this.endSMaskMode(),this.stateStack.length!==0&&(this.current=this.stateStack.pop(),this.inSMaskMode?(this.suspendedCtx.restore(),r0(this.suspendedCtx,this.ctx)):this.ctx.restore(),this.checkSMaskState(),this.pendingClip=null,this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null)}transform(l,U,Z,d,F,V){this.ctx.transform(l,U,Z,d,F,V),this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null}constructPath(l,U,Z){const d=this.ctx,F=this.current;let V=F.x,W=F.y,c,t;const N=Nl(d),s=N[0]===0&&N[3]===0||N[1]===0&&N[2]===0,b=s?Z.slice(0):null;for(let n=0,m=0,M=l.length;n<M;n++)switch(l[n]|0){case SU.rectangle:V=U[m++],W=U[m++];const G=U[m++],J=U[m++],T=V+G,S=W+J;d.moveTo(V,W),G===0||J===0?d.lineTo(T,S):(d.lineTo(T,W),d.lineTo(T,S),d.lineTo(V,S)),s||F.updateRectMinMax(N,[V,W,T,S]),d.closePath();break;case SU.moveTo:V=U[m++],W=U[m++],d.moveTo(V,W),s||F.updatePathMinMax(N,V,W);break;case SU.lineTo:V=U[m++],W=U[m++],d.lineTo(V,W),s||F.updatePathMinMax(N,V,W);break;case SU.curveTo:c=V,t=W,V=U[m+4],W=U[m+5],d.bezierCurveTo(U[m],U[m+1],U[m+2],U[m+3],V,W),F.updateCurvePathMinMax(N,c,t,U[m],U[m+1],U[m+2],U[m+3],V,W,b),m+=6;break;case SU.curveTo2:c=V,t=W,d.bezierCurveTo(V,W,U[m],U[m+1],U[m+2],U[m+3]),F.updateCurvePathMinMax(N,c,t,V,W,U[m],U[m+1],U[m+2],U[m+3],b),V=U[m+2],W=U[m+3],m+=4;break;case SU.curveTo3:c=V,t=W,V=U[m+2],W=U[m+3],d.bezierCurveTo(U[m],U[m+1],V,W,V,W),F.updateCurvePathMinMax(N,c,t,U[m],U[m+1],V,W,V,W,b),m+=4;break;case SU.closePath:d.closePath();break}s&&F.updateScalingPathMinMax(N,b),F.setCurrentPoint(V,W)}closePath(){this.ctx.closePath()}stroke(l=!0){const U=this.ctx,Z=this.current.strokeColor;U.globalAlpha=this.current.strokeAlpha,this.contentVisible&&(typeof Z=="object"&&(Z!=null&&Z.getPattern)?(U.save(),U.strokeStyle=Z.getPattern(U,this,cZ(U),vl.STROKE),this.rescaleAndStroke(!1),U.restore()):this.rescaleAndStroke(!0)),l&&this.consumePath(this.current.getClippedPathBoundingBox()),U.globalAlpha=this.current.fillAlpha}closeStroke(){this.closePath(),this.stroke()}fill(l=!0){const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;let F=!1;d&&(U.save(),U.fillStyle=Z.getPattern(U,this,cZ(U),vl.FILL),F=!0);const V=this.current.getClippedPathBoundingBox();this.contentVisible&&V!==null&&(this.pendingEOFill?(U.fill("evenodd"),this.pendingEOFill=!1):U.fill()),F&&U.restore(),l&&this.consumePath(V)}eoFill(){this.pendingEOFill=!0,this.fill()}fillStroke(){this.fill(!1),this.stroke(!1),this.consumePath()}eoFillStroke(){this.pendingEOFill=!0,this.fillStroke()}closeFillStroke(){this.closePath(),this.fillStroke()}closeEOFillStroke(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()}endPath(){this.consumePath()}clip(){this.pendingClip=_b}eoClip(){this.pendingClip=eR}beginText(){this.current.textMatrix=wR,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}endText(){const l=this.pendingTextPaths,U=this.ctx;if(l===void 0){U.beginPath();return}U.save(),U.beginPath();for(const Z of l)U.setTransform(...Z.transform),U.translate(Z.x,Z.y),Z.addToPath(U,Z.fontSize);U.restore(),U.clip(),U.beginPath(),delete this.pendingTextPaths}setCharSpacing(l){this.current.charSpacing=l}setWordSpacing(l){this.current.wordSpacing=l}setHScale(l){this.current.textHScale=l/100}setLeading(l){this.current.leading=-l}setFont(l,U){var N;const Z=this.commonObjs.get(l),d=this.current;if(!Z)throw new Error(`Can't find font for ${l}`);if(d.fontMatrix=Z.fontMatrix||yc,(d.fontMatrix[0]===0||d.fontMatrix[3]===0)&&O("Invalid font matrix for font "+l),U<0?(U=-U,d.fontDirection=-1):d.fontDirection=1,this.current.font=Z,this.current.fontSize=U,Z.isType3Font)return;const F=Z.loadedName||"sans-serif",V=((N=Z.systemFontInfo)==null?void 0:N.css)||`"${F}", ${Z.fallbackName}`;let W="normal";Z.black?W="900":Z.bold&&(W="bold");const c=Z.italic?"italic":"normal";let t=U;U<MR?t=MR:U>JR&&(t=JR),this.current.fontSizeScale=U/t,this.ctx.font=`${c} ${W} ${t}px ${V}`}setTextRenderingMode(l){this.current.textRenderingMode=l}setTextRise(l){this.current.textRise=l}moveText(l,U){this.current.x=this.current.lineX+=l,this.current.y=this.current.lineY+=U}setLeadingMoveText(l,U){this.setLeading(-U),this.moveText(l,U)}setTextMatrix(l,U,Z,d,F,V){this.current.textMatrix=[l,U,Z,d,F,V],this.current.textMatrixScale=Math.hypot(l,U),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}paintChar(l,U,Z,d){const F=this.ctx,V=this.current,W=V.font,c=V.textRenderingMode,t=V.fontSize/V.fontSizeScale,N=c&Il.FILL_STROKE_MASK,s=!!(c&Il.ADD_TO_PATH_FLAG),b=V.patternFill&&!W.missingFile;let n;(W.disableFontFace||s||b)&&(n=W.getPathGenerator(this.commonObjs,l)),W.disableFontFace||b?(F.save(),F.translate(U,Z),F.beginPath(),n(F,t),d&&F.setTransform(...d),(N===Il.FILL||N===Il.FILL_STROKE)&&F.fill(),(N===Il.STROKE||N===Il.FILL_STROKE)&&F.stroke(),F.restore()):((N===Il.FILL||N===Il.FILL_STROKE)&&F.fillText(l,U,Z),(N===Il.STROKE||N===Il.FILL_STROKE)&&F.strokeText(l,U,Z)),s&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:Nl(F),x:U,y:Z,fontSize:t,addToPath:n})}get isFontSubpixelAAEnabled(){const{context:l}=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10);l.scale(1.5,1),l.fillText("I",0,10);const U=l.getImageData(0,0,10,10).data;let Z=!1;for(let d=3;d<U.length;d+=4)if(U[d]>0&&U[d]<255){Z=!0;break}return P(this,"isFontSubpixelAAEnabled",Z)}showText(l){const U=this.current,Z=U.font;if(Z.isType3Font)return this.showType3Text(l);const d=U.fontSize;if(d===0)return;const F=this.ctx,V=U.fontSizeScale,W=U.charSpacing,c=U.wordSpacing,t=U.fontDirection,N=U.textHScale*t,s=l.length,b=Z.vertical,n=b?1:-1,m=Z.defaultVMetrics,M=d*U.fontMatrix[0],G=U.textRenderingMode===Il.FILL&&!Z.disableFontFace&&!U.patternFill;F.save(),F.transform(...U.textMatrix),F.translate(U.x,U.y+U.textRise),t>0?F.scale(N,-1):F.scale(N,1);let J;if(U.patternFill){F.save();const X=U.fillColor.getPattern(F,this,cZ(F),vl.FILL);J=Nl(F),F.restore(),F.fillStyle=X}let T=U.lineWidth;const S=U.textMatrixScale;if(S===0||T===0){const X=U.textRenderingMode&Il.FILL_STROKE_MASK;(X===Il.STROKE||X===Il.FILL_STROKE)&&(T=this.getSinglePixelWidth())}else T/=S;if(V!==1&&(F.scale(V,V),T/=V),F.lineWidth=T,Z.isInvalidPDFjsFont){const X=[];let B=0;for(const p of l)X.push(p.unicode),B+=p.width;F.fillText(X.join(""),0,0),U.x+=B*M*N,F.restore(),this.compose();return}let Y=0,e;for(e=0;e<s;++e){const X=l[e];if(typeof X=="number"){Y+=n*X*d/1e3;continue}let B=!1;const p=(X.isSpace?c:0)+W,u=X.fontChar,I=X.accent;let D,A,K=X.width;if(b){const _=X.vmetric||m,cl=-(X.vmetric?_[1]:K*.5)*M,E=_[2]*M;K=_?-_[0]:K,D=cl/V,A=(Y+E)/V}else D=Y/V,A=0;if(Z.remeasure&&K>0){const _=F.measureText(u).width*1e3/d*V;if(K<_&&this.isFontSubpixelAAEnabled){const cl=K/_;B=!0,F.save(),F.scale(cl,1),D/=cl}else K!==_&&(D+=(K-_)/2e3*d/V)}if(this.contentVisible&&(X.isInFont||Z.missingFile)){if(G&&!I)F.fillText(u,D,A);else if(this.paintChar(u,D,A,J),I){const _=D+d*I.offset.x/V,cl=A-d*I.offset.y/V;this.paintChar(I.fontChar,_,cl,J)}}const ll=b?K*M-p*t:K*M+p*t;Y+=ll,B&&F.restore()}b?U.y-=Y:U.x+=Y*N,F.restore(),this.compose()}showType3Text(l){const U=this.ctx,Z=this.current,d=Z.font,F=Z.fontSize,V=Z.fontDirection,W=d.vertical?1:-1,c=Z.charSpacing,t=Z.wordSpacing,N=Z.textHScale*V,s=Z.fontMatrix||yc,b=l.length,n=Z.textRenderingMode===Il.INVISIBLE;let m,M,G,J;if(!(n||F===0)){for(this._cachedScaleForStroking[0]=-1,this._cachedGetSinglePixelWidth=null,U.save(),U.transform(...Z.textMatrix),U.translate(Z.x,Z.y),U.scale(N,V),m=0;m<b;++m){if(M=l[m],typeof M=="number"){J=W*M*F/1e3,this.ctx.translate(J,0),Z.x+=J*N;continue}const T=(M.isSpace?t:0)+c,S=d.charProcOperatorList[M.operatorListId];if(!S){O(`Type3 character "${M.operatorListId}" is not available.`);continue}this.contentVisible&&(this.processingType3=M,this.save(),U.scale(F,F),U.transform(...s),this.executeOperatorList(S),this.restore()),G=k.applyTransform([M.width,0],s)[0]*F+T,U.translate(G,0),Z.x+=G*N}U.restore(),this.processingType3=null}}setCharWidth(l,U){}setCharWidthAndBounds(l,U,Z,d,F,V){this.ctx.rect(Z,d,F-Z,V-d),this.ctx.clip(),this.endPath()}getColorN_Pattern(l){let U;if(l[0]==="TilingPattern"){const Z=l[1],d=this.baseTransform||Nl(this.ctx),F={createCanvasGraphics:V=>new WR(V,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};U=new Qt(l,Z,this.ctx,F,d)}else U=this._getPattern(l[1],l[2]);return U}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments)}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0}setStrokeRGBColor(l,U,Z){this.ctx.strokeStyle=this.current.strokeColor=k.makeHexColor(l,U,Z)}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor="transparent"}setFillRGBColor(l,U,Z){this.ctx.fillStyle=this.current.fillColor=k.makeHexColor(l,U,Z),this.current.patternFill=!1}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor="transparent",this.current.patternFill=!1}_getPattern(l,U=null){let Z;return this.cachedPatterns.has(l)?Z=this.cachedPatterns.get(l):(Z=rb(this.getObject(l)),this.cachedPatterns.set(l,Z)),U&&(Z.matrix=U),Z}shadingFill(l){if(!this.contentVisible)return;const U=this.ctx;this.save();const Z=this._getPattern(l);U.fillStyle=Z.getPattern(U,this,cZ(U),vl.SHADING);const d=cZ(U);if(d){const{width:F,height:V}=U.canvas,[W,c,t,N]=k.getAxialAlignedBoundingBox([0,0,F,V],d);this.ctx.fillRect(W,c,t-W,N-c)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.compose(this.current.getClippedPathBoundingBox()),this.restore()}beginInlineImage(){dl("Should not call beginInlineImage")}beginImageData(){dl("Should not call beginImageData")}paintFormXObjectBegin(l,U){if(this.contentVisible&&(this.save(),this.baseTransformStack.push(this.baseTransform),l&&this.transform(...l),this.baseTransform=Nl(this.ctx),U)){const Z=U[2]-U[0],d=U[3]-U[1];this.ctx.rect(U[0],U[1],Z,d),this.current.updateRectMinMax(Nl(this.ctx),U),this.clip(),this.endPath()}}paintFormXObjectEnd(){this.contentVisible&&(this.restore(),this.baseTransform=this.baseTransformStack.pop())}beginGroup(l){if(!this.contentVisible)return;this.save(),this.inSMaskMode&&(this.endSMaskMode(),this.current.activeSMask=null);const U=this.ctx;l.isolated||sc("TODO: Support non-isolated groups."),l.knockout&&O("Knockout groups not supported.");const Z=Nl(U);if(l.matrix&&U.transform(...l.matrix),!l.bbox)throw new Error("Bounding box is required.");let d=k.getAxialAlignedBoundingBox(l.bbox,Nl(U));const F=[0,0,U.canvas.width,U.canvas.height];d=k.intersect(d,F)||[0,0,0,0];const V=Math.floor(d[0]),W=Math.floor(d[1]),c=Math.max(Math.ceil(d[2])-V,1),t=Math.max(Math.ceil(d[3])-W,1);this.current.startNewPathAndClipBox([0,0,c,t]);let N="groupAt"+this.groupLevel;l.smask&&(N+="_smask_"+this.smaskCounter++%2);const s=this.cachedCanvases.getCanvas(N,c,t),b=s.context;b.translate(-V,-W),b.transform(...Z),l.smask?this.smaskStack.push({canvas:s.canvas,context:b,offsetX:V,offsetY:W,subtype:l.smask.subtype,backdrop:l.smask.backdrop,transferMap:l.smask.transferMap||null,startTransformInverse:null}):(U.setTransform(1,0,0,1,0,0),U.translate(V,W),U.save()),r0(U,b),this.ctx=b,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(U),this.groupLevel++}endGroup(l){if(!this.contentVisible)return;this.groupLevel--;const U=this.ctx,Z=this.groupStack.pop();if(this.ctx=Z,this.ctx.imageSmoothingEnabled=!1,l.smask)this.tempSMask=this.smaskStack.pop(),this.restore();else{this.ctx.restore();const d=Nl(this.ctx);this.restore(),this.ctx.save(),this.ctx.setTransform(...d);const F=k.getAxialAlignedBoundingBox([0,0,U.canvas.width,U.canvas.height],d);this.ctx.drawImage(U.canvas,0,0),this.ctx.restore(),this.compose(F)}}beginAnnotation(l,U,Z,d,F){if(h(this,Md,Vt).call(this),FW(this.ctx),this.ctx.save(),this.save(),this.baseTransform&&this.ctx.setTransform(...this.baseTransform),U){const V=U[2]-U[0],W=U[3]-U[1];if(F&&this.annotationCanvasMap){Z=Z.slice(),Z[4]-=U[0],Z[5]-=U[1],U=U.slice(),U[0]=U[1]=0,U[2]=V,U[3]=W;const[c,t]=k.singularValueDecompose2dScale(Nl(this.ctx)),{viewportScale:N}=this,s=Math.ceil(V*this.outputScaleX*N),b=Math.ceil(W*this.outputScaleY*N);this.annotationCanvas=this.canvasFactory.create(s,b);const{canvas:n,context:m}=this.annotationCanvas;this.annotationCanvasMap.set(l,n),this.annotationCanvas.savedCtx=this.ctx,this.ctx=m,this.ctx.save(),this.ctx.setTransform(c,0,0,-t,0,W*t),FW(this.ctx)}else FW(this.ctx),this.ctx.rect(U[0],U[1],V,W),this.ctx.clip(),this.endPath()}this.current=new SR(this.ctx.canvas.width,this.ctx.canvas.height),this.transform(...Z),this.transform(...d)}endAnnotation(){this.annotationCanvas&&(this.ctx.restore(),h(this,Md,Wt).call(this),this.ctx=this.annotationCanvas.savedCtx,delete this.annotationCanvas.savedCtx,delete this.annotationCanvas)}paintImageMaskXObject(l){if(!this.contentVisible)return;const U=l.count;l=this.getObject(l.data,l),l.count=U;const Z=this.ctx,d=this.processingType3;if(d&&(d.compiled===void 0&&(d.compiled=Pb(l)),d.compiled)){d.compiled(Z);return}const F=this._createMaskCanvas(l),V=F.canvas;Z.save(),Z.setTransform(1,0,0,1,0,0),Z.drawImage(V,F.offsetX,F.offsetY),Z.restore(),this.compose()}paintImageMaskXObjectRepeat(l,U,Z=0,d=0,F,V){if(!this.contentVisible)return;l=this.getObject(l.data,l);const W=this.ctx;W.save();const c=Nl(W);W.transform(U,Z,d,F,0,0);const t=this._createMaskCanvas(l);W.setTransform(1,0,0,1,t.offsetX-c[4],t.offsetY-c[5]);for(let N=0,s=V.length;N<s;N+=2){const b=k.transform(c,[U,Z,d,F,V[N],V[N+1]]),[n,m]=k.applyTransform([0,0],b);W.drawImage(t.canvas,n,m)}W.restore(),this.compose()}paintImageMaskXObjectGroup(l){if(!this.contentVisible)return;const U=this.ctx,Z=this.current.fillColor,d=this.current.patternFill;for(const F of l){const{data:V,width:W,height:c,transform:t}=F,N=this.cachedCanvases.getCanvas("maskCanvas",W,c),s=N.context;s.save();const b=this.getObject(V,F);XR(s,b),s.globalCompositeOperation="source-in",s.fillStyle=d?Z.getPattern(s,this,cZ(U),vl.FILL):Z,s.fillRect(0,0,W,c),s.restore(),U.save(),U.transform(...t),U.scale(1,-1),dW(U,N.canvas,0,0,W,c,0,-1,1,1),U.restore()}this.compose()}paintImageXObject(l){if(!this.contentVisible)return;const U=this.getObject(l);if(!U){O("Dependent image isn't ready yet");return}this.paintInlineImageXObject(U)}paintImageXObjectRepeat(l,U,Z,d){if(!this.contentVisible)return;const F=this.getObject(l);if(!F){O("Dependent image isn't ready yet");return}const V=F.width,W=F.height,c=[];for(let t=0,N=d.length;t<N;t+=2)c.push({transform:[U,0,0,Z,d[t],d[t+1]],x:0,y:0,w:V,h:W});this.paintInlineImageXObjectGroup(F,c)}applyTransferMapsToCanvas(l){return this.current.transferMaps!=="none"&&(l.filter=this.current.transferMaps,l.drawImage(l.canvas,0,0),l.filter="none"),l.canvas}applyTransferMapsToBitmap(l){if(this.current.transferMaps==="none")return l.bitmap;const{bitmap:U,width:Z,height:d}=l,F=this.cachedCanvases.getCanvas("inlineImage",Z,d),V=F.context;return V.filter=this.current.transferMaps,V.drawImage(U,0,0),V.filter="none",F.canvas}paintInlineImageXObject(l){if(!this.contentVisible)return;const U=l.width,Z=l.height,d=this.ctx;if(this.save(),!rl){const{filter:W}=d;W!=="none"&&W!==""&&(d.filter="none")}d.scale(1/U,-1/Z);let F;if(l.bitmap)F=this.applyTransferMapsToBitmap(l);else if(typeof HTMLElement=="function"&&l instanceof HTMLElement||!l.data)F=l;else{const c=this.cachedCanvases.getCanvas("inlineImage",U,Z).context;YR(c,l),F=this.applyTransferMapsToCanvas(c)}const V=this._scaleImage(F,cZ(d));d.imageSmoothingEnabled=BR(Nl(d),l.interpolate),dW(d,V.img,0,0,V.paintWidth,V.paintHeight,0,-Z,U,Z),this.compose(),this.restore()}paintInlineImageXObjectGroup(l,U){if(!this.contentVisible)return;const Z=this.ctx;let d;if(l.bitmap)d=l.bitmap;else{const F=l.width,V=l.height,c=this.cachedCanvases.getCanvas("inlineImage",F,V).context;YR(c,l),d=this.applyTransferMapsToCanvas(c)}for(const F of U)Z.save(),Z.transform(...F.transform),Z.scale(1,-1),dW(Z,d,F.x,F.y,F.w,F.h,0,-1,1,1),Z.restore();this.compose()}paintSolidColorImageMask(){this.contentVisible&&(this.ctx.fillRect(0,0,1,1),this.compose())}markPoint(l){}markPointProps(l,U){}beginMarkedContent(l){this.markedContentStack.push({visible:!0})}beginMarkedContentProps(l,U){l==="OC"?this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(U)}):this.markedContentStack.push({visible:!0}),this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop(),this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(l){const U=this.current.isEmptyClip();this.pendingClip&&this.current.updateClipFromPath(),this.pendingClip||this.compose(l);const Z=this.ctx;this.pendingClip&&(U||(this.pendingClip===eR?Z.clip("evenodd"):Z.clip()),this.pendingClip=null),this.current.startNewPathAndClipBox(this.current.clipBox),Z.beginPath()}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const l=Nl(this.ctx);if(l[1]===0&&l[2]===0)this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(l[0]),Math.abs(l[3]));else{const U=Math.abs(l[0]*l[3]-l[2]*l[1]),Z=Math.hypot(l[0],l[2]),d=Math.hypot(l[1],l[3]);this._cachedGetSinglePixelWidth=Math.max(Z,d)/U}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:l}=this.current,{a:U,b:Z,c:d,d:F}=this.ctx.getTransform();let V,W;if(Z===0&&d===0){const c=Math.abs(U),t=Math.abs(F);if(c===t)if(l===0)V=W=1/c;else{const N=c*l;V=W=N<1?1/N:1}else if(l===0)V=1/c,W=1/t;else{const N=c*l,s=t*l;V=N<1?1/N:1,W=s<1?1/s:1}}else{const c=Math.abs(U*F-Z*d),t=Math.hypot(U,Z),N=Math.hypot(d,F);if(l===0)V=N/c,W=t/c;else{const s=l*c;V=N>s?N/s:1,W=t>s?t/s:1}}this._cachedScaleForStroking[0]=V,this._cachedScaleForStroking[1]=W}return this._cachedScaleForStroking}rescaleAndStroke(l){const{ctx:U}=this,{lineWidth:Z}=this.current,[d,F]=this.getScaleForStroking();if(U.lineWidth=Z||1,d===1&&F===1){U.stroke();return}const V=U.getLineDash();if(l&&U.save(),U.scale(d,F),V.length>0){const W=Math.max(d,F);U.setLineDash(V.map(c=>c/W)),U.lineDashOffset/=W}U.stroke(),l&&U.restore()}isContentVisible(){for(let l=this.markedContentStack.length-1;l>=0;l--)if(!this.markedContentStack[l].visible)return!1;return!0}};Md=new WeakSet,Vt=function(){for(;this.stateStack.length||this.inSMaskMode;)this.restore();this.current.activeSMask=null,this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null)},Wt=function(){if(this.pageColors){const l=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(l!=="none"){const U=this.ctx.filter;this.ctx.filter=l,this.ctx.drawImage(this.ctx.canvas,0,0),this.ctx.filter=U}}};let HF=WR;for(const R in SU)HF.prototype[R]!==void 0&&(HF.prototype[SU[R]]=HF.prototype[R]);var rQ,gQ;class wZ{static get workerPort(){return Q(this,rQ)}static set workerPort(l){if(!(typeof Worker<"u"&&l instanceof Worker)&&l!==null)throw new Error("Invalid `workerPort` type.");a(this,rQ,l)}static get workerSrc(){return Q(this,gQ)}static set workerSrc(l){if(typeof l!="string")throw new Error("Invalid `workerSrc` type.");a(this,gQ,l)}}rQ=new WeakMap,gQ=new WeakMap,i(wZ,rQ,null),i(wZ,gQ,"");const QW={UNKNOWN:0,DATA:1,ERROR:2},al={UNKNOWN:0,CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function dU(R){switch(R instanceof Error||typeof R=="object"&&R!==null||dl('wrapReason: Expected "reason" to be a (possibly cloned) Error.'),R.name){case"AbortException":return new LF(R.message);case"MissingPDFException":return new zF(R.message);case"PasswordException":return new Lc(R.message,R.code);case"UnexpectedResponseException":return new bc(R.message,R.status);case"UnknownErrorException":return new kc(R.message,R.details);default:return new kc(R.message,R.toString())}}var ZZ,GN,TN,hW;class q0{constructor(l,U,Z){i(this,ZZ);this.sourceName=l,this.targetName=U,this.comObj=Z,this.callbackId=1,this.streamId=1,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=d=>{const F=d.data;if(F.targetName!==this.sourceName)return;if(F.stream){h(this,ZZ,TN).call(this,F);return}if(F.callback){const W=F.callbackId,c=this.callbackCapabilities[W];if(!c)throw new Error(`Cannot resolve callback ${W}`);if(delete this.callbackCapabilities[W],F.callback===QW.DATA)c.resolve(F.data);else if(F.callback===QW.ERROR)c.reject(dU(F.reason));else throw new Error("Unexpected callback case");return}const V=this.actionHandler[F.action];if(!V)throw new Error(`Unknown action from worker: ${F.action}`);if(F.callbackId){const W=this.sourceName,c=F.sourceName;new Promise(function(t){t(V(F.data))}).then(function(t){Z.postMessage({sourceName:W,targetName:c,callback:QW.DATA,callbackId:F.callbackId,data:t})},function(t){Z.postMessage({sourceName:W,targetName:c,callback:QW.ERROR,callbackId:F.callbackId,reason:dU(t)})});return}if(F.streamId){h(this,ZZ,GN).call(this,F);return}V(F.data)},Z.addEventListener("message",this._onComObjOnMessage)}on(l,U){const Z=this.actionHandler;if(Z[l])throw new Error(`There is already an actionName called "${l}"`);Z[l]=U}send(l,U,Z){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,data:U},Z)}sendWithPromise(l,U,Z){const d=this.callbackId++,F=Promise.withResolvers();this.callbackCapabilities[d]=F;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:l,callbackId:d,data:U},Z)}catch(V){F.reject(V)}return F.promise}sendWithStream(l,U,Z,d){const F=this.streamId++,V=this.sourceName,W=this.targetName,c=this.comObj;return new ReadableStream({start:t=>{const N=Promise.withResolvers();return this.streamControllers[F]={controller:t,startCall:N,pullCall:null,cancelCall:null,isClosed:!1},c.postMessage({sourceName:V,targetName:W,action:l,streamId:F,data:U,desiredSize:t.desiredSize},d),N.promise},pull:t=>{const N=Promise.withResolvers();return this.streamControllers[F].pullCall=N,c.postMessage({sourceName:V,targetName:W,stream:al.PULL,streamId:F,desiredSize:t.desiredSize}),N.promise},cancel:t=>{Yl(t instanceof Error,"cancel must have a valid reason");const N=Promise.withResolvers();return this.streamControllers[F].cancelCall=N,this.streamControllers[F].isClosed=!0,c.postMessage({sourceName:V,targetName:W,stream:al.CANCEL,streamId:F,reason:dU(t)}),N.promise}},Z)}destroy(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}ZZ=new WeakSet,GN=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,F=this.comObj,V=this,W=this.actionHandler[l.action],c={enqueue(t,N=1,s){if(this.isCancelled)return;const b=this.desiredSize;this.desiredSize-=N,b>0&&this.desiredSize<=0&&(this.sinkCapability=Promise.withResolvers(),this.ready=this.sinkCapability.promise),F.postMessage({sourceName:Z,targetName:d,stream:al.ENQUEUE,streamId:U,chunk:t},s)},close(){this.isCancelled||(this.isCancelled=!0,F.postMessage({sourceName:Z,targetName:d,stream:al.CLOSE,streamId:U}),delete V.streamSinks[U])},error(t){Yl(t instanceof Error,"error must have a valid reason"),!this.isCancelled&&(this.isCancelled=!0,F.postMessage({sourceName:Z,targetName:d,stream:al.ERROR,streamId:U,reason:dU(t)}))},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:l.desiredSize,ready:null};c.sinkCapability.resolve(),c.ready=c.sinkCapability.promise,this.streamSinks[U]=c,new Promise(function(t){t(W(l.data,c))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:al.START_COMPLETE,streamId:U,success:!0})},function(t){F.postMessage({sourceName:Z,targetName:d,stream:al.START_COMPLETE,streamId:U,reason:dU(t)})})},TN=function(l){const U=l.streamId,Z=this.sourceName,d=l.sourceName,F=this.comObj,V=this.streamControllers[U],W=this.streamSinks[U];switch(l.stream){case al.START_COMPLETE:l.success?V.startCall.resolve():V.startCall.reject(dU(l.reason));break;case al.PULL_COMPLETE:l.success?V.pullCall.resolve():V.pullCall.reject(dU(l.reason));break;case al.PULL:if(!W){F.postMessage({sourceName:Z,targetName:d,stream:al.PULL_COMPLETE,streamId:U,success:!0});break}W.desiredSize<=0&&l.desiredSize>0&&W.sinkCapability.resolve(),W.desiredSize=l.desiredSize,new Promise(function(c){var t;c((t=W.onPull)==null?void 0:t.call(W))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:al.PULL_COMPLETE,streamId:U,success:!0})},function(c){F.postMessage({sourceName:Z,targetName:d,stream:al.PULL_COMPLETE,streamId:U,reason:dU(c)})});break;case al.ENQUEUE:if(Yl(V,"enqueue should have stream controller"),V.isClosed)break;V.controller.enqueue(l.chunk);break;case al.CLOSE:if(Yl(V,"close should have stream controller"),V.isClosed)break;V.isClosed=!0,V.controller.close(),h(this,ZZ,hW).call(this,V,U);break;case al.ERROR:Yl(V,"error should have stream controller"),V.controller.error(dU(l.reason)),h(this,ZZ,hW).call(this,V,U);break;case al.CANCEL_COMPLETE:l.success?V.cancelCall.resolve():V.cancelCall.reject(dU(l.reason)),h(this,ZZ,hW).call(this,V,U);break;case al.CANCEL:if(!W)break;new Promise(function(c){var t;c((t=W.onCancel)==null?void 0:t.call(W,dU(l.reason)))}).then(function(){F.postMessage({sourceName:Z,targetName:d,stream:al.CANCEL_COMPLETE,streamId:U,success:!0})},function(c){F.postMessage({sourceName:Z,targetName:d,stream:al.CANCEL_COMPLETE,streamId:U,reason:dU(c)})}),W.sinkCapability.reject(dU(l.reason)),W.isCancelled=!0,delete this.streamSinks[U];break;default:throw new Error("Unexpected stream case")}},hW=async function(l,U){var Z,d,F;await Promise.allSettled([(Z=l.startCall)==null?void 0:Z.promise,(d=l.pullCall)==null?void 0:d.promise,(F=l.cancelCall)==null?void 0:F.promise]),delete this.streamControllers[U]};var Hd,KQ;class qb{constructor({parsedData:l,rawData:U}){i(this,Hd);i(this,KQ);a(this,Hd,l),a(this,KQ,U)}getRaw(){return Q(this,KQ)}get(l){return Q(this,Hd).get(l)??null}getAll(){return At(Q(this,Hd))}has(l){return Q(this,Hd).has(l)}}Hd=new WeakMap,KQ=new WeakMap;const vZ=Symbol("INTERNAL");var HQ,vQ,PQ,W0;class $b{constructor(l,{name:U,intent:Z,usage:d}){i(this,HQ,!1);i(this,vQ,!1);i(this,PQ,!1);i(this,W0,!0);a(this,HQ,!!(l&bU.DISPLAY)),a(this,vQ,!!(l&bU.PRINT)),this.name=U,this.intent=Z,this.usage=d}get visible(){if(Q(this,PQ))return Q(this,W0);if(!Q(this,W0))return!1;const{print:l,view:U}=this.usage;return Q(this,HQ)?(U==null?void 0:U.viewState)!=="OFF":Q(this,vQ)?(l==null?void 0:l.printState)!=="OFF":!0}_setVisible(l,U,Z=!1){l!==vZ&&dl("Internal method `_setVisible` called."),a(this,PQ,Z),a(this,W0,U)}}HQ=new WeakMap,vQ=new WeakMap,PQ=new WeakMap,W0=new WeakMap;var Ud,Zl,c0,t0,fQ,ct;class ln{constructor(l,U=bU.DISPLAY){i(this,fQ);i(this,Ud,null);i(this,Zl,new Map);i(this,c0,null);i(this,t0,null);if(this.renderingIntent=U,this.name=null,this.creator=null,l!==null){this.name=l.name,this.creator=l.creator,a(this,t0,l.order);for(const Z of l.groups)Q(this,Zl).set(Z.id,new $b(U,Z));if(l.baseState==="OFF")for(const Z of Q(this,Zl).values())Z._setVisible(vZ,!1);for(const Z of l.on)Q(this,Zl).get(Z)._setVisible(vZ,!0);for(const Z of l.off)Q(this,Zl).get(Z)._setVisible(vZ,!1);a(this,c0,this.getHash())}}isVisible(l){if(Q(this,Zl).size===0)return!0;if(!l)return sc("Optional content group not defined."),!0;if(l.type==="OCG")return Q(this,Zl).has(l.id)?Q(this,Zl).get(l.id).visible:(O(`Optional content group not found: ${l.id}`),!0);if(l.type==="OCMD"){if(l.expression)return h(this,fQ,ct).call(this,l.expression);if(!l.policy||l.policy==="AnyOn"){for(const U of l.ids){if(!Q(this,Zl).has(U))return O(`Optional content group not found: ${U}`),!0;if(Q(this,Zl).get(U).visible)return!0}return!1}else if(l.policy==="AllOn"){for(const U of l.ids){if(!Q(this,Zl).has(U))return O(`Optional content group not found: ${U}`),!0;if(!Q(this,Zl).get(U).visible)return!1}return!0}else if(l.policy==="AnyOff"){for(const U of l.ids){if(!Q(this,Zl).has(U))return O(`Optional content group not found: ${U}`),!0;if(!Q(this,Zl).get(U).visible)return!0}return!1}else if(l.policy==="AllOff"){for(const U of l.ids){if(!Q(this,Zl).has(U))return O(`Optional content group not found: ${U}`),!0;if(Q(this,Zl).get(U).visible)return!1}return!0}return O(`Unknown optional content policy ${l.policy}.`),!0}return O(`Unknown group type ${l.type}.`),!0}setVisibility(l,U=!0){const Z=Q(this,Zl).get(l);if(!Z){O(`Optional content group not found: ${l}`);return}Z._setVisible(vZ,!!U,!0),a(this,Ud,null)}setOCGState({state:l,preserveRB:U}){let Z;for(const d of l){switch(d){case"ON":case"OFF":case"Toggle":Z=d;continue}const F=Q(this,Zl).get(d);if(F)switch(Z){case"ON":F._setVisible(vZ,!0);break;case"OFF":F._setVisible(vZ,!1);break;case"Toggle":F._setVisible(vZ,!F.visible);break}}a(this,Ud,null)}get hasInitialVisibility(){return Q(this,c0)===null||this.getHash()===Q(this,c0)}getOrder(){return Q(this,Zl).size?Q(this,t0)?Q(this,t0).slice():[...Q(this,Zl).keys()]:null}getGroups(){return Q(this,Zl).size>0?At(Q(this,Zl)):null}getGroup(l){return Q(this,Zl).get(l)||null}getHash(){if(Q(this,Ud)!==null)return Q(this,Ud);const l=new mN;for(const[U,Z]of Q(this,Zl))l.update(`${U}:${Z.visible}`);return a(this,Ud,l.hexdigest())}}Ud=new WeakMap,Zl=new WeakMap,c0=new WeakMap,t0=new WeakMap,fQ=new WeakSet,ct=function(l){const U=l.length;if(U<2)return!0;const Z=l[0];for(let d=1;d<U;d++){const F=l[d];let V;if(Array.isArray(F))V=h(this,fQ,ct).call(this,F);else if(Q(this,Zl).has(F))V=Q(this,Zl).get(F).visible;else return O(`Optional content group not found: ${F}`),!0;switch(Z){case"And":if(!V)return!1;break;case"Or":if(V)return!0;break;case"Not":return!V;default:return!0}}return Z==="And"};class Un{constructor(l,{disableRange:U=!1,disableStream:Z=!1}){Yl(l,'PDFDataTransportStream - missing required "pdfDataRangeTransport" argument.');const{length:d,initialData:F,progressiveDone:V,contentDispositionFilename:W}=l;if(this._queuedChunks=[],this._progressiveDone=V,this._contentDispositionFilename=W,(F==null?void 0:F.length)>0){const c=F instanceof Uint8Array&&F.byteLength===F.buffer.byteLength?F.buffer:new Uint8Array(F).buffer;this._queuedChunks.push(c)}this._pdfDataRangeTransport=l,this._isStreamingSupported=!Z,this._isRangeSupported=!U,this._contentLength=d,this._fullRequestReader=null,this._rangeReaders=[],l.addRangeListener((c,t)=>{this._onReceiveData({begin:c,chunk:t})}),l.addProgressListener((c,t)=>{this._onProgress({loaded:c,total:t})}),l.addProgressiveReadListener(c=>{this._onReceiveData({chunk:c})}),l.addProgressiveDoneListener(()=>{this._onProgressiveDone()}),l.transportReady()}_onReceiveData({begin:l,chunk:U}){const Z=U instanceof Uint8Array&&U.byteLength===U.buffer.byteLength?U.buffer:new Uint8Array(U).buffer;if(l===void 0)this._fullRequestReader?this._fullRequestReader._enqueue(Z):this._queuedChunks.push(Z);else{const d=this._rangeReaders.some(function(F){return F._begin!==l?!1:(F._enqueue(Z),!0)});Yl(d,"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.")}}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}_onProgress(l){var U,Z,d,F;l.total===void 0?(Z=(U=this._rangeReaders[0])==null?void 0:U.onProgress)==null||Z.call(U,{loaded:l.loaded}):(F=(d=this._fullRequestReader)==null?void 0:d.onProgress)==null||F.call(d,{loaded:l.loaded,total:l.total})}_onProgressiveDone(){var l;(l=this._fullRequestReader)==null||l.progressiveDone(),this._progressiveDone=!0}_removeRangeReader(l){const U=this._rangeReaders.indexOf(l);U>=0&&this._rangeReaders.splice(U,1)}getFullReader(){Yl(!this._fullRequestReader,"PDFDataTransportStream.getFullReader can only be called once.");const l=this._queuedChunks;return this._queuedChunks=null,new Zn(this,l,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new dn(this,l,U);return this._pdfDataRangeTransport.requestDataRange(l,U),this._rangeReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeReaders.slice(0))Z.cancel(l);this._pdfDataRangeTransport.abort()}}class Zn{constructor(l,U,Z=!1,d=null){this._stream=l,this._done=Z||!1,this._filename=lR(d)?d:null,this._queuedChunks=U||[],this._loaded=0;for(const F of this._queuedChunks)this._loaded+=F.byteLength;this._requests=[],this._headersReady=Promise.resolve(),l._fullRequestReader=this,this.onProgress=null}_enqueue(l){this._done||(this._requests.length>0?this._requests.shift().resolve({value:l,done:!1}):this._queuedChunks.push(l),this._loaded+=l.byteLength)}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0)return{value:this._queuedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}progressiveDone(){this._done||(this._done=!0)}}class dn{constructor(l,U,Z){this._stream=l,this._begin=U,this._end=Z,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}_enqueue(l){if(!this._done){if(this._requests.length===0)this._queuedChunk=l;else{this._requests.shift().resolve({value:l,done:!1});for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0}this._done=!0,this._stream._removeRangeReader(this)}}get isStreamingSupported(){return!1}async read(){if(this._queuedChunk){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._stream._removeRangeReader(this)}}function Fn(R){let l=!0,U=Z("filename\\*","i").exec(R);if(U){U=U[1];let N=W(U);return N=unescape(N),N=c(N),N=t(N),F(N)}if(U=V(R),U){const N=t(U);return F(N)}if(U=Z("filename","i").exec(R),U){U=U[1];let N=W(U);return N=t(N),F(N)}function Z(N,s){return new RegExp("(?:^|;)\\s*"+N+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',s)}function d(N,s){if(N){if(!/^[\x00-\xFF]+$/.test(s))return s;try{const b=new TextDecoder(N,{fatal:!0}),n=nc(s);s=b.decode(n),l=!1}catch{}}return s}function F(N){return l&&/[\x80-\xff]/.test(N)&&(N=d("utf-8",N),l&&(N=d("iso-8859-1",N))),N}function V(N){const s=[];let b;const n=Z("filename\\*((?!0\\d)\\d+)(\\*?)","ig");for(;(b=n.exec(N))!==null;){let[,M,G,J]=b;if(M=parseInt(M,10),M in s){if(M===0)break;continue}s[M]=[G,J]}const m=[];for(let M=0;M<s.length&&M in s;++M){let[G,J]=s[M];J=W(J),G&&(J=unescape(J),M===0&&(J=c(J))),m.push(J)}return m.join("")}function W(N){if(N.startsWith('"')){const s=N.slice(1).split('\\"');for(let b=0;b<s.length;++b){const n=s[b].indexOf('"');n!==-1&&(s[b]=s[b].slice(0,n),s.length=b+1),s[b]=s[b].replaceAll(/\\(.)/g,"$1")}N=s.join('"')}return N}function c(N){const s=N.indexOf("'");if(s===-1)return N;const b=N.slice(0,s),m=N.slice(s+1).replace(/^[^']*'/,"");return d(b,m)}function t(N){return!N.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(N)?N:N.replaceAll(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,function(s,b,n,m){if(n==="q"||n==="Q")return m=m.replaceAll("_"," "),m=m.replaceAll(/=([0-9a-fA-F]{2})/g,function(M,G){return String.fromCharCode(parseInt(G,16))}),d(b,m);try{m=atob(m)}catch{}return d(b,m)})}return""}function dR({getResponseHeader:R,isHttp:l,rangeChunkSize:U,disableRange:Z}){const d={allowRangeRequests:!1,suggestedLength:void 0},F=parseInt(R("Content-Length"),10);return!Number.isInteger(F)||(d.suggestedLength=F,F<=2*U)||Z||!l||R("Accept-Ranges")!=="bytes"||(R("Content-Encoding")||"identity")!=="identity"||(d.allowRangeRequests=!0),d}function FR(R){const l=R("Content-Disposition");if(l){let U=Fn(l);if(U.includes("%"))try{U=decodeURIComponent(U)}catch{}if(lR(U))return U}return null}function Jc(R,l){return R===404||R===0&&l.startsWith("file:")?new zF('Missing PDF "'+l+'".'):new bc(`Unexpected server response (${R}) while retrieving PDF "${l}".`,R)}function SN(R){return R===200||R===206}function YN(R,l,U){return{method:"GET",headers:R,signal:U.signal,mode:"cors",credentials:l?"include":"same-origin",redirect:"follow"}}function XN(R){const l=new Headers;for(const U in R){const Z=R[U];Z!==void 0&&l.append(U,Z)}return l}function BN(R){return R instanceof Uint8Array?R.buffer:R instanceof ArrayBuffer?R:(O(`getArrayBuffer - unexpected data format: ${R}`),new Uint8Array(R).buffer)}class pR{constructor(l){this.source=l,this.isHttp=/^https?:/i.test(l.url),this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Yl(!this._fullRequestReader,"PDFFetchStream.getFullReader can only be called once."),this._fullRequestReader=new Qn(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=new Vn(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class Qn{constructor(l){this._stream=l,this._reader=null,this._loaded=0,this._filename=null;const U=l.source;this._withCredentials=U.withCredentials||!1,this._contentLength=U.length,this._headersCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._abortController=new AbortController,this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._headers=XN(this._stream.httpHeaders);const Z=U.url;fetch(Z,YN(this._headers,this._withCredentials,this._abortController)).then(d=>{if(!SN(d.status))throw Jc(d.status,Z);this._reader=d.body.getReader(),this._headersCapability.resolve();const F=c=>d.headers.get(c),{allowRangeRequests:V,suggestedLength:W}=dR({getResponseHeader:F,isHttp:this._stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=V,this._contentLength=W||this._contentLength,this._filename=FR(F),!this._isStreamingSupported&&this._isRangeSupported&&this.cancel(new LF("Streaming is disabled."))}).catch(this._headersCapability.reject),this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._headersCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:BN(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}class Vn{constructor(l,U,Z){this._stream=l,this._reader=null,this._loaded=0;const d=l.source;this._withCredentials=d.withCredentials||!1,this._readCapability=Promise.withResolvers(),this._isStreamingSupported=!d.disableStream,this._abortController=new AbortController,this._headers=XN(this._stream.httpHeaders),this._headers.append("Range",`bytes=${U}-${Z-1}`);const F=d.url;fetch(F,YN(this._headers,this._withCredentials,this._abortController)).then(V=>{if(!SN(V.status))throw Jc(V.status,F);this._readCapability.resolve(),this._reader=V.body.getReader()}).catch(this._readCapability.reject),this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;await this._readCapability.promise;const{value:l,done:U}=await this._reader.read();return U?{value:l,done:U}:(this._loaded+=l.byteLength,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:BN(l),done:!1})}cancel(l){var U;(U=this._reader)==null||U.cancel(l),this._abortController.abort()}}const ec=200,pc=206;function Wn(R){const l=R.response;return typeof l!="string"?l:nc(l).buffer}class cn{constructor(l,U={}){this.url=l,this.isHttp=/^https?:/i.test(l),this.httpHeaders=this.isHttp&&U.httpHeaders||Object.create(null),this.withCredentials=U.withCredentials||!1,this.currXhrId=0,this.pendingRequests=Object.create(null)}requestRange(l,U,Z){const d={begin:l,end:U};for(const F in Z)d[F]=Z[F];return this.request(d)}requestFull(l){return this.request(l)}request(l){const U=new XMLHttpRequest,Z=this.currXhrId++,d=this.pendingRequests[Z]={xhr:U};U.open("GET",this.url),U.withCredentials=this.withCredentials;for(const F in this.httpHeaders){const V=this.httpHeaders[F];V!==void 0&&U.setRequestHeader(F,V)}return this.isHttp&&"begin"in l&&"end"in l?(U.setRequestHeader("Range",`bytes=${l.begin}-${l.end-1}`),d.expectedStatus=pc):d.expectedStatus=ec,U.responseType="arraybuffer",l.onError&&(U.onerror=function(F){l.onError(U.status)}),U.onreadystatechange=this.onStateChange.bind(this,Z),U.onprogress=this.onProgress.bind(this,Z),d.onHeadersReceived=l.onHeadersReceived,d.onDone=l.onDone,d.onError=l.onError,d.onProgress=l.onProgress,U.send(null),Z}onProgress(l,U){var d;const Z=this.pendingRequests[l];Z&&((d=Z.onProgress)==null||d.call(Z,U))}onStateChange(l,U){var c,t,N;const Z=this.pendingRequests[l];if(!Z)return;const d=Z.xhr;if(d.readyState>=2&&Z.onHeadersReceived&&(Z.onHeadersReceived(),delete Z.onHeadersReceived),d.readyState!==4||!(l in this.pendingRequests))return;if(delete this.pendingRequests[l],d.status===0&&this.isHttp){(c=Z.onError)==null||c.call(Z,d.status);return}const F=d.status||ec;if(!(F===ec&&Z.expectedStatus===pc)&&F!==Z.expectedStatus){(t=Z.onError)==null||t.call(Z,d.status);return}const W=Wn(d);if(F===pc){const s=d.getResponseHeader("Content-Range"),b=/bytes (\d+)-(\d+)\/(\d+)/.exec(s);Z.onDone({begin:parseInt(b[1],10),chunk:W})}else W?Z.onDone({begin:0,chunk:W}):(N=Z.onError)==null||N.call(Z,d.status)}getRequestXhr(l){return this.pendingRequests[l].xhr}isPendingRequest(l){return l in this.pendingRequests}abortRequest(l){const U=this.pendingRequests[l].xhr;delete this.pendingRequests[l],U.abort()}}class tn{constructor(l){this._source=l,this._manager=new cn(l.url,{httpHeaders:l.httpHeaders,withCredentials:l.withCredentials}),this._rangeChunkSize=l.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(l){const U=this._rangeRequestReaders.indexOf(l);U>=0&&this._rangeRequestReaders.splice(U,1)}getFullReader(){return Yl(!this._fullRequestReader,"PDFNetworkStream.getFullReader can only be called once."),this._fullRequestReader=new Rn(this._manager,this._source),this._fullRequestReader}getRangeReader(l,U){const Z=new Nn(this._manager,l,U);return Z.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class Rn{constructor(l,U){this._manager=l;const Z={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=U.url,this._fullRequestId=l.requestFull(Z),this._headersReceivedCapability=Promise.withResolvers(),this._disableRange=U.disableRange||!1,this._contentLength=U.length,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}_onHeadersReceived(){const l=this._fullRequestId,U=this._manager.getRequestXhr(l),Z=V=>U.getResponseHeader(V),{allowRangeRequests:d,suggestedLength:F}=dR({getResponseHeader:Z,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});d&&(this._isRangeSupported=!0),this._contentLength=F||this._contentLength,this._filename=FR(Z),this._isRangeSupported&&this._manager.abortRequest(l),this._headersReceivedCapability.resolve()}_onDone(l){if(l&&(this._requests.length>0?this._requests.shift().resolve({value:l.chunk,done:!1}):this._cachedChunks.push(l.chunk)),this._done=!0,!(this._cachedChunks.length>0)){for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0}}_onError(l){this._storedError=Jc(l,this._url),this._headersReceivedCapability.reject(this._storedError);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._cachedChunks.length=0}_onProgress(l){var U;(U=this.onProgress)==null||U.call(this,{loaded:l.loaded,total:l.lengthComputable?l.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersReceivedCapability.promise}async read(){if(this._storedError)throw this._storedError;if(this._cachedChunks.length>0)return{value:this._cachedChunks.shift(),done:!1};if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0,this._headersReceivedCapability.reject(l);for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}}class Nn{constructor(l,U,Z){this._manager=l;const d={onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=l.url,this._requestId=l.requestRange(U,Z,d),this._requests=[],this._queuedChunk=null,this._done=!1,this._storedError=void 0,this.onProgress=null,this.onClosed=null}_close(){var l;(l=this.onClosed)==null||l.call(this,this)}_onDone(l){const U=l.chunk;this._requests.length>0?this._requests.shift().resolve({value:U,done:!1}):this._queuedChunk=U,this._done=!0;for(const Z of this._requests)Z.resolve({value:void 0,done:!0});this._requests.length=0,this._close()}_onError(l){this._storedError=Jc(l,this._url);for(const U of this._requests)U.reject(this._storedError);this._requests.length=0,this._queuedChunk=null}_onProgress(l){var U;this.isStreamingSupported||(U=this.onProgress)==null||U.call(this,{loaded:l.loaded})}get isStreamingSupported(){return!1}async read(){if(this._storedError)throw this._storedError;if(this._queuedChunk!==null){const U=this._queuedChunk;return this._queuedChunk=null,{value:U,done:!1}}if(this._done)return{value:void 0,done:!0};const l=Promise.withResolvers();return this._requests.push(l),l.promise}cancel(l){this._done=!0;for(const U of this._requests)U.resolve({value:void 0,done:!0});this._requests.length=0,this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}}const eN=/^file:\/\/\/[a-zA-Z]:\//;function sn(R){const l=FZ.get("url"),U=l.parse(R);return U.protocol==="file:"||U.host?U:/^[a-z]:[/\\]/i.test(R)?l.parse(`file:///${R}`):(U.host||(U.protocol="file:"),U)}class bn{constructor(l){this.source=l,this.url=sn(l.url),this.isHttp=this.url.protocol==="http:"||this.url.protocol==="https:",this.isFsUrl=this.url.protocol==="file:",this.httpHeaders=this.isHttp&&l.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}get _progressiveDataLength(){var l;return((l=this._fullRequestReader)==null?void 0:l._loaded)??0}getFullReader(){return Yl(!this._fullRequestReader,"PDFNodeStream.getFullReader can only be called once."),this._fullRequestReader=this.isFsUrl?new hn(this):new nn(this),this._fullRequestReader}getRangeReader(l,U){if(U<=this._progressiveDataLength)return null;const Z=this.isFsUrl?new mn(this,l,U):new an(this,l,U);return this._rangeRequestReaders.push(Z),Z}cancelAllRequests(l){var U;(U=this._fullRequestReader)==null||U.cancel(l);for(const Z of this._rangeRequestReaders.slice(0))Z.cancel(l)}}class pN{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null;const U=l.source;this._contentLength=U.length,this._loaded=0,this._filename=null,this._disableRange=U.disableRange||!1,this._rangeChunkSize=U.rangeChunkSize,!this._rangeChunkSize&&!this._disableRange&&(this._disableRange=!0),this._isStreamingSupported=!U.disableStream,this._isRangeSupported=!U.disableRange,this._readableStream=null,this._readCapability=Promise.withResolvers(),this._headersCapability=Promise.withResolvers()}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded,total:this._contentLength}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new LF("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}}class uN{constructor(l){this._url=l.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=Promise.withResolvers();const U=l.source;this._isStreamingSupported=!U.disableStream}get isStreamingSupported(){return this._isStreamingSupported}async read(){var Z;if(await this._readCapability.promise,this._done)return{value:void 0,done:!0};if(this._storedError)throw this._storedError;const l=this._readableStream.read();return l===null?(this._readCapability=Promise.withResolvers(),this.read()):(this._loaded+=l.length,(Z=this.onProgress)==null||Z.call(this,{loaded:this._loaded}),{value:new Uint8Array(l).buffer,done:!1})}cancel(l){if(!this._readableStream){this._error(l);return}this._readableStream.destroy(l)}_error(l){this._storedError=l,this._readCapability.resolve()}_setReadableStream(l){this._readableStream=l,l.on("readable",()=>{this._readCapability.resolve()}),l.on("end",()=>{l.destroy(),this._done=!0,this._readCapability.resolve()}),l.on("error",U=>{this._error(U)}),this._storedError&&this._readableStream.destroy(this._storedError)}}function xW(R,l){return{protocol:R.protocol,auth:R.auth,host:R.hostname,port:R.port,path:R.path,method:"GET",headers:l}}class nn extends pN{constructor(l){super(l);const U=Z=>{if(Z.statusCode===404){const W=new zF(`Missing PDF "${this._url}".`);this._storedError=W,this._headersCapability.reject(W);return}this._headersCapability.resolve(),this._setReadableStream(Z);const d=W=>this._readableStream.headers[W.toLowerCase()],{allowRangeRequests:F,suggestedLength:V}=dR({getResponseHeader:d,isHttp:l.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=F,this._contentLength=V||this._contentLength,this._filename=FR(d)};if(this._request=null,this._url.protocol==="http:"){const Z=FZ.get("http");this._request=Z.request(xW(this._url,l.httpHeaders),U)}else{const Z=FZ.get("https");this._request=Z.request(xW(this._url,l.httpHeaders),U)}this._request.on("error",Z=>{this._storedError=Z,this._headersCapability.reject(Z)}),this._request.end()}}class an extends uN{constructor(l,U,Z){super(l),this._httpHeaders={};for(const F in l.httpHeaders){const V=l.httpHeaders[F];V!==void 0&&(this._httpHeaders[F]=V)}this._httpHeaders.Range=`bytes=${U}-${Z-1}`;const d=F=>{if(F.statusCode===404){const V=new zF(`Missing PDF "${this._url}".`);this._storedError=V;return}this._setReadableStream(F)};if(this._request=null,this._url.protocol==="http:"){const F=FZ.get("http");this._request=F.request(xW(this._url,this._httpHeaders),d)}else{const F=FZ.get("https");this._request=F.request(xW(this._url,this._httpHeaders),d)}this._request.on("error",F=>{this._storedError=F}),this._request.end()}}class hn extends pN{constructor(l){super(l);let U=decodeURIComponent(this._url.path);eN.test(this._url.href)&&(U=U.replace(/^\//,""));const Z=FZ.get("fs");Z.promises.lstat(U).then(d=>{this._contentLength=d.size,this._setReadableStream(Z.createReadStream(U)),this._headersCapability.resolve()},d=>{d.code==="ENOENT"&&(d=new zF(`Missing PDF "${U}".`)),this._storedError=d,this._headersCapability.reject(d)})}}class mn extends uN{constructor(l,U,Z){super(l);let d=decodeURIComponent(this._url.path);eN.test(this._url.href)&&(d=d.replace(/^\//,""));const F=FZ.get("fs");this._setReadableStream(F.createReadStream(d,{start:U,end:Z-1}))}}const Mn=1e5,Al=30,Jn=.8;var ER,Zd,_l,AQ,_Q,vd,TZ,qQ,$Q,Pd,R0,N0,dd,s0,lV,b0,fd,UV,ZV,Ad,_d,Fd,n0,rZ,yN,zN,tt,dZ,mW,LN,kN;const Cl=class Cl{constructor({textContentSource:l,container:U,viewport:Z}){i(this,rZ);i(this,Zd,Promise.withResolvers());i(this,_l,null);i(this,AQ,!1);i(this,_Q,!!((ER=globalThis.FontInspector)!=null&&ER.enabled));i(this,vd,null);i(this,TZ,null);i(this,qQ,0);i(this,$Q,0);i(this,Pd,null);i(this,R0,null);i(this,N0,0);i(this,dd,0);i(this,s0,Object.create(null));i(this,lV,[]);i(this,b0,null);i(this,fd,[]);i(this,UV,new WeakMap);i(this,ZV,null);var c;if(l instanceof ReadableStream)a(this,b0,l);else if(typeof l=="object")a(this,b0,new ReadableStream({start(t){t.enqueue(l),t.close()}}));else throw new Error('No "textContentSource" parameter specified.');a(this,_l,a(this,R0,U)),a(this,dd,Z.scale*(globalThis.devicePixelRatio||1)),a(this,N0,Z.rotation),a(this,TZ,{prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:null});const{pageWidth:d,pageHeight:F,pageX:V,pageY:W}=Z.rawDims;a(this,ZV,[1,0,0,-1,-V,W+F]),a(this,$Q,d),a(this,qQ,F),h(c=Cl,dZ,LN).call(c),BF(U,Z),Q(this,Zd).promise.catch(()=>{}).then(()=>{Q(Cl,n0).delete(this),a(this,TZ,null),a(this,s0,null)})}render(){const l=()=>{Q(this,Pd).read().then(({value:U,done:Z})=>{if(Z){Q(this,Zd).resolve();return}Q(this,vd)??a(this,vd,U.lang),Object.assign(Q(this,s0),U.styles),h(this,rZ,yN).call(this,U.items),l()},Q(this,Zd).reject)};return a(this,Pd,Q(this,b0).getReader()),Q(Cl,n0).add(this),l(),Q(this,Zd).promise}update({viewport:l,onBefore:U=null}){var F;const Z=l.scale*(globalThis.devicePixelRatio||1),d=l.rotation;if(d!==Q(this,N0)&&(U==null||U(),a(this,N0,d),BF(Q(this,R0),{rotation:d})),Z!==Q(this,dd)){U==null||U(),a(this,dd,Z);const V={prevFontSize:null,prevFontFamily:null,div:null,properties:null,ctx:h(F=Cl,dZ,mW).call(F,Q(this,vd))};for(const W of Q(this,fd))V.properties=Q(this,UV).get(W),V.div=W,h(this,rZ,tt).call(this,V)}}cancel(){var U;const l=new LF("TextLayer task cancelled.");(U=Q(this,Pd))==null||U.cancel(l).catch(()=>{}),a(this,Pd,null),Q(this,Zd).reject(l)}get textDivs(){return Q(this,fd)}get textContentItemsStr(){return Q(this,lV)}static cleanup(){if(!(Q(this,n0).size>0)){Q(this,Ad).clear();for(const{canvas:l}of Q(this,_d).values())l.remove();Q(this,_d).clear()}}};Zd=new WeakMap,_l=new WeakMap,AQ=new WeakMap,_Q=new WeakMap,vd=new WeakMap,TZ=new WeakMap,qQ=new WeakMap,$Q=new WeakMap,Pd=new WeakMap,R0=new WeakMap,N0=new WeakMap,dd=new WeakMap,s0=new WeakMap,lV=new WeakMap,b0=new WeakMap,fd=new WeakMap,UV=new WeakMap,ZV=new WeakMap,Ad=new WeakMap,_d=new WeakMap,Fd=new WeakMap,n0=new WeakMap,rZ=new WeakSet,yN=function(l){var d,F;if(Q(this,AQ))return;(F=Q(this,TZ)).ctx??(F.ctx=h(d=Cl,dZ,mW).call(d,Q(this,vd)));const U=Q(this,fd),Z=Q(this,lV);for(const V of l){if(U.length>Mn){O("Ignoring additional textDivs for performance reasons."),a(this,AQ,!0);return}if(V.str===void 0){if(V.type==="beginMarkedContentProps"||V.type==="beginMarkedContent"){const W=Q(this,_l);a(this,_l,document.createElement("span")),Q(this,_l).classList.add("markedContent"),V.id!==null&&Q(this,_l).setAttribute("id",`${V.id}`),W.append(Q(this,_l))}else V.type==="endMarkedContent"&&a(this,_l,Q(this,_l).parentNode);continue}Z.push(V.str),h(this,rZ,zN).call(this,V)}},zN=function(l){var M;const U=document.createElement("span"),Z={angle:0,canvasWidth:0,hasText:l.str!=="",hasEOL:l.hasEOL,fontSize:0};Q(this,fd).push(U);const d=k.transform(Q(this,ZV),l.transform);let F=Math.atan2(d[1],d[0]);const V=Q(this,s0)[l.fontName];V.vertical&&(F+=Math.PI/2);const W=Q(this,_Q)&&V.fontSubstitution||V.fontFamily,c=Math.hypot(d[2],d[3]),t=c*h(M=Cl,dZ,kN).call(M,W,Q(this,vd));let N,s;F===0?(N=d[4],s=d[5]-t):(N=d[4]+t*Math.sin(F),s=d[5]-t*Math.cos(F));const b="calc(var(--scale-factor)*",n=U.style;Q(this,_l)===Q(this,R0)?(n.left=`${(100*N/Q(this,$Q)).toFixed(2)}%`,n.top=`${(100*s/Q(this,qQ)).toFixed(2)}%`):(n.left=`${b}${N.toFixed(2)}px)`,n.top=`${b}${s.toFixed(2)}px)`),n.fontSize=`${b}${(Q(Cl,Fd)*c).toFixed(2)}px)`,n.fontFamily=W,Z.fontSize=c,U.setAttribute("role","presentation"),U.textContent=l.str,U.dir=l.dir,Q(this,_Q)&&(U.dataset.fontName=V.fontSubstitutionLoadedName||l.fontName),F!==0&&(Z.angle=F*(180/Math.PI));let m=!1;if(l.str.length>1)m=!0;else if(l.str!==" "&&l.transform[0]!==l.transform[3]){const G=Math.abs(l.transform[0]),J=Math.abs(l.transform[3]);G!==J&&Math.max(G,J)/Math.min(G,J)>1.5&&(m=!0)}if(m&&(Z.canvasWidth=V.vertical?l.height:l.width),Q(this,UV).set(U,Z),Q(this,TZ).div=U,Q(this,TZ).properties=Z,h(this,rZ,tt).call(this,Q(this,TZ)),Z.hasText&&Q(this,_l).append(U),Z.hasEOL){const G=document.createElement("br");G.setAttribute("role","presentation"),Q(this,_l).append(G)}},tt=function(l){const{div:U,properties:Z,ctx:d,prevFontSize:F,prevFontFamily:V}=l,{style:W}=U;let c="";if(Q(Cl,Fd)>1&&(c=`scale(${1/Q(Cl,Fd)})`),Z.canvasWidth!==0&&Z.hasText){const{fontFamily:t}=W,{canvasWidth:N,fontSize:s}=Z;(F!==s||V!==t)&&(d.font=`${s*Q(this,dd)}px ${t}`,l.prevFontSize=s,l.prevFontFamily=t);const{width:b}=d.measureText(U.textContent);b>0&&(c=`scaleX(${N*Q(this,dd)/b}) ${c}`)}Z.angle!==0&&(c=`rotate(${Z.angle}deg) ${c}`),c.length>0&&(W.transform=c)},dZ=new WeakSet,mW=function(l=null){let U=Q(this,_d).get(l||(l=""));if(!U){const Z=document.createElement("canvas");Z.className="hiddenCanvasElement",Z.lang=l,document.body.append(Z),U=Z.getContext("2d",{alpha:!1,willReadFrequently:!0}),Q(this,_d).set(l,U)}return U},LN=function(){if(Q(this,Fd)!==null)return;const l=document.createElement("div");l.style.opacity=0,l.style.lineHeight=1,l.style.fontSize="1px",l.style.position="absolute",l.textContent="X",document.body.append(l),a(this,Fd,l.getBoundingClientRect().height),l.remove()},kN=function(l,U){const Z=Q(this,Ad).get(l);if(Z)return Z;const d=h(this,dZ,mW).call(this,U),F=d.font;d.canvas.width=d.canvas.height=Al,d.font=`${Al}px ${l}`;const V=d.measureText("");let W=V.fontBoundingBoxAscent,c=Math.abs(V.fontBoundingBoxDescent);if(W){const s=W/(W+c);return Q(this,Ad).set(l,s),d.canvas.width=d.canvas.height=0,d.font=F,s}d.strokeStyle="red",d.clearRect(0,0,Al,Al),d.strokeText("g",0,0);let t=d.getImageData(0,0,Al,Al).data;c=0;for(let s=t.length-1-3;s>=0;s-=4)if(t[s]>0){c=Math.ceil(s/4/Al);break}d.clearRect(0,0,Al,Al),d.strokeText("A",0,Al),t=d.getImageData(0,0,Al,Al).data,W=0;for(let s=0,b=t.length;s<b;s+=4)if(t[s]>0){W=Al-Math.floor(s/4/Al);break}d.canvas.width=d.canvas.height=0,d.font=F;const N=W?W/(W+c):Jn;return Q(this,Ad).set(l,N),N},i(Cl,dZ),i(Cl,Ad,new Map),i(Cl,_d,new Map),i(Cl,Fd,null),i(Cl,n0,new Set);let NQ=Cl;class sQ{static textContent(l){const U=[],Z={items:U,styles:Object.create(null)};function d(F){var c;if(!F)return;let V=null;const W=F.name;if(W==="#text")V=F.value;else if(sQ.shouldBuildText(W))(c=F==null?void 0:F.attributes)!=null&&c.textContent?V=F.attributes.textContent:F.value&&(V=F.value);else return;if(V!==null&&U.push({str:V}),!!F.children)for(const t of F.children)d(t)}return d(l),Z}static shouldBuildText(l){return!(l==="textarea"||l==="input"||l==="option"||l==="select")}}const Gn=65536,Tn=100,Sn=5e3,Yn=rl?Ib:Sb,Xn=rl?Eb:gR,Bn=rl?Db:Tb,en=rl?Cb:KR;function pn(R={}){typeof R=="string"||R instanceof URL?R={url:R}:(R instanceof ArrayBuffer||ArrayBuffer.isView(R))&&(R={data:R});const l=new Rt,{docId:U}=l,Z=R.url?un(R.url):null,d=R.data?yn(R.data):null,F=R.httpHeaders||null,V=R.withCredentials===!0,W=R.password??null,c=R.range instanceof oN?R.range:null,t=Number.isInteger(R.rangeChunkSize)&&R.rangeChunkSize>0?R.rangeChunkSize:Gn;let N=R.worker instanceof vF?R.worker:null;const s=R.verbosity,b=typeof R.docBaseUrl=="string"&&!Mc(R.docBaseUrl)?R.docBaseUrl:null,n=typeof R.cMapUrl=="string"?R.cMapUrl:null,m=R.cMapPacked!==!1,M=R.CMapReaderFactory||Xn,G=typeof R.standardFontDataUrl=="string"?R.standardFontDataUrl:null,J=R.StandardFontDataFactory||en,T=R.stopAtErrors!==!0,S=Number.isInteger(R.maxImageSize)&&R.maxImageSize>-1?R.maxImageSize:-1,Y=R.isEvalSupported!==!1,e=typeof R.isOffscreenCanvasSupported=="boolean"?R.isOffscreenCanvasSupported:!rl,X=Number.isInteger(R.canvasMaxAreaInBytes)?R.canvasMaxAreaInBytes:-1,B=typeof R.disableFontFace=="boolean"?R.disableFontFace:rl,p=R.fontExtraProperties===!0,u=R.enableXfa===!0,I=R.ownerDocument||globalThis.document,D=R.disableRange===!0,A=R.disableStream===!0,K=R.disableAutoFetch===!0,ll=R.pdfBug===!0,_=R.enableHWA===!0,cl=c?c.length:R.length??NaN,E=typeof R.useSystemFonts=="boolean"?R.useSystemFonts:!rl&&!B,w=typeof R.useWorkerFetch=="boolean"?R.useWorkerFetch:M===gR&&J===KR&&n&&G&&f0(n,document.baseURI)&&f0(G,document.baseURI),oF=R.canvasFactory||new Yn({ownerDocument:I,enableHWA:_}),DF=R.filterFactory||new Bn({docId:U,ownerDocument:I}),$V=null;Nb(s);const gl={canvasFactory:oF,filterFactory:DF};if(w||(gl.cMapReaderFactory=new M({baseUrl:n,isCompressed:m}),gl.standardFontDataFactory=new J({baseUrl:G})),!N){const Gd={verbosity:s,port:wZ.workerPort};N=Gd.port?vF.fromPort(Gd):new vF(Gd),l._worker=N}const ul={docId:U,apiVersion:"4.5.136",data:d,password:W,disableAutoFetch:K,rangeChunkSize:t,length:cl,docBaseUrl:b,enableXfa:u,evaluatorOptions:{maxImageSize:S,disableFontFace:B,ignoreErrors:T,isEvalSupported:Y,isOffscreenCanvasSupported:e,canvasMaxAreaInBytes:X,fontExtraProperties:p,useSystemFonts:E,cMapUrl:w?n:null,standardFontDataUrl:w?G:null}},lW={disableFontFace:B,fontExtraProperties:p,ownerDocument:I,pdfBug:ll,styleElement:$V,loadingParams:{disableAutoFetch:K,enableXfa:u}};return N.promise.then(function(){if(l.destroyed)throw new Error("Loading aborted");if(N.destroyed)throw new Error("Worker was destroyed");const Gd=N.messageHandler.sendWithPromise("GetDocRequest",ul,d?[d.buffer]:null);let KZ;if(c)KZ=new Un(c,{disableRange:D,disableStream:A});else if(!d){if(!Z)throw new Error("getDocument - no `url` parameter provided.");KZ=(QZ=>rl?function(){return typeof fetch<"u"&&typeof Response<"u"&&"body"in Response.prototype}()&&f0(QZ.url)?new pR(QZ):new bn(QZ):f0(QZ.url)?new pR(QZ):new tn(QZ))({url:Z,length:cl,httpHeaders:F,withCredentials:V,rangeChunkSize:t,disableRange:D,disableStream:A})}return Gd.then(ml=>{if(l.destroyed)throw new Error("Loading aborted");if(N.destroyed)throw new Error("Worker was destroyed");const QZ=new q0(U,ml,N.port),tR=new on(QZ,l,KZ,lW,gl);l._transport=tR,QZ.send("Ready",null)})}).catch(l._capability.reject),l}function un(R){if(R instanceof URL)return R.href;try{return new URL(R,window.location).href}catch{if(rl&&typeof R=="string")return R}throw new Error("Invalid PDF url data: either string or URL-object is expected in the url property.")}function yn(R){if(rl&&typeof Buffer<"u"&&R instanceof Buffer)throw new Error("Please provide binary data as `Uint8Array`, rather than `Buffer`.");if(R instanceof Uint8Array&&R.byteLength===R.buffer.byteLength)return R;if(typeof R=="string")return nc(R);if(R instanceof ArrayBuffer||ArrayBuffer.isView(R)||typeof R=="object"&&!isNaN(R==null?void 0:R.length))return new Uint8Array(R);throw new Error("Invalid PDF binary data: either TypedArray, string, or array-like object is expected in the data property.")}function uR(R){return typeof R=="object"&&Number.isInteger(R==null?void 0:R.num)&&R.num>=0&&Number.isInteger(R==null?void 0:R.gen)&&R.gen>=0}var Uc;const Zc=class Zc{constructor(){this._capability=Promise.withResolvers(),this._transport=null,this._worker=null,this.docId=`d${ZU(Zc,Uc)._++}`,this.destroyed=!1,this.onPassword=null,this.onProgress=null}get promise(){return this._capability.promise}async destroy(){var l,U,Z;this.destroyed=!0;try{(l=this._worker)!=null&&l.port&&(this._worker._pendingDestroy=!0),await((U=this._transport)==null?void 0:U.destroy())}catch(d){throw(Z=this._worker)!=null&&Z.port&&delete this._worker._pendingDestroy,d}this._transport=null,this._worker&&(this._worker.destroy(),this._worker=null)}};Uc=new WeakMap,i(Zc,Uc,0);let Rt=Zc;class oN{constructor(l,U,Z=!1,d=null){this.length=l,this.initialData=U,this.progressiveDone=Z,this.contentDispositionFilename=d,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=Promise.withResolvers()}addRangeListener(l){this._rangeListeners.push(l)}addProgressListener(l){this._progressListeners.push(l)}addProgressiveReadListener(l){this._progressiveReadListeners.push(l)}addProgressiveDoneListener(l){this._progressiveDoneListeners.push(l)}onDataRange(l,U){for(const Z of this._rangeListeners)Z(l,U)}onDataProgress(l,U){this._readyCapability.promise.then(()=>{for(const Z of this._progressListeners)Z(l,U)})}onDataProgressiveRead(l){this._readyCapability.promise.then(()=>{for(const U of this._progressiveReadListeners)U(l)})}onDataProgressiveDone(){this._readyCapability.promise.then(()=>{for(const l of this._progressiveDoneListeners)l()})}transportReady(){this._readyCapability.resolve()}requestDataRange(l,U){dl("Abstract method PDFDataRangeTransport.requestDataRange")}abort(){}}class zn{constructor(l,U){this._pdfInfo=l,this._transport=U}get annotationStorage(){return this._transport.annotationStorage}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return P(this,"isPureXfa",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(l){return this._transport.getPage(l)}getPageIndex(l){return this._transport.getPageIndex(l)}getDestinations(){return this._transport.getDestinations()}getDestination(l){return this._transport.getDestination(l)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getOptionalContentConfig(U)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(l=!1){return this._transport.startCleanup(l||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(l){return this._transport.cachedPageNumber(l)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}var Qd,SZ,JU,OF,iW;class Ln{constructor(l,U,Z,d=!1){i(this,JU);i(this,Qd,null);i(this,SZ,!1);this._pageIndex=l,this._pageInfo=U,this._transport=Z,this._stats=d?new aR:null,this._pdfBug=d,this.commonObjs=Z.commonObjs,this.objs=new DN,this._maybeCleanupAfterRender=!1,this._intentStates=new Map,this.destroyed=!1}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:l,rotation:U=this.rotate,offsetX:Z=0,offsetY:d=0,dontFlip:F=!1}={}){return new fV({viewBox:this.view,scale:l,rotation:U,offsetX:Z,offsetY:d,dontFlip:F})}getAnnotations({intent:l="display"}={}){const{renderingIntent:U}=this._transport.getRenderingIntent(l);return this._transport.getAnnotations(this._pageIndex,U)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return P(this,"isPureXfa",!!this._transport._htmlForXfa)}async getXfa(){var l;return((l=this._transport._htmlForXfa)==null?void 0:l.children[this._pageIndex])||null}render({canvasContext:l,viewport:U,intent:Z="display",annotationMode:d=fZ.ENABLE,transform:F=null,background:V=null,optionalContentConfigPromise:W=null,annotationCanvasMap:c=null,pageColors:t=null,printAnnotationStorage:N=null,isEditing:s=!1}){var Y,e;(Y=this._stats)==null||Y.time("Overall");const b=this._transport.getRenderingIntent(Z,d,N,s),{renderingIntent:n,cacheKey:m}=b;a(this,SZ,!1),h(this,JU,iW).call(this),W||(W=this._transport.getOptionalContentConfig(n));let M=this._intentStates.get(m);M||(M=Object.create(null),this._intentStates.set(m,M)),M.streamReaderCancelTimeout&&(clearTimeout(M.streamReaderCancelTimeout),M.streamReaderCancelTimeout=null);const G=!!(n&bU.PRINT);M.displayReadyCapability||(M.displayReadyCapability=Promise.withResolvers(),M.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(e=this._stats)==null||e.time("Page Request"),this._pumpOperatorList(b));const J=X=>{var B;M.renderTasks.delete(T),(this._maybeCleanupAfterRender||G)&&a(this,SZ,!0),h(this,JU,OF).call(this,!G),X?(T.capability.reject(X),this._abortOperatorList({intentState:M,reason:X instanceof Error?X:new Error(X)})):T.capability.resolve(),this._stats&&(this._stats.timeEnd("Rendering"),this._stats.timeEnd("Overall"),(B=globalThis.Stats)!=null&&B.enabled&&globalThis.Stats.add(this.pageNumber,this._stats))},T=new st({callback:J,params:{canvasContext:l,viewport:U,transform:F,background:V},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:c,operatorList:M.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!G,pdfBug:this._pdfBug,pageColors:t});(M.renderTasks||(M.renderTasks=new Set)).add(T);const S=T.task;return Promise.all([M.displayReadyCapability.promise,W]).then(([X,B])=>{var p;if(this.destroyed){J();return}if((p=this._stats)==null||p.time("Rendering"),!(B.renderingIntent&n))throw new Error("Must use the same `intent`-argument when calling the `PDFPageProxy.render` and `PDFDocumentProxy.getOptionalContentConfig` methods.");T.initializeGraphics({transparency:X,optionalContentConfig:B}),T.operatorListChanged()}).catch(J),S}getOperatorList({intent:l="display",annotationMode:U=fZ.ENABLE,printAnnotationStorage:Z=null,isEditing:d=!1}={}){var t;function F(){W.operatorList.lastChunk&&(W.opListReadCapability.resolve(W.operatorList),W.renderTasks.delete(c))}const V=this._transport.getRenderingIntent(l,U,Z,d,!0);let W=this._intentStates.get(V.cacheKey);W||(W=Object.create(null),this._intentStates.set(V.cacheKey,W));let c;return W.opListReadCapability||(c=Object.create(null),c.operatorListChanged=F,W.opListReadCapability=Promise.withResolvers(),(W.renderTasks||(W.renderTasks=new Set)).add(c),W.operatorList={fnArray:[],argsArray:[],lastChunk:!1,separateAnnots:null},(t=this._stats)==null||t.time("Page Request"),this._pumpOperatorList(V)),W.opListReadCapability.promise}streamTextContent({includeMarkedContent:l=!1,disableNormalization:U=!1}={}){return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,includeMarkedContent:l===!0,disableNormalization:U===!0},{highWaterMark:100,size(d){return d.items.length}})}getTextContent(l={}){if(this._transport._htmlForXfa)return this.getXfa().then(Z=>sQ.textContent(Z));const U=this.streamTextContent(l);return new Promise(function(Z,d){function F(){V.read().then(function({value:c,done:t}){if(t){Z(W);return}W.lang??(W.lang=c.lang),Object.assign(W.styles,c.styles),W.items.push(...c.items),F()},d)}const V=U.getReader(),W={items:[],styles:Object.create(null),lang:null};F()})}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=!0;const l=[];for(const U of this._intentStates.values())if(this._abortOperatorList({intentState:U,reason:new Error("Page was destroyed."),force:!0}),!U.opListReadCapability)for(const Z of U.renderTasks)l.push(Z.completed),Z.cancel();return this.objs.clear(),a(this,SZ,!1),h(this,JU,iW).call(this),Promise.all(l)}cleanup(l=!1){a(this,SZ,!0);const U=h(this,JU,OF).call(this,!1);return l&&U&&this._stats&&(this._stats=new aR),U}_startRenderPage(l,U){var d,F;const Z=this._intentStates.get(U);Z&&((d=this._stats)==null||d.timeEnd("Page Request"),(F=Z.displayReadyCapability)==null||F.resolve(l))}_renderPageChunk(l,U){for(let Z=0,d=l.length;Z<d;Z++)U.operatorList.fnArray.push(l.fnArray[Z]),U.operatorList.argsArray.push(l.argsArray[Z]);U.operatorList.lastChunk=l.lastChunk,U.operatorList.separateAnnots=l.separateAnnots;for(const Z of U.renderTasks)Z.operatorListChanged();l.lastChunk&&h(this,JU,OF).call(this,!0)}_pumpOperatorList({renderingIntent:l,cacheKey:U,annotationStorageSerializable:Z,modifiedIds:d}){const{map:F,transfer:V}=Z,c=this._transport.messageHandler.sendWithStream("GetOperatorList",{pageIndex:this._pageIndex,intent:l,cacheKey:U,annotationStorage:F,modifiedIds:d},V).getReader(),t=this._intentStates.get(U);t.streamReader=c;const N=()=>{c.read().then(({value:s,done:b})=>{if(b){t.streamReader=null;return}this._transport.destroyed||(this._renderPageChunk(s,t),N())},s=>{if(t.streamReader=null,!this._transport.destroyed){if(t.operatorList){t.operatorList.lastChunk=!0;for(const b of t.renderTasks)b.operatorListChanged();h(this,JU,OF).call(this,!0)}if(t.displayReadyCapability)t.displayReadyCapability.reject(s);else if(t.opListReadCapability)t.opListReadCapability.reject(s);else throw s}})};N()}_abortOperatorList({intentState:l,reason:U,force:Z=!1}){if(l.streamReader){if(l.streamReaderCancelTimeout&&(clearTimeout(l.streamReaderCancelTimeout),l.streamReaderCancelTimeout=null),!Z){if(l.renderTasks.size>0)return;if(U instanceof $t){let d=Tn;U.extraDelay>0&&U.extraDelay<1e3&&(d+=U.extraDelay),l.streamReaderCancelTimeout=setTimeout(()=>{l.streamReaderCancelTimeout=null,this._abortOperatorList({intentState:l,reason:U,force:!0})},d);return}}if(l.streamReader.cancel(new LF(U.message)).catch(()=>{}),l.streamReader=null,!this._transport.destroyed){for(const[d,F]of this._intentStates)if(F===l){this._intentStates.delete(d);break}this.cleanup()}}}get stats(){return this._stats}}Qd=new WeakMap,SZ=new WeakMap,JU=new WeakSet,OF=function(l=!1){if(h(this,JU,iW).call(this),!Q(this,SZ)||this.destroyed)return!1;if(l)return a(this,Qd,setTimeout(()=>{a(this,Qd,null),h(this,JU,OF).call(this,!1)},Sn)),!1;for(const{renderTasks:U,operatorList:Z}of this._intentStates.values())if(U.size>0||!Z.lastChunk)return!1;return this._intentStates.clear(),this.objs.clear(),a(this,SZ,!1),!0},iW=function(){Q(this,Qd)&&(clearTimeout(Q(this,Qd)),a(this,Qd,null))};var qd,dc;class kn{constructor(){i(this,qd,new Set);i(this,dc,Promise.resolve())}postMessage(l,U){const Z={data:structuredClone(l,U?{transfer:U}:null)};Q(this,dc).then(()=>{for(const d of Q(this,qd))d.call(this,Z)})}addEventListener(l,U){Q(this,qd).add(U)}removeEventListener(l,U){Q(this,qd).delete(U)}terminate(){Q(this,qd).clear()}}qd=new WeakMap,dc=new WeakMap;const bZ={isWorkerDisabled:!1,fakeWorkerId:0};rl&&(bZ.isWorkerDisabled=!0,wZ.workerSrc||(wZ.workerSrc="./pdf.worker.mjs")),bZ.isSameOrigin=function(R,l){let U;try{if(U=new URL(R),!U.origin||U.origin==="null")return!1}catch{return!1}const Z=new URL(l,U);return U.origin===Z.origin},bZ.createCDNWrapper=function(R){const l=`await import("${R}");`;return URL.createObjectURL(new Blob([l],{type:"text/javascript"}))};var $d,a0,MW,h0,JW;const FU=class FU{constructor({name:l=null,port:U=null,verbosity:Z=sb()}={}){i(this,a0);var d;if(this.name=l,this.destroyed=!1,this.verbosity=Z,this._readyCapability=Promise.withResolvers(),this._port=null,this._webWorker=null,this._messageHandler=null,U){if((d=Q(FU,$d))!=null&&d.has(U))throw new Error("Cannot use more than one PDFWorker per port.");(Q(FU,$d)||a(FU,$d,new WeakMap)).set(U,this),this._initializeFromPort(U);return}this._initialize()}get promise(){return rl?Promise.all([FZ.promise,this._readyCapability.promise]):this._readyCapability.promise}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(l){this._port=l,this._messageHandler=new q0("main","worker",l),this._messageHandler.on("ready",function(){}),h(this,a0,MW).call(this)}_initialize(){if(bZ.isWorkerDisabled||Q(FU,h0,JW)){this._setupFakeWorker();return}let{workerSrc:l}=FU;try{bZ.isSameOrigin(window.location.href,l)||(l=bZ.createCDNWrapper(new URL(l,window.location).href));const U=new Worker(l,{type:"module"}),Z=new q0("main","worker",U),d=()=>{F.abort(),Z.destroy(),U.terminate(),this.destroyed?this._readyCapability.reject(new Error("Worker was destroyed")):this._setupFakeWorker()},F=new AbortController;U.addEventListener("error",()=>{this._webWorker||d()},{signal:F.signal}),Z.on("test",W=>{if(F.abort(),this.destroyed||!W){d();return}this._messageHandler=Z,this._port=U,this._webWorker=U,h(this,a0,MW).call(this)}),Z.on("ready",W=>{if(F.abort(),this.destroyed){d();return}try{V()}catch{this._setupFakeWorker()}});const V=()=>{const W=new Uint8Array;Z.send("test",W,[W.buffer])};V();return}catch{sc("The worker has been disabled.")}this._setupFakeWorker()}_setupFakeWorker(){bZ.isWorkerDisabled||(O("Setting up fake worker."),bZ.isWorkerDisabled=!0),FU._setupFakeWorkerGlobal.then(l=>{if(this.destroyed){this._readyCapability.reject(new Error("Worker was destroyed"));return}const U=new kn;this._port=U;const Z=`fake${bZ.fakeWorkerId++}`,d=new q0(Z+"_worker",Z,U);l.setup(d,U),this._messageHandler=new q0(Z,Z+"_worker",U),h(this,a0,MW).call(this)}).catch(l=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: "${l.message}".`))})}destroy(){var l;this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),(l=Q(FU,$d))==null||l.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}static fromPort(l){var Z;if(!(l!=null&&l.port))throw new Error("PDFWorker.fromPort - invalid method signature.");const U=(Z=Q(this,$d))==null?void 0:Z.get(l.port);if(U){if(U._pendingDestroy)throw new Error("PDFWorker.fromPort - the worker is being destroyed.\nPlease remember to await `PDFDocumentLoadingTask.destroy()`-calls.");return U}return new FU(l)}static get workerSrc(){if(wZ.workerSrc)return wZ.workerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}static get _setupFakeWorkerGlobal(){return P(this,"_setupFakeWorkerGlobal",(async()=>Q(this,h0,JW)?Q(this,h0,JW):(await import(this.workerSrc)).WorkerMessageHandler)())}};$d=new WeakMap,a0=new WeakSet,MW=function(){this._readyCapability.resolve(),this._messageHandler.send("configure",{verbosity:this.verbosity})},h0=new WeakSet,JW=function(){var l;try{return((l=globalThis.pdfjsWorker)==null?void 0:l.WorkerMessageHandler)||null}catch{return null}},i(FU,h0),i(FU,$d);let vF=FU;var YZ,HU,m0,i0,vU,lF,$0;class on{constructor(l,U,Z,d,F){i(this,lF);i(this,YZ,new Map);i(this,HU,new Map);i(this,m0,new Map);i(this,i0,new Map);i(this,vU,null);this.messageHandler=l,this.loadingTask=U,this.commonObjs=new DN,this.fontLoader=new kb({ownerDocument:d.ownerDocument,styleElement:d.styleElement}),this.loadingParams=d.loadingParams,this._params=d,this.canvasFactory=F.canvasFactory,this.filterFactory=F.filterFactory,this.cMapReaderFactory=F.cMapReaderFactory,this.standardFontDataFactory=F.standardFontDataFactory,this.destroyed=!1,this.destroyCapability=null,this._networkStream=Z,this._fullReader=null,this._lastProgress=null,this.downloadInfoCapability=Promise.withResolvers(),this.setupMessageHandler()}get annotationStorage(){return P(this,"annotationStorage",new ZR)}getRenderingIntent(l,U=fZ.ENABLE,Z=null,d=!1,F=!1){let V=bU.DISPLAY,W=Zt;switch(l){case"any":V=bU.ANY;break;case"display":break;case"print":V=bU.PRINT;break;default:O(`getRenderingIntent - invalid intent: ${l}`)}const c=V&bU.PRINT&&Z instanceof MN?Z:this.annotationStorage;switch(U){case fZ.DISABLE:V+=bU.ANNOTATIONS_DISABLE;break;case fZ.ENABLE:break;case fZ.ENABLE_FORMS:V+=bU.ANNOTATIONS_FORMS;break;case fZ.ENABLE_STORAGE:V+=bU.ANNOTATIONS_STORAGE,W=c.serializable;break;default:O(`getRenderingIntent - invalid annotationMode: ${U}`)}d&&(V+=bU.IS_EDITING),F&&(V+=bU.OPLIST);const{ids:t,hash:N}=c.modifiedIds,s=[V,W.hash,N];return{renderingIntent:V,cacheKey:s.join("_"),annotationStorageSerializable:W,modifiedIds:t}}destroy(){var Z;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=Promise.withResolvers(),(Z=Q(this,vU))==null||Z.reject(new Error("Worker was destroyed during onPassword callback"));const l=[];for(const d of Q(this,HU).values())l.push(d._destroy());Q(this,HU).clear(),Q(this,m0).clear(),Q(this,i0).clear(),this.hasOwnProperty("annotationStorage")&&this.annotationStorage.resetModified();const U=this.messageHandler.sendWithPromise("Terminate",null);return l.push(U),Promise.all(l).then(()=>{var d;this.commonObjs.clear(),this.fontLoader.clear(),Q(this,YZ).clear(),this.filterFactory.destroy(),NQ.cleanup(),(d=this._networkStream)==null||d.cancelAllRequests(new LF("Worker was terminated.")),this.messageHandler&&(this.messageHandler.destroy(),this.messageHandler=null),this.destroyCapability.resolve()},this.destroyCapability.reject),this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:l,loadingTask:U}=this;l.on("GetReader",(Z,d)=>{Yl(this._networkStream,"GetReader - no `IPDFStream` instance available."),this._fullReader=this._networkStream.getFullReader(),this._fullReader.onProgress=F=>{this._lastProgress={loaded:F.loaded,total:F.total}},d.onPull=()=>{this._fullReader.read().then(function({value:F,done:V}){if(V){d.close();return}Yl(F instanceof ArrayBuffer,"GetReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(F),1,[F])}).catch(F=>{d.error(F)})},d.onCancel=F=>{this._fullReader.cancel(F),d.ready.catch(V=>{if(!this.destroyed)throw V})}}),l.on("ReaderHeadersReady",Z=>{const d=Promise.withResolvers(),F=this._fullReader;return F.headersReady.then(()=>{var V;(!F.isStreamingSupported||!F.isRangeSupported)&&(this._lastProgress&&((V=U.onProgress)==null||V.call(U,this._lastProgress)),F.onProgress=W=>{var c;(c=U.onProgress)==null||c.call(U,{loaded:W.loaded,total:W.total})}),d.resolve({isStreamingSupported:F.isStreamingSupported,isRangeSupported:F.isRangeSupported,contentLength:F.contentLength})},d.reject),d.promise}),l.on("GetRangeReader",(Z,d)=>{Yl(this._networkStream,"GetRangeReader - no `IPDFStream` instance available.");const F=this._networkStream.getRangeReader(Z.begin,Z.end);if(!F){d.close();return}d.onPull=()=>{F.read().then(function({value:V,done:W}){if(W){d.close();return}Yl(V instanceof ArrayBuffer,"GetRangeReader - expected an ArrayBuffer."),d.enqueue(new Uint8Array(V),1,[V])}).catch(V=>{d.error(V)})},d.onCancel=V=>{F.cancel(V),d.ready.catch(W=>{if(!this.destroyed)throw W})}}),l.on("GetDoc",({pdfInfo:Z})=>{this._numPages=Z.numPages,this._htmlForXfa=Z.htmlForXfa,delete Z.htmlForXfa,U._capability.resolve(new zn(Z,this))}),l.on("DocException",function(Z){let d;switch(Z.name){case"PasswordException":d=new Lc(Z.message,Z.code);break;case"InvalidPDFException":d=new xR(Z.message);break;case"MissingPDFException":d=new zF(Z.message);break;case"UnexpectedResponseException":d=new bc(Z.message,Z.status);break;case"UnknownErrorException":d=new kc(Z.message,Z.details);break;default:dl("DocException - expected a valid Error.")}U._capability.reject(d)}),l.on("PasswordRequest",Z=>{if(a(this,vU,Promise.withResolvers()),U.onPassword){const d=F=>{F instanceof Error?Q(this,vU).reject(F):Q(this,vU).resolve({password:F})};try{U.onPassword(d,Z.code)}catch(F){Q(this,vU).reject(F)}}else Q(this,vU).reject(new Lc(Z.message,Z.code));return Q(this,vU).promise}),l.on("DataLoaded",Z=>{var d;(d=U.onProgress)==null||d.call(U,{loaded:Z.length,total:Z.length}),this.downloadInfoCapability.resolve(Z)}),l.on("StartRenderPage",Z=>{if(this.destroyed)return;Q(this,HU).get(Z.pageIndex)._startRenderPage(Z.transparency,Z.cacheKey)}),l.on("commonobj",([Z,d,F])=>{var V;if(this.destroyed||this.commonObjs.has(Z))return null;switch(d){case"Font":const{disableFontFace:W,fontExtraProperties:c,pdfBug:t}=this._params;if("error"in F){const n=F.error;O(`Error during font loading: ${n}`),this.commonObjs.resolve(Z,n);break}const N=t&&((V=globalThis.FontInspector)!=null&&V.enabled)?(n,m)=>globalThis.FontInspector.fontAdded(n,m):null,s=new ob(F,{disableFontFace:W,inspectFont:N});this.fontLoader.bind(s).catch(()=>l.sendWithPromise("FontFallback",{id:Z})).finally(()=>{!c&&s.data&&(s.data=null),this.commonObjs.resolve(Z,s)});break;case"CopyLocalImage":const{imageRef:b}=F;Yl(b,"The imageRef must be defined.");for(const n of Q(this,HU).values())for(const[,m]of n.objs)if((m==null?void 0:m.ref)===b)return m.dataLen?(this.commonObjs.resolve(Z,structuredClone(m)),m.dataLen):null;break;case"FontPath":case"Image":case"Pattern":this.commonObjs.resolve(Z,F);break;default:throw new Error(`Got unknown common object type ${d}`)}return null}),l.on("obj",([Z,d,F,V])=>{var c;if(this.destroyed)return;const W=Q(this,HU).get(d);if(!W.objs.has(Z)){if(W._intentStates.size===0){(c=V==null?void 0:V.bitmap)==null||c.close();return}switch(F){case"Image":W.objs.resolve(Z,V),(V==null?void 0:V.dataLen)>Wb&&(W._maybeCleanupAfterRender=!0);break;case"Pattern":W.objs.resolve(Z,V);break;default:throw new Error(`Got unknown object type ${F}`)}}}),l.on("DocProgress",Z=>{var d;this.destroyed||(d=U.onProgress)==null||d.call(U,{loaded:Z.loaded,total:Z.total})}),l.on("FetchBuiltInCMap",Z=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.cMapReaderFactory?this.cMapReaderFactory.fetch(Z):Promise.reject(new Error("CMapReaderFactory not initialized, see the `useWorkerFetch` parameter."))),l.on("FetchStandardFontData",Z=>this.destroyed?Promise.reject(new Error("Worker was destroyed.")):this.standardFontDataFactory?this.standardFontDataFactory.fetch(Z):Promise.reject(new Error("StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.")))}getData(){return this.messageHandler.sendWithPromise("GetData",null)}saveDocument(){var Z;this.annotationStorage.size<=0&&O("saveDocument called while `annotationStorage` is empty, please use the getData-method instead.");const{map:l,transfer:U}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise("SaveDocument",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:l,filename:((Z=this._fullReader)==null?void 0:Z.filename)??null},U).finally(()=>{this.annotationStorage.resetModified()})}getPage(l){if(!Number.isInteger(l)||l<=0||l>this._numPages)return Promise.reject(new Error("Invalid page request."));const U=l-1,Z=Q(this,m0).get(U);if(Z)return Z;const d=this.messageHandler.sendWithPromise("GetPage",{pageIndex:U}).then(F=>{if(this.destroyed)throw new Error("Transport destroyed");F.refStr&&Q(this,i0).set(F.refStr,l);const V=new Ln(U,F,this,this._params.pdfBug);return Q(this,HU).set(U,V),V});return Q(this,m0).set(U,d),d}getPageIndex(l){return uR(l)?this.messageHandler.sendWithPromise("GetPageIndex",{num:l.num,gen:l.gen}):Promise.reject(new Error("Invalid pageIndex request."))}getAnnotations(l,U){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:l,intent:U})}getFieldObjects(){return h(this,lF,$0).call(this,"GetFieldObjects")}hasJSActions(){return h(this,lF,$0).call(this,"HasJSActions")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise("GetCalculationOrderIds",null)}getDestinations(){return this.messageHandler.sendWithPromise("GetDestinations",null)}getDestination(l){return typeof l!="string"?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:l})}getPageLabels(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}getPageLayout(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}getPageMode(){return this.messageHandler.sendWithPromise("GetPageMode",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}getOpenAction(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}getAttachments(){return this.messageHandler.sendWithPromise("GetAttachments",null)}getDocJSActions(){return h(this,lF,$0).call(this,"GetDocJSActions")}getPageJSActions(l){return this.messageHandler.sendWithPromise("GetPageJSActions",{pageIndex:l})}getStructTree(l){return this.messageHandler.sendWithPromise("GetStructTree",{pageIndex:l})}getOutline(){return this.messageHandler.sendWithPromise("GetOutline",null)}getOptionalContentConfig(l){return h(this,lF,$0).call(this,"GetOptionalContentConfig").then(U=>new ln(U,l))}getPermissions(){return this.messageHandler.sendWithPromise("GetPermissions",null)}getMetadata(){const l="GetMetadata",U=Q(this,YZ).get(l);if(U)return U;const Z=this.messageHandler.sendWithPromise(l,null).then(d=>{var F,V;return{info:d[0],metadata:d[1]?new qb(d[1]):null,contentDispositionFilename:((F=this._fullReader)==null?void 0:F.filename)??null,contentLength:((V=this._fullReader)==null?void 0:V.contentLength)??null}});return Q(this,YZ).set(l,Z),Z}getMarkInfo(){return this.messageHandler.sendWithPromise("GetMarkInfo",null)}async startCleanup(l=!1){if(!this.destroyed){await this.messageHandler.sendWithPromise("Cleanup",null);for(const U of Q(this,HU).values())if(!U.cleanup())throw new Error(`startCleanup: Page ${U.pageNumber} is currently rendering.`);this.commonObjs.clear(),l||this.fontLoader.clear(),Q(this,YZ).clear(),this.filterFactory.destroy(!0),NQ.cleanup()}}cachedPageNumber(l){if(!uR(l))return null;const U=l.gen===0?`${l.num}R`:`${l.num}R${l.gen}`;return Q(this,i0).get(U)??null}}YZ=new WeakMap,HU=new WeakMap,m0=new WeakMap,i0=new WeakMap,vU=new WeakMap,lF=new WeakSet,$0=function(l,U=null){const Z=Q(this,YZ).get(l);if(Z)return Z;const d=this.messageHandler.sendWithPromise(l,U);return Q(this,YZ).set(l,d),d};const VW=Symbol("INITIAL_DATA");var uU,dV,Nt;class DN{constructor(){i(this,dV);i(this,uU,Object.create(null))}get(l,U=null){if(U){const d=h(this,dV,Nt).call(this,l);return d.promise.then(()=>U(d.data)),null}const Z=Q(this,uU)[l];if(!Z||Z.data===VW)throw new Error(`Requesting object that isn't resolved yet ${l}.`);return Z.data}has(l){const U=Q(this,uU)[l];return!!U&&U.data!==VW}resolve(l,U=null){const Z=h(this,dV,Nt).call(this,l);Z.data=U,Z.resolve()}clear(){var l;for(const U in Q(this,uU)){const{data:Z}=Q(this,uU)[U];(l=Z==null?void 0:Z.bitmap)==null||l.close()}a(this,uU,Object.create(null))}*[Symbol.iterator](){for(const l in Q(this,uU)){const{data:U}=Q(this,uU)[l];U!==VW&&(yield[l,U])}}}uU=new WeakMap,dV=new WeakSet,Nt=function(l){var U;return(U=Q(this,uU))[l]||(U[l]={...Promise.withResolvers(),data:VW})};var Vd;class Dn{constructor(l){i(this,Vd,null);a(this,Vd,l),this.onContinue=null}get promise(){return Q(this,Vd).capability.promise}cancel(l=0){Q(this,Vd).cancel(null,l)}get separateAnnots(){const{separateAnnots:l}=Q(this,Vd).operatorList;if(!l)return!1;const{annotationCanvasMap:U}=Q(this,Vd);return l.form||l.canvas&&(U==null?void 0:U.size)>0}}Vd=new WeakMap;var Wd,UF;const Bd=class Bd{constructor({callback:l,params:U,objs:Z,commonObjs:d,annotationCanvasMap:F,operatorList:V,pageIndex:W,canvasFactory:c,filterFactory:t,useRequestAnimationFrame:N=!1,pdfBug:s=!1,pageColors:b=null}){i(this,Wd,null);this.callback=l,this.params=U,this.objs=Z,this.commonObjs=d,this.annotationCanvasMap=F,this.operatorListIdx=null,this.operatorList=V,this._pageIndex=W,this.canvasFactory=c,this.filterFactory=t,this._pdfBug=s,this.pageColors=b,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=N===!0&&typeof window<"u",this.cancelled=!1,this.capability=Promise.withResolvers(),this.task=new Dn(this),this._cancelBound=this.cancel.bind(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=U.canvasContext.canvas}get completed(){return this.capability.promise.catch(function(){})}initializeGraphics({transparency:l=!1,optionalContentConfig:U}){var W,c;if(this.cancelled)return;if(this._canvas){if(Q(Bd,UF).has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");Q(Bd,UF).add(this._canvas)}this._pdfBug&&((W=globalThis.StepperManager)!=null&&W.enabled)&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());const{canvasContext:Z,viewport:d,transform:F,background:V}=this.params;this.gfx=new HF(Z,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:U},this.annotationCanvasMap,this.pageColors),this.gfx.beginDrawing({transform:F,viewport:d,transparency:l,background:V}),this.operatorListIdx=0,this.graphicsReady=!0,(c=this.graphicsReadyCallback)==null||c.call(this)}cancel(l=null,U=0){var Z;this.running=!1,this.cancelled=!0,(Z=this.gfx)==null||Z.endDrawing(),Q(this,Wd)&&(window.cancelAnimationFrame(Q(this,Wd)),a(this,Wd,null)),Q(Bd,UF).delete(this._canvas),this.callback(l||new $t(`Rendering cancelled, page ${this._pageIndex+1}`,U))}operatorListChanged(){var l;if(!this.graphicsReady){this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound);return}(l=this.stepper)==null||l.updateOperatorList(this.operatorList),!this.running&&this._continue()}_continue(){this.running=!0,!this.cancelled&&(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}_scheduleNext(){this._useRequestAnimationFrame?a(this,Wd,window.requestAnimationFrame(()=>{a(this,Wd,null),this._nextBound().catch(this._cancelBound)})):Promise.resolve().then(this._nextBound).catch(this._cancelBound)}async _next(){this.cancelled||(this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),Q(Bd,UF).delete(this._canvas),this.callback())))}};Wd=new WeakMap,UF=new WeakMap,i(Bd,UF,new WeakSet);let st=Bd;const In="4.5.136",En="3a21f03b0";function yR(R){return Math.floor(Math.max(0,Math.min(1,R))*255).toString(16).padStart(2,"0")}function g0(R){return Math.max(0,Math.min(255,255*R))}class zR{static CMYK_G([l,U,Z,d]){return["G",1-Math.min(1,.3*l+.59*Z+.11*U+d)]}static G_CMYK([l]){return["CMYK",0,0,0,1-l]}static G_RGB([l]){return["RGB",l,l,l]}static G_rgb([l]){return l=g0(l),[l,l,l]}static G_HTML([l]){const U=yR(l);return`#${U}${U}${U}`}static RGB_G([l,U,Z]){return["G",.3*l+.59*U+.11*Z]}static RGB_rgb(l){return l.map(g0)}static RGB_HTML(l){return`#${l.map(yR).join("")}`}static T_HTML(){return"#00000000"}static T_rgb(){return[null]}static CMYK_RGB([l,U,Z,d]){return["RGB",1-Math.min(1,l+d),1-Math.min(1,Z+d),1-Math.min(1,U+d)]}static CMYK_rgb([l,U,Z,d]){return[g0(1-Math.min(1,l+d)),g0(1-Math.min(1,Z+d)),g0(1-Math.min(1,U+d))]}static CMYK_HTML(l){const U=this.CMYK_RGB(l).slice(1);return this.RGB_HTML(U)}static RGB_CMYK([l,U,Z]){const d=1-l,F=1-U,V=1-Z,W=Math.min(d,F,V);return["CMYK",d,F,V,W]}}class IN{static setupStorage(l,U,Z,d,F){const V=d.getValue(U,{value:null});switch(Z.name){case"textarea":if(V.value!==null&&(l.textContent=V.value),F==="print")break;l.addEventListener("input",W=>{d.setValue(U,{value:W.target.value})});break;case"input":if(Z.attributes.type==="radio"||Z.attributes.type==="checkbox"){if(V.value===Z.attributes.xfaOn?l.setAttribute("checked",!0):V.value===Z.attributes.xfaOff&&l.removeAttribute("checked"),F==="print")break;l.addEventListener("change",W=>{d.setValue(U,{value:W.target.checked?W.target.getAttribute("xfaOn"):W.target.getAttribute("xfaOff")})})}else{if(V.value!==null&&l.setAttribute("value",V.value),F==="print")break;l.addEventListener("input",W=>{d.setValue(U,{value:W.target.value})})}break;case"select":if(V.value!==null){l.setAttribute("value",V.value);for(const W of Z.children)W.attributes.value===V.value?W.attributes.selected=!0:W.attributes.hasOwnProperty("selected")&&delete W.attributes.selected}l.addEventListener("input",W=>{const c=W.target.options,t=c.selectedIndex===-1?"":c[c.selectedIndex].value;d.setValue(U,{value:t})});break}}static setAttributes({html:l,element:U,storage:Z=null,intent:d,linkService:F}){const{attributes:V}=U,W=l instanceof HTMLAnchorElement;V.type==="radio"&&(V.name=`${V.name}-${d}`);for(const[c,t]of Object.entries(V))if(t!=null)switch(c){case"class":t.length&&l.setAttribute(c,t.join(" "));break;case"dataId":break;case"id":l.setAttribute("data-element-id",t);break;case"style":Object.assign(l.style,t);break;case"textContent":l.textContent=t;break;default:(!W||c!=="href"&&c!=="newWindow")&&l.setAttribute(c,t)}W&&F.addLinkAttributes(l,V.href,V.newWindow),Z&&V.dataId&&this.setupStorage(l,V.dataId,U,Z)}static render(l){var s,b;const U=l.annotationStorage,Z=l.linkService,d=l.xfaHtml,F=l.intent||"display",V=document.createElement(d.name);d.attributes&&this.setAttributes({html:V,element:d,intent:F,linkService:Z});const W=F!=="richText",c=l.div;if(c.append(V),l.viewport){const n=`matrix(${l.viewport.transform.join(",")})`;c.style.transform=n}W&&c.setAttribute("class","xfaLayer xfaFont");const t=[];if(d.children.length===0){if(d.value){const n=document.createTextNode(d.value);V.append(n),W&&sQ.shouldBuildText(d.name)&&t.push(n)}return{textDivs:t}}const N=[[d,-1,V]];for(;N.length>0;){const[n,m,M]=N.at(-1);if(m+1===n.children.length){N.pop();continue}const G=n.children[++N.at(-1)[1]];if(G===null)continue;const{name:J}=G;if(J==="#text"){const S=document.createTextNode(G.value);t.push(S),M.append(S);continue}const T=(s=G==null?void 0:G.attributes)!=null&&s.xmlns?document.createElementNS(G.attributes.xmlns,J):document.createElement(J);if(M.append(T),G.attributes&&this.setAttributes({html:T,element:G,storage:U,intent:F,linkService:Z}),((b=G.children)==null?void 0:b.length)>0)N.push([G,-1,T]);else if(G.value){const S=document.createTextNode(G.value);W&&sQ.shouldBuildText(J)&&t.push(S),T.append(S)}}for(const n of c.querySelectorAll(".xfaNonInteractive input, .xfaNonInteractive textarea"))n.setAttribute("readOnly",!0);return{textDivs:t}}static update(l){const U=`matrix(${l.viewport.transform.join(",")})`;l.div.style.transform=U,l.div.hidden=!1}}const qV=1e3,Cn=9,pF=new WeakSet;function xZ(R){return{width:R[2]-R[0],height:R[3]-R[1]}}class wn{static create(l){switch(l.data.annotationType){case il.LINK:return new EN(l);case il.TEXT:return new xn(l);case il.WIDGET:switch(l.data.fieldType){case"Tx":return new jn(l);case"Btn":return l.data.radioButton?new xN(l):l.data.checkBox?new rn(l):new gn(l);case"Ch":return new Kn(l);case"Sig":return new On(l)}return new kF(l);case il.POPUP:return new nt(l);case il.FREETEXT:return new KN(l);case il.LINE:return new vn(l);case il.SQUARE:return new Pn(l);case il.CIRCLE:return new fn(l);case il.POLYLINE:return new HN(l);case il.CARET:return new _n(l);case il.INK:return new vN(l);case il.POLYGON:return new An(l);case il.HIGHLIGHT:return new qn(l);case il.UNDERLINE:return new $n(l);case il.SQUIGGLY:return new la(l);case il.STRIKEOUT:return new Ua(l);case il.STAMP:return new PN(l);case il.FILEATTACHMENT:return new Za(l);default:return new nl(l)}}}var ZF,M0,J0,FV,bt;const cR=class cR{constructor(l,{isRenderable:U=!1,ignoreBorder:Z=!1,createQuadrilaterals:d=!1}={}){i(this,FV);i(this,ZF,null);i(this,M0,!1);i(this,J0,null);this.isRenderable=U,this.data=l.data,this.layer=l.layer,this.linkService=l.linkService,this.downloadManager=l.downloadManager,this.imageResourcesPath=l.imageResourcesPath,this.renderForms=l.renderForms,this.svgFactory=l.svgFactory,this.annotationStorage=l.annotationStorage,this.enableScripting=l.enableScripting,this.hasJSActions=l.hasJSActions,this._fieldObjects=l.fieldObjects,this.parent=l.parent,U&&(this.container=this._createContainer(Z)),d&&this._createQuadrilaterals()}static _hasPopupData({titleObj:l,contentsObj:U,richText:Z}){return!!(l!=null&&l.str||U!=null&&U.str||Z!=null&&Z.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return cR._hasPopupData(this.data)}updateEdited(l){var Z;if(!this.container)return;Q(this,ZF)||a(this,ZF,{rect:this.data.rect.slice(0)});const{rect:U}=l;U&&h(this,FV,bt).call(this,U),(Z=Q(this,J0))==null||Z.popup.updateEdited(l)}resetEdited(){var l;Q(this,ZF)&&(h(this,FV,bt).call(this,Q(this,ZF).rect),(l=Q(this,J0))==null||l.popup.resetEdited(),a(this,ZF,null))}_createContainer(l){const{data:U,parent:{page:Z,viewport:d}}=this,F=document.createElement("section");F.setAttribute("data-annotation-id",U.id),this instanceof kF||(F.tabIndex=qV);const{style:V}=F;if(V.zIndex=this.parent.zIndex++,U.popupRef&&F.setAttribute("aria-haspopup","dialog"),U.alternativeText&&(F.title=U.alternativeText),U.noRotate&&F.classList.add("norotate"),!U.rect||this instanceof nt){const{rotation:M}=U;return!U.hasOwnCanvas&&M!==0&&this.setRotation(M,F),F}const{width:W,height:c}=xZ(U.rect);if(!l&&U.borderStyle.width>0){V.borderWidth=`${U.borderStyle.width}px`;const M=U.borderStyle.horizontalCornerRadius,G=U.borderStyle.verticalCornerRadius;if(M>0||G>0){const T=`calc(${M}px * var(--scale-factor)) / calc(${G}px * var(--scale-factor))`;V.borderRadius=T}else if(this instanceof xN){const T=`calc(${W}px * var(--scale-factor)) / calc(${c}px * var(--scale-factor))`;V.borderRadius=T}switch(U.borderStyle.style){case O0.SOLID:V.borderStyle="solid";break;case O0.DASHED:V.borderStyle="dashed";break;case O0.BEVELED:O("Unimplemented border style: beveled");break;case O0.INSET:O("Unimplemented border style: inset");break;case O0.UNDERLINE:V.borderBottomStyle="solid";break}const J=U.borderColor||null;J?(a(this,M0,!0),V.borderColor=k.makeHexColor(J[0]|0,J[1]|0,J[2]|0)):V.borderWidth=0}const t=k.normalizeRect([U.rect[0],Z.view[3]-U.rect[1]+Z.view[1],U.rect[2],Z.view[3]-U.rect[3]+Z.view[1]]),{pageWidth:N,pageHeight:s,pageX:b,pageY:n}=d.rawDims;V.left=`${100*(t[0]-b)/N}%`,V.top=`${100*(t[1]-n)/s}%`;const{rotation:m}=U;return U.hasOwnCanvas||m===0?(V.width=`${100*W/N}%`,V.height=`${100*c/s}%`):this.setRotation(m,F),F}setRotation(l,U=this.container){if(!this.data.rect)return;const{pageWidth:Z,pageHeight:d}=this.parent.viewport.rawDims,{width:F,height:V}=xZ(this.data.rect);let W,c;l%180===0?(W=100*F/Z,c=100*V/d):(W=100*V/Z,c=100*F/d),U.style.width=`${W}%`,U.style.height=`${c}%`,U.setAttribute("data-main-rotation",(360-l)%360)}get _commonActions(){const l=(U,Z,d)=>{const F=d.detail[U],V=F[0],W=F.slice(1);d.target.style[Z]=zR[`${V}_HTML`](W),this.annotationStorage.setValue(this.data.id,{[Z]:zR[`${V}_rgb`](W)})};return P(this,"_commonActions",{display:U=>{const{display:Z}=U.detail,d=Z%2===1;this.container.style.visibility=d?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noView:d,noPrint:Z===1||Z===2})},print:U=>{this.annotationStorage.setValue(this.data.id,{noPrint:!U.detail.print})},hidden:U=>{const{hidden:Z}=U.detail;this.container.style.visibility=Z?"hidden":"visible",this.annotationStorage.setValue(this.data.id,{noPrint:Z,noView:Z})},focus:U=>{setTimeout(()=>U.target.focus({preventScroll:!1}),0)},userName:U=>{U.target.title=U.detail.userName},readonly:U=>{U.target.disabled=U.detail.readonly},required:U=>{this._setRequired(U.target,U.detail.required)},bgColor:U=>{l("bgColor","backgroundColor",U)},fillColor:U=>{l("fillColor","backgroundColor",U)},fgColor:U=>{l("fgColor","color",U)},textColor:U=>{l("textColor","color",U)},borderColor:U=>{l("borderColor","borderColor",U)},strokeColor:U=>{l("strokeColor","borderColor",U)},rotation:U=>{const Z=U.detail.rotation;this.setRotation(Z),this.annotationStorage.setValue(this.data.id,{rotation:Z})}})}_dispatchEventFromSandbox(l,U){const Z=this._commonActions;for(const d of Object.keys(U.detail)){const F=l[d]||Z[d];F==null||F(U)}}_setDefaultPropertiesFromJS(l){if(!this.enableScripting)return;const U=this.annotationStorage.getRawValue(this.data.id);if(!U)return;const Z=this._commonActions;for(const[d,F]of Object.entries(U)){const V=Z[d];if(V){const W={detail:{[d]:F},target:l};V(W),delete U[d]}}}_createQuadrilaterals(){if(!this.container)return;const{quadPoints:l}=this.data;if(!l)return;const[U,Z,d,F]=this.data.rect.map(M=>Math.fround(M));if(l.length===8){const[M,G,J,T]=l.subarray(2,6);if(d===M&&F===G&&U===J&&Z===T)return}const{style:V}=this.container;let W;if(Q(this,M0)){const{borderColor:M,borderWidth:G}=V;V.borderWidth=0,W=["url('data:image/svg+xml;utf8,",'<svg xmlns="http://www.w3.org/2000/svg"',' preserveAspectRatio="none" viewBox="0 0 1 1">',`<g fill="transparent" stroke="${M}" stroke-width="${G}">`],this.container.classList.add("hasBorder")}const c=d-U,t=F-Z,{svgFactory:N}=this,s=N.createElement("svg");s.classList.add("quadrilateralsContainer"),s.setAttribute("width",0),s.setAttribute("height",0);const b=N.createElement("defs");s.append(b);const n=N.createElement("clipPath"),m=`clippath_${this.data.id}`;n.setAttribute("id",m),n.setAttribute("clipPathUnits","objectBoundingBox"),b.append(n);for(let M=2,G=l.length;M<G;M+=8){const J=l[M],T=l[M+1],S=l[M+2],Y=l[M+3],e=N.createElement("rect"),X=(S-U)/c,B=(F-T)/t,p=(J-S)/c,u=(T-Y)/t;e.setAttribute("x",X),e.setAttribute("y",B),e.setAttribute("width",p),e.setAttribute("height",u),n.append(e),W==null||W.push(`<rect vector-effect="non-scaling-stroke" x="${X}" y="${B}" width="${p}" height="${u}"/>`)}Q(this,M0)&&(W.push("</g></svg>')"),V.backgroundImage=W.join("")),this.container.append(s),this.container.style.clipPath=`url(#${m})`}_createPopup(){const{container:l,data:U}=this;l.setAttribute("aria-haspopup","dialog");const Z=a(this,J0,new nt({data:{color:U.color,titleObj:U.titleObj,modificationDate:U.modificationDate,contentsObj:U.contentsObj,richText:U.richText,parentRect:U.rect,borderStyle:0,id:`popup_${U.id}`,rotation:U.rotation},parent:this.parent,elements:[this]}));this.parent.div.append(Z.render())}render(){dl("Abstract method `AnnotationElement.render` called")}_getElementsByName(l,U=null){const Z=[];if(this._fieldObjects){const d=this._fieldObjects[l];if(d)for(const{page:F,id:V,exportValues:W}of d){if(F===-1||V===U)continue;const c=typeof W=="string"?W:null,t=document.querySelector(`[data-element-id="${V}"]`);if(t&&!pF.has(t)){O(`_getElementsByName - element not allowed: ${V}`);continue}Z.push({id:V,exportValue:c,domElement:t})}return Z}for(const d of document.getElementsByName(l)){const{exportValue:F}=d,V=d.getAttribute("data-element-id");V!==U&&pF.has(d)&&Z.push({id:V,exportValue:F,domElement:d})}return Z}show(){var l;this.container&&(this.container.hidden=!1),(l=this.popup)==null||l.maybeShow()}hide(){var l;this.container&&(this.container.hidden=!0),(l=this.popup)==null||l.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const l=this.getElementsToTriggerPopup();if(Array.isArray(l))for(const U of l)U.classList.add("highlightArea");else l.classList.add("highlightArea")}_editOnDoubleClick(){if(!this._isEditable)return;const{annotationEditorType:l,data:{id:U}}=this;this.container.addEventListener("dblclick",()=>{var Z;(Z=this.linkService.eventBus)==null||Z.dispatch("switchannotationeditormode",{source:this,mode:l,editId:U})})}};ZF=new WeakMap,M0=new WeakMap,J0=new WeakMap,FV=new WeakSet,bt=function(l){const{container:{style:U},data:{rect:Z,rotation:d},parent:{viewport:{rawDims:{pageWidth:F,pageHeight:V,pageX:W,pageY:c}}}}=this;Z==null||Z.splice(0,4,...l);const{width:t,height:N}=xZ(l);U.left=`${100*(l[0]-W)/F}%`,U.top=`${100*(V-l[3]+c)/V}%`,d===0?(U.width=`${100*t/F}%`,U.height=`${100*N/V}%`):this.setRotation(d)};let nl=cR;var nU,Td,CN,wN;class EN extends nl{constructor(U,Z=null){super(U,{isRenderable:!0,ignoreBorder:!!(Z!=null&&Z.ignoreBorder),createQuadrilaterals:!0});i(this,nU);this.isTooltipOnly=U.data.isTooltipOnly}render(){const{data:U,linkService:Z}=this,d=document.createElement("a");d.setAttribute("data-element-id",U.id);let F=!1;return U.url?(Z.addLinkAttributes(d,U.url,U.newWindow),F=!0):U.action?(this._bindNamedAction(d,U.action),F=!0):U.attachment?(h(this,nU,CN).call(this,d,U.attachment,U.attachmentDest),F=!0):U.setOCGState?(h(this,nU,wN).call(this,d,U.setOCGState),F=!0):U.dest?(this._bindLink(d,U.dest),F=!0):(U.actions&&(U.actions.Action||U.actions["Mouse Up"]||U.actions["Mouse Down"])&&this.enableScripting&&this.hasJSActions&&(this._bindJSAction(d,U),F=!0),U.resetForm?(this._bindResetFormAction(d,U.resetForm),F=!0):this.isTooltipOnly&&!F&&(this._bindLink(d,""),F=!0)),this.container.classList.add("linkAnnotation"),F&&this.container.append(d),this.container}_bindLink(U,Z){U.href=this.linkService.getDestinationHash(Z),U.onclick=()=>(Z&&this.linkService.goToDestination(Z),!1),(Z||Z==="")&&h(this,nU,Td).call(this)}_bindNamedAction(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeNamedAction(Z),!1),h(this,nU,Td).call(this)}_bindJSAction(U,Z){U.href=this.linkService.getAnchorUrl("");const d=new Map([["Action","onclick"],["Mouse Up","onmouseup"],["Mouse Down","onmousedown"]]);for(const F of Object.keys(Z.actions)){const V=d.get(F);V&&(U[V]=()=>{var W;return(W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:Z.id,name:F}}),!1})}U.onclick||(U.onclick=()=>!1),h(this,nU,Td).call(this)}_bindResetFormAction(U,Z){const d=U.onclick;if(d||(U.href=this.linkService.getAnchorUrl("")),h(this,nU,Td).call(this),!this._fieldObjects){O('_bindResetFormAction - "resetForm" action not supported, ensure that the `fieldObjects` parameter is provided.'),d||(U.onclick=()=>!1);return}U.onclick=()=>{var s;d==null||d();const{fields:F,refs:V,include:W}=Z,c=[];if(F.length!==0||V.length!==0){const b=new Set(V);for(const n of F){const m=this._fieldObjects[n]||[];for(const{id:M}of m)b.add(M)}for(const n of Object.values(this._fieldObjects))for(const m of n)b.has(m.id)===W&&c.push(m)}else for(const b of Object.values(this._fieldObjects))c.push(...b);const t=this.annotationStorage,N=[];for(const b of c){const{id:n}=b;switch(N.push(n),b.type){case"text":{const M=b.defaultValue||"";t.setValue(n,{value:M});break}case"checkbox":case"radiobutton":{const M=b.defaultValue===b.exportValues;t.setValue(n,{value:M});break}case"combobox":case"listbox":{const M=b.defaultValue||"";t.setValue(n,{value:M});break}default:continue}const m=document.querySelector(`[data-element-id="${n}"]`);if(m){if(!pF.has(m)){O(`_bindResetFormAction - element not allowed: ${n}`);continue}}else continue;m.dispatchEvent(new Event("resetform"))}return this.enableScripting&&((s=this.linkService.eventBus)==null||s.dispatch("dispatcheventinsandbox",{source:this,detail:{id:"app",ids:N,name:"ResetForm"}})),!1}}}nU=new WeakSet,Td=function(){this.container.setAttribute("data-internal-link","")},CN=function(U,Z,d=null){U.href=this.linkService.getAnchorUrl(""),Z.description&&(U.title=Z.description),U.onclick=()=>{var F;return(F=this.downloadManager)==null||F.openOrDownloadData(Z.content,Z.filename,d),!1},h(this,nU,Td).call(this)},wN=function(U,Z){U.href=this.linkService.getAnchorUrl(""),U.onclick=()=>(this.linkService.executeSetOCGState(Z),!1),h(this,nU,Td).call(this)};class xn extends nl{constructor(l){super(l,{isRenderable:!0})}render(){this.container.classList.add("textAnnotation");const l=document.createElement("img");return l.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",l.setAttribute("data-l10n-id","pdfjs-text-annotation-type"),l.setAttribute("data-l10n-args",JSON.stringify({type:this.data.name})),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.append(l),this.container}}class kF extends nl{render(){return this.container}showElementAndHideCanvas(l){var U;this.data.hasOwnCanvas&&(((U=l.previousSibling)==null?void 0:U.nodeName)==="CANVAS"&&(l.previousSibling.hidden=!0),l.hidden=!1)}_getKeyModifier(l){return $l.platform.isMac?l.metaKey:l.ctrlKey}_setEventListener(l,U,Z,d,F){Z.includes("mouse")?l.addEventListener(Z,V=>{var W;(W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:F(V),shift:V.shiftKey,modifier:this._getKeyModifier(V)}})}):l.addEventListener(Z,V=>{var W;if(Z==="blur"){if(!U.focused||!V.relatedTarget)return;U.focused=!1}else if(Z==="focus"){if(U.focused)return;U.focused=!0}F&&((W=this.linkService.eventBus)==null||W.dispatch("dispatcheventinsandbox",{source:this,detail:{id:this.data.id,name:d,value:F(V)}}))})}_setEventListeners(l,U,Z,d){var F,V,W;for(const[c,t]of Z)(t==="Action"||(F=this.data.actions)!=null&&F[t])&&((t==="Focus"||t==="Blur")&&(U||(U={focused:!1})),this._setEventListener(l,U,c,t,d),t==="Focus"&&!((V=this.data.actions)!=null&&V.Blur)?this._setEventListener(l,U,"blur","Blur",null):t==="Blur"&&!((W=this.data.actions)!=null&&W.Focus)&&this._setEventListener(l,U,"focus","Focus",null))}_setBackgroundColor(l){const U=this.data.backgroundColor||null;l.style.backgroundColor=U===null?"transparent":k.makeHexColor(U[0],U[1],U[2])}_setTextStyle(l){const U=["left","center","right"],{fontColor:Z}=this.data.defaultAppearanceData,d=this.data.defaultAppearanceData.fontSize||Cn,F=l.style;let V;const W=2,c=t=>Math.round(10*t)/10;if(this.data.multiLine){const t=Math.abs(this.data.rect[3]-this.data.rect[1]-W),N=Math.round(t/(Sc*d))||1,s=t/N;V=Math.min(d,c(s/Sc))}else{const t=Math.abs(this.data.rect[3]-this.data.rect[1]-W);V=Math.min(d,c(t/Sc))}F.fontSize=`calc(${V}px * var(--scale-factor))`,F.color=k.makeHexColor(Z[0],Z[1],Z[2]),this.data.textAlignment!==null&&(F.textAlign=U[this.data.textAlignment])}_setRequired(l,U){U?l.setAttribute("required",!0):l.removeAttribute("required"),l.setAttribute("aria-required",U)}}class jn extends kF{constructor(l){const U=l.renderForms||l.data.hasOwnCanvas||!l.data.hasAppearance&&!!l.data.fieldValue;super(l,{isRenderable:U})}setPropertyOnSiblings(l,U,Z,d){const F=this.annotationStorage;for(const V of this._getElementsByName(l.name,l.id))V.domElement&&(V.domElement[U]=Z),F.setValue(V.id,{[d]:Z})}render(){var d,F;const l=this.annotationStorage,U=this.data.id;this.container.classList.add("textWidgetAnnotation");let Z=null;if(this.renderForms){const V=l.getValue(U,{value:this.data.fieldValue});let W=V.value||"";const c=l.getValue(U,{charLimit:this.data.maxLen}).charLimit;c&&W.length>c&&(W=W.slice(0,c));let t=V.formattedValue||((d=this.data.textContent)==null?void 0:d.join(`
`))||null;t&&this.data.comb&&(t=t.replaceAll(/\s+/g,""));const N={userValue:W,formattedValue:t,lastCommittedValue:null,commitKey:1,focused:!1};this.data.multiLine?(Z=document.createElement("textarea"),Z.textContent=t??W,this.data.doNotScroll&&(Z.style.overflowY="hidden")):(Z=document.createElement("input"),Z.type="text",Z.setAttribute("value",t??W),this.data.doNotScroll&&(Z.style.overflowX="hidden")),this.data.hasOwnCanvas&&(Z.hidden=!0),pF.add(Z),Z.setAttribute("data-element-id",U),Z.disabled=this.data.readOnly,Z.name=this.data.fieldName,Z.tabIndex=qV,this._setRequired(Z,this.data.required),c&&(Z.maxLength=c),Z.addEventListener("input",b=>{l.setValue(U,{value:b.target.value}),this.setPropertyOnSiblings(Z,"value",b.target.value,"value"),N.formattedValue=null}),Z.addEventListener("resetform",b=>{const n=this.data.defaultFieldValue??"";Z.value=N.userValue=n,N.formattedValue=null});let s=b=>{const{formattedValue:n}=N;n!=null&&(b.target.value=n),b.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){Z.addEventListener("focus",n=>{var M;if(N.focused)return;const{target:m}=n;N.userValue&&(m.value=N.userValue),N.lastCommittedValue=m.value,N.commitKey=1,(M=this.data.actions)!=null&&M.Focus||(N.focused=!0)}),Z.addEventListener("updatefromsandbox",n=>{this.showElementAndHideCanvas(n.target);const m={value(M){N.userValue=M.detail.value??"",l.setValue(U,{value:N.userValue.toString()}),M.target.value=N.userValue},formattedValue(M){const{formattedValue:G}=M.detail;N.formattedValue=G,G!=null&&M.target!==document.activeElement&&(M.target.value=G),l.setValue(U,{formattedValue:G})},selRange(M){M.target.setSelectionRange(...M.detail.selRange)},charLimit:M=>{var S;const{charLimit:G}=M.detail,{target:J}=M;if(G===0){J.removeAttribute("maxLength");return}J.setAttribute("maxLength",G);let T=N.userValue;!T||T.length<=G||(T=T.slice(0,G),J.value=N.userValue=T,l.setValue(U,{value:T}),(S=this.linkService.eventBus)==null||S.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:T,willCommit:!0,commitKey:1,selStart:J.selectionStart,selEnd:J.selectionEnd}}))}};this._dispatchEventFromSandbox(m,n)}),Z.addEventListener("keydown",n=>{var G;N.commitKey=1;let m=-1;if(n.key==="Escape"?m=0:n.key==="Enter"&&!this.data.multiLine?m=2:n.key==="Tab"&&(N.commitKey=3),m===-1)return;const{value:M}=n.target;N.lastCommittedValue!==M&&(N.lastCommittedValue=M,N.userValue=M,(G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:M,willCommit:!0,commitKey:m,selStart:n.target.selectionStart,selEnd:n.target.selectionEnd}}))});const b=s;s=null,Z.addEventListener("blur",n=>{var M,G;if(!N.focused||!n.relatedTarget)return;(M=this.data.actions)!=null&&M.Blur||(N.focused=!1);const{value:m}=n.target;N.userValue=m,N.lastCommittedValue!==m&&((G=this.linkService.eventBus)==null||G.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:m,willCommit:!0,commitKey:N.commitKey,selStart:n.target.selectionStart,selEnd:n.target.selectionEnd}})),b(n)}),(F=this.data.actions)!=null&&F.Keystroke&&Z.addEventListener("beforeinput",n=>{var e;N.lastCommittedValue=null;const{data:m,target:M}=n,{value:G,selectionStart:J,selectionEnd:T}=M;let S=J,Y=T;switch(n.inputType){case"deleteWordBackward":{const X=G.substring(0,J).match(/\w*[^\w]*$/);X&&(S-=X[0].length);break}case"deleteWordForward":{const X=G.substring(J).match(/^[^\w]*\w*/);X&&(Y+=X[0].length);break}case"deleteContentBackward":J===T&&(S-=1);break;case"deleteContentForward":J===T&&(Y+=1);break}n.preventDefault(),(e=this.linkService.eventBus)==null||e.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:G,change:m||"",willCommit:!1,selStart:S,selEnd:Y}})}),this._setEventListeners(Z,N,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],n=>n.target.value)}if(s&&Z.addEventListener("blur",s),this.data.comb){const n=(this.data.rect[2]-this.data.rect[0])/c;Z.classList.add("comb"),Z.style.letterSpacing=`calc(${n}px * var(--scale-factor) - 1ch)`}}else Z=document.createElement("div"),Z.textContent=this.data.fieldValue,Z.style.verticalAlign="middle",Z.style.display="table-cell",this.data.hasOwnCanvas&&(Z.hidden=!0);return this._setTextStyle(Z),this._setBackgroundColor(Z),this._setDefaultPropertiesFromJS(Z),this.container.append(Z),this.container}}class On extends kF{constructor(l){super(l,{isRenderable:!!l.data.hasOwnCanvas})}}class rn extends kF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.exportValue===U.fieldValue}).value;typeof d=="string"&&(d=d!=="Off",l.setValue(Z,{value:d})),this.container.classList.add("buttonWidgetAnnotation","checkBox");const F=document.createElement("input");return pF.add(F),F.setAttribute("data-element-id",Z),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="checkbox",F.name=U.fieldName,d&&F.setAttribute("checked",!0),F.setAttribute("exportValue",U.exportValue),F.tabIndex=qV,F.addEventListener("change",V=>{const{name:W,checked:c}=V.target;for(const t of this._getElementsByName(W,Z)){const N=c&&t.exportValue===U.exportValue;t.domElement&&(t.domElement.checked=N),l.setValue(t.id,{value:N})}l.setValue(Z,{value:c})}),F.addEventListener("resetform",V=>{const W=U.defaultFieldValue||"Off";V.target.checked=W===U.exportValue}),this.enableScripting&&this.hasJSActions&&(F.addEventListener("updatefromsandbox",V=>{const W={value(c){c.target.checked=c.detail.value!=="Off",l.setValue(Z,{value:c.target.checked})}};this._dispatchEventFromSandbox(W,V)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],V=>V.target.checked)),this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class xN extends kF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("buttonWidgetAnnotation","radioButton");const l=this.annotationStorage,U=this.data,Z=U.id;let d=l.getValue(Z,{value:U.fieldValue===U.buttonValue}).value;if(typeof d=="string"&&(d=d!==U.buttonValue,l.setValue(Z,{value:d})),d)for(const V of this._getElementsByName(U.fieldName,Z))l.setValue(V.id,{value:!1});const F=document.createElement("input");if(pF.add(F),F.setAttribute("data-element-id",Z),F.disabled=U.readOnly,this._setRequired(F,this.data.required),F.type="radio",F.name=U.fieldName,d&&F.setAttribute("checked",!0),F.tabIndex=qV,F.addEventListener("change",V=>{const{name:W,checked:c}=V.target;for(const t of this._getElementsByName(W,Z))l.setValue(t.id,{value:!1});l.setValue(Z,{value:c})}),F.addEventListener("resetform",V=>{const W=U.defaultFieldValue;V.target.checked=W!=null&&W===U.buttonValue}),this.enableScripting&&this.hasJSActions){const V=U.buttonValue;F.addEventListener("updatefromsandbox",W=>{const c={value:t=>{const N=V===t.detail.value;for(const s of this._getElementsByName(t.target.name)){const b=N&&s.id===Z;s.domElement&&(s.domElement.checked=b),l.setValue(s.id,{value:b})}}};this._dispatchEventFromSandbox(c,W)}),this._setEventListeners(F,null,[["change","Validate"],["change","Action"],["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"]],W=>W.target.checked)}return this._setBackgroundColor(F),this._setDefaultPropertiesFromJS(F),this.container.append(F),this.container}}class gn extends EN{constructor(l){super(l,{ignoreBorder:l.data.hasAppearance})}render(){const l=super.render();l.classList.add("buttonWidgetAnnotation","pushButton");const U=l.lastChild;return this.enableScripting&&this.hasJSActions&&U&&(this._setDefaultPropertiesFromJS(U),U.addEventListener("updatefromsandbox",Z=>{this._dispatchEventFromSandbox({},Z)})),l}}class Kn extends kF{constructor(l){super(l,{isRenderable:l.renderForms})}render(){this.container.classList.add("choiceWidgetAnnotation");const l=this.annotationStorage,U=this.data.id,Z=l.getValue(U,{value:this.data.fieldValue}),d=document.createElement("select");pF.add(d),d.setAttribute("data-element-id",U),d.disabled=this.data.readOnly,this._setRequired(d,this.data.required),d.name=this.data.fieldName,d.tabIndex=qV;let F=this.data.combo&&this.data.options.length>0;this.data.combo||(d.size=this.data.options.length,this.data.multiSelect&&(d.multiple=!0)),d.addEventListener("resetform",N=>{const s=this.data.defaultFieldValue;for(const b of d.options)b.selected=b.value===s});for(const N of this.data.options){const s=document.createElement("option");s.textContent=N.displayValue,s.value=N.exportValue,Z.value.includes(N.exportValue)&&(s.setAttribute("selected",!0),F=!1),d.append(s)}let V=null;if(F){const N=document.createElement("option");N.value=" ",N.setAttribute("hidden",!0),N.setAttribute("selected",!0),d.prepend(N),V=()=>{N.remove(),d.removeEventListener("input",V),V=null},d.addEventListener("input",V)}const W=N=>{const s=N?"value":"textContent",{options:b,multiple:n}=d;return n?Array.prototype.filter.call(b,m=>m.selected).map(m=>m[s]):b.selectedIndex===-1?null:b[b.selectedIndex][s]};let c=W(!1);const t=N=>{const s=N.target.options;return Array.prototype.map.call(s,b=>({displayValue:b.textContent,exportValue:b.value}))};return this.enableScripting&&this.hasJSActions?(d.addEventListener("updatefromsandbox",N=>{const s={value(b){V==null||V();const n=b.detail.value,m=new Set(Array.isArray(n)?n:[n]);for(const M of d.options)M.selected=m.has(M.value);l.setValue(U,{value:W(!0)}),c=W(!1)},multipleSelection(b){d.multiple=!0},remove(b){const n=d.options,m=b.detail.remove;n[m].selected=!1,d.remove(m),n.length>0&&Array.prototype.findIndex.call(n,G=>G.selected)===-1&&(n[0].selected=!0),l.setValue(U,{value:W(!0),items:t(b)}),c=W(!1)},clear(b){for(;d.length!==0;)d.remove(0);l.setValue(U,{value:null,items:[]}),c=W(!1)},insert(b){const{index:n,displayValue:m,exportValue:M}=b.detail.insert,G=d.children[n],J=document.createElement("option");J.textContent=m,J.value=M,G?G.before(J):d.append(J),l.setValue(U,{value:W(!0),items:t(b)}),c=W(!1)},items(b){const{items:n}=b.detail;for(;d.length!==0;)d.remove(0);for(const m of n){const{displayValue:M,exportValue:G}=m,J=document.createElement("option");J.textContent=M,J.value=G,d.append(J)}d.options.length>0&&(d.options[0].selected=!0),l.setValue(U,{value:W(!0),items:t(b)}),c=W(!1)},indices(b){const n=new Set(b.detail.indices);for(const m of b.target.options)m.selected=n.has(m.index);l.setValue(U,{value:W(!0)}),c=W(!1)},editable(b){b.target.disabled=!b.detail.editable}};this._dispatchEventFromSandbox(s,N)}),d.addEventListener("input",N=>{var n;const s=W(!0),b=W(!1);l.setValue(U,{value:s}),N.preventDefault(),(n=this.linkService.eventBus)==null||n.dispatch("dispatcheventinsandbox",{source:this,detail:{id:U,name:"Keystroke",value:c,change:b,changeEx:s,willCommit:!1,commitKey:1,keyDown:!1}})}),this._setEventListeners(d,null,[["focus","Focus"],["blur","Blur"],["mousedown","Mouse Down"],["mouseenter","Mouse Enter"],["mouseleave","Mouse Exit"],["mouseup","Mouse Up"],["input","Action"],["input","Validate"]],N=>N.target.value)):d.addEventListener("input",function(N){l.setValue(U,{value:W(!0)})}),this.data.combo&&this._setTextStyle(d),this._setBackgroundColor(d),this._setDefaultPropertiesFromJS(d),this.container.append(d),this.container}}class nt extends nl{constructor(l){const{data:U,elements:Z}=l;super(l,{isRenderable:nl._hasPopupData(U)}),this.elements=Z,this.popup=null}render(){this.container.classList.add("popupAnnotation");const l=this.popup=new Hn({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open}),U=[];for(const Z of this.elements)Z.popup=l,U.push(Z.data.id),Z.addHighlightArea();return this.container.setAttribute("aria-controls",U.map(Z=>`${OR}${Z}`).join(",")),this.container}}var G0,Fc,Qc,T0,dF,sl,XZ,FF,QV,VV,S0,BZ,yU,eZ,WV,pZ,cV,QF,VF,Fl,GW,at,jN,ON,rN,gN,TW,SW,ht;class Hn{constructor({container:l,color:U,elements:Z,titleObj:d,modificationDate:F,contentsObj:V,richText:W,parent:c,rect:t,parentRect:N,open:s}){i(this,Fl);i(this,G0,h(this,Fl,rN).bind(this));i(this,Fc,h(this,Fl,ht).bind(this));i(this,Qc,h(this,Fl,SW).bind(this));i(this,T0,h(this,Fl,TW).bind(this));i(this,dF,null);i(this,sl,null);i(this,XZ,null);i(this,FF,null);i(this,QV,null);i(this,VV,null);i(this,S0,null);i(this,BZ,!1);i(this,yU,null);i(this,eZ,null);i(this,WV,null);i(this,pZ,null);i(this,cV,null);i(this,QF,null);i(this,VF,!1);var b;a(this,sl,l),a(this,cV,d),a(this,XZ,V),a(this,pZ,W),a(this,VV,c),a(this,dF,U),a(this,WV,t),a(this,S0,N),a(this,QV,Z),a(this,FF,HR.toDateObject(F)),this.trigger=Z.flatMap(n=>n.getElementsToTriggerPopup());for(const n of this.trigger)n.addEventListener("click",Q(this,T0)),n.addEventListener("mouseenter",Q(this,Qc)),n.addEventListener("mouseleave",Q(this,Fc)),n.classList.add("popupTriggerArea");for(const n of Z)(b=n.container)==null||b.addEventListener("keydown",Q(this,G0));Q(this,sl).hidden=!0,s&&h(this,Fl,TW).call(this)}render(){if(Q(this,yU))return;const l=a(this,yU,document.createElement("div"));if(l.className="popup",Q(this,dF)){const F=l.style.outlineColor=k.makeHexColor(...Q(this,dF));CSS.supports("background-color","color-mix(in srgb, red 30%, white)")?l.style.backgroundColor=`color-mix(in srgb, ${F} 30%, white)`:l.style.backgroundColor=k.makeHexColor(...Q(this,dF).map(W=>Math.floor(.7*(255-W)+W)))}const U=document.createElement("span");U.className="header";const Z=document.createElement("h1");if(U.append(Z),{dir:Z.dir,str:Z.textContent}=Q(this,cV),l.append(U),Q(this,FF)){const F=document.createElement("span");F.classList.add("popupDate"),F.setAttribute("data-l10n-id","pdfjs-annotation-date-string"),F.setAttribute("data-l10n-args",JSON.stringify({date:Q(this,FF).toLocaleDateString(),time:Q(this,FF).toLocaleTimeString()})),U.append(F)}const d=Q(this,Fl,GW);if(d)IN.render({xfaHtml:d,intent:"richText",div:l}),l.lastChild.classList.add("richText","popupContent");else{const F=this._formatContents(Q(this,XZ));l.append(F)}Q(this,sl).append(l)}_formatContents({str:l,dir:U}){const Z=document.createElement("p");Z.classList.add("popupContent"),Z.dir=U;const d=l.split(/(?:\r\n?|\n)/);for(let F=0,V=d.length;F<V;++F){const W=d[F];Z.append(document.createTextNode(W)),F<V-1&&Z.append(document.createElement("br"))}return Z}updateEdited({rect:l,popupContent:U}){var Z;Q(this,QF)||a(this,QF,{contentsObj:Q(this,XZ),richText:Q(this,pZ)}),l&&a(this,eZ,null),U&&(a(this,pZ,h(this,Fl,ON).call(this,U)),a(this,XZ,null)),(Z=Q(this,yU))==null||Z.remove(),a(this,yU,null)}resetEdited(){var l;Q(this,QF)&&({contentsObj:ZU(this,XZ)._,richText:ZU(this,pZ)._}=Q(this,QF),a(this,QF,null),(l=Q(this,yU))==null||l.remove(),a(this,yU,null),a(this,eZ,null))}forceHide(){a(this,VF,this.isVisible),Q(this,VF)&&(Q(this,sl).hidden=!0)}maybeShow(){Q(this,VF)&&(Q(this,yU)||h(this,Fl,SW).call(this),a(this,VF,!1),Q(this,sl).hidden=!1)}get isVisible(){return Q(this,sl).hidden===!1}}G0=new WeakMap,Fc=new WeakMap,Qc=new WeakMap,T0=new WeakMap,dF=new WeakMap,sl=new WeakMap,XZ=new WeakMap,FF=new WeakMap,QV=new WeakMap,VV=new WeakMap,S0=new WeakMap,BZ=new WeakMap,yU=new WeakMap,eZ=new WeakMap,WV=new WeakMap,pZ=new WeakMap,cV=new WeakMap,QF=new WeakMap,VF=new WeakMap,Fl=new WeakSet,GW=function(){const l=Q(this,pZ),U=Q(this,XZ);return l!=null&&l.str&&(!(U!=null&&U.str)||U.str===l.str)&&Q(this,pZ).html||null},at=function(){var l,U,Z;return((Z=(U=(l=Q(this,Fl,GW))==null?void 0:l.attributes)==null?void 0:U.style)==null?void 0:Z.fontSize)||0},jN=function(){var l,U,Z;return((Z=(U=(l=Q(this,Fl,GW))==null?void 0:l.attributes)==null?void 0:U.style)==null?void 0:Z.color)||null},ON=function(l){const U=[],Z={str:l,html:{name:"div",attributes:{dir:"auto"},children:[{name:"p",children:U}]}},d={style:{color:Q(this,Fl,jN),fontSize:Q(this,Fl,at)?`calc(${Q(this,Fl,at)}px * var(--scale-factor))`:""}};for(const F of l.split(`
`))U.push({name:"span",value:F,attributes:d});return Z},rN=function(l){l.altKey||l.shiftKey||l.ctrlKey||l.metaKey||(l.key==="Enter"||l.key==="Escape"&&Q(this,BZ))&&h(this,Fl,TW).call(this)},gN=function(){if(Q(this,eZ)!==null)return;const{page:{view:l},viewport:{rawDims:{pageWidth:U,pageHeight:Z,pageX:d,pageY:F}}}=Q(this,VV);let V=!!Q(this,S0),W=V?Q(this,S0):Q(this,WV);for(const m of Q(this,QV))if(!W||k.intersect(m.data.rect,W)!==null){W=m.data.rect,V=!0;break}const c=k.normalizeRect([W[0],l[3]-W[1]+l[1],W[2],l[3]-W[3]+l[1]]),N=V?W[2]-W[0]+5:0,s=c[0]+N,b=c[1];a(this,eZ,[100*(s-d)/U,100*(b-F)/Z]);const{style:n}=Q(this,sl);n.left=`${Q(this,eZ)[0]}%`,n.top=`${Q(this,eZ)[1]}%`},TW=function(){a(this,BZ,!Q(this,BZ)),Q(this,BZ)?(h(this,Fl,SW).call(this),Q(this,sl).addEventListener("click",Q(this,T0)),Q(this,sl).addEventListener("keydown",Q(this,G0))):(h(this,Fl,ht).call(this),Q(this,sl).removeEventListener("click",Q(this,T0)),Q(this,sl).removeEventListener("keydown",Q(this,G0)))},SW=function(){Q(this,yU)||this.render(),this.isVisible?Q(this,BZ)&&Q(this,sl).classList.add("focused"):(h(this,Fl,gN).call(this),Q(this,sl).hidden=!1,Q(this,sl).style.zIndex=parseInt(Q(this,sl).style.zIndex)+1e3)},ht=function(){Q(this,sl).classList.remove("focused"),!(Q(this,BZ)||!this.isVisible)&&(Q(this,sl).hidden=!0,Q(this,sl).style.zIndex=parseInt(Q(this,sl).style.zIndex)-1e3)};class KN extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0}),this.textContent=l.data.textContent,this.textPosition=l.data.textPosition,this.annotationEditorType=v.FREETEXT}render(){if(this.container.classList.add("freeTextAnnotation"),this.textContent){const l=document.createElement("div");l.classList.add("annotationTextContent"),l.setAttribute("role","comment");for(const U of this.textContent){const Z=document.createElement("span");Z.textContent=U,l.append(Z)}this.container.append(l)}return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this._editOnDoubleClick(),this.container}}var tV;class vn extends nl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});i(this,tV,null)}render(){this.container.classList.add("lineAnnotation");const U=this.data,{width:Z,height:d}=xZ(U.rect),F=this.svgFactory.create(Z,d,!0),V=a(this,tV,this.svgFactory.createElement("svg:line"));return V.setAttribute("x1",U.rect[2]-U.lineCoordinates[0]),V.setAttribute("y1",U.rect[3]-U.lineCoordinates[1]),V.setAttribute("x2",U.rect[2]-U.lineCoordinates[2]),V.setAttribute("y2",U.rect[3]-U.lineCoordinates[3]),V.setAttribute("stroke-width",U.borderStyle.width||1),V.setAttribute("stroke","transparent"),V.setAttribute("fill","transparent"),F.append(V),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,tV)}addHighlightArea(){this.container.classList.add("highlightArea")}}tV=new WeakMap;var RV;class Pn extends nl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});i(this,RV,null)}render(){this.container.classList.add("squareAnnotation");const U=this.data,{width:Z,height:d}=xZ(U.rect),F=this.svgFactory.create(Z,d,!0),V=U.borderStyle.width,W=a(this,RV,this.svgFactory.createElement("svg:rect"));return W.setAttribute("x",V/2),W.setAttribute("y",V/2),W.setAttribute("width",Z-V),W.setAttribute("height",d-V),W.setAttribute("stroke-width",V||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),F.append(W),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,RV)}addHighlightArea(){this.container.classList.add("highlightArea")}}RV=new WeakMap;var NV;class fn extends nl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});i(this,NV,null)}render(){this.container.classList.add("circleAnnotation");const U=this.data,{width:Z,height:d}=xZ(U.rect),F=this.svgFactory.create(Z,d,!0),V=U.borderStyle.width,W=a(this,NV,this.svgFactory.createElement("svg:ellipse"));return W.setAttribute("cx",Z/2),W.setAttribute("cy",d/2),W.setAttribute("rx",Z/2-V/2),W.setAttribute("ry",d/2-V/2),W.setAttribute("stroke-width",V||1),W.setAttribute("stroke","transparent"),W.setAttribute("fill","transparent"),F.append(W),this.container.append(F),!U.popupRef&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,NV)}addHighlightArea(){this.container.classList.add("highlightArea")}}NV=new WeakMap;var sV;class HN extends nl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});i(this,sV,null);this.containerClassName="polylineAnnotation",this.svgElementName="svg:polyline"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:U,vertices:Z,borderStyle:d,popupRef:F}}=this;if(!Z)return this.container;const{width:V,height:W}=xZ(U),c=this.svgFactory.create(V,W,!0);let t=[];for(let s=0,b=Z.length;s<b;s+=2){const n=Z[s]-U[0],m=U[3]-Z[s+1];t.push(`${n},${m}`)}t=t.join(" ");const N=a(this,sV,this.svgFactory.createElement(this.svgElementName));return N.setAttribute("points",t),N.setAttribute("stroke-width",d.width||1),N.setAttribute("stroke","transparent"),N.setAttribute("fill","transparent"),c.append(N),this.container.append(c),!F&&this.hasPopupData&&this._createPopup(),this.container}getElementsToTriggerPopup(){return Q(this,sV)}addHighlightArea(){this.container.classList.add("highlightArea")}}sV=new WeakMap;class An extends HN{constructor(l){super(l),this.containerClassName="polygonAnnotation",this.svgElementName="svg:polygon"}}class _n extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("caretAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}var bV;class vN extends nl{constructor(U){super(U,{isRenderable:!0,ignoreBorder:!0});i(this,bV,[]);this.containerClassName="inkAnnotation",this.svgElementName="svg:polyline",this.annotationEditorType=v.INK}render(){this.container.classList.add(this.containerClassName);const{data:{rect:U,inkLists:Z,borderStyle:d,popupRef:F}}=this,{width:V,height:W}=xZ(U),c=this.svgFactory.create(V,W,!0);for(const t of Z){let N=[];for(let b=0,n=t.length;b<n;b+=2){const m=t[b]-U[0],M=U[3]-t[b+1];N.push(`${m},${M}`)}N=N.join(" ");const s=this.svgFactory.createElement(this.svgElementName);Q(this,bV).push(s),s.setAttribute("points",N),s.setAttribute("stroke-width",d.width||1),s.setAttribute("stroke","transparent"),s.setAttribute("fill","transparent"),!F&&this.hasPopupData&&this._createPopup(),c.append(s)}return this.container.append(c),this.container}getElementsToTriggerPopup(){return Q(this,bV)}addHighlightArea(){this.container.classList.add("highlightArea")}}bV=new WeakMap;class qn extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("highlightAnnotation"),this.container}}class $n extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("underlineAnnotation"),this.container}}class la extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("squigglyAnnotation"),this.container}}class Ua extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0,createQuadrilaterals:!0})}render(){return!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container.classList.add("strikeoutAnnotation"),this.container}}class PN extends nl{constructor(l){super(l,{isRenderable:!0,ignoreBorder:!0})}render(){return this.container.classList.add("stampAnnotation"),!this.data.popupRef&&this.hasPopupData&&this._createPopup(),this.container}}var nV,aV,mt;class Za extends nl{constructor(U){var d;super(U,{isRenderable:!0});i(this,aV);i(this,nV,null);const{file:Z}=this.data;this.filename=Z.filename,this.content=Z.content,(d=this.linkService.eventBus)==null||d.dispatch("fileattachmentannotation",{source:this,...Z})}render(){this.container.classList.add("fileAttachmentAnnotation");const{container:U,data:Z}=this;let d;Z.hasAppearance||Z.fillAlpha===0?d=document.createElement("div"):(d=document.createElement("img"),d.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(Z.name)?"paperclip":"pushpin"}.svg`,Z.fillAlpha&&Z.fillAlpha<1&&(d.style=`filter: opacity(${Math.round(Z.fillAlpha*100)}%);`)),d.addEventListener("dblclick",h(this,aV,mt).bind(this)),a(this,nV,d);const{isMac:F}=$l.platform;return U.addEventListener("keydown",V=>{V.key==="Enter"&&(F?V.metaKey:V.ctrlKey)&&h(this,aV,mt).call(this)}),!Z.popupRef&&this.hasPopupData?this._createPopup():d.classList.add("popupTriggerArea"),U.append(d),U}getElementsToTriggerPopup(){return Q(this,nV)}addHighlightArea(){this.container.classList.add("highlightArea")}}nV=new WeakMap,aV=new WeakSet,mt=function(){var U;(U=this.downloadManager)==null||U.openOrDownloadData(this.content,this.filename)};var hV,WF,cF,uF,fN,it;class da{constructor({div:l,accessibilityManager:U,annotationCanvasMap:Z,annotationEditorUIManager:d,page:F,viewport:V}){i(this,uF);i(this,hV,null);i(this,WF,null);i(this,cF,new Map);this.div=l,a(this,hV,U),a(this,WF,Z),this.page=F,this.viewport=V,this.zIndex=0,this._annotationEditorUIManager=d}hasEditableAnnotations(){return Q(this,cF).size>0}async render(l){var V;const{annotations:U}=l,Z=this.div;BF(Z,this.viewport);const d=new Map,F={data:null,layer:Z,linkService:l.linkService,downloadManager:l.downloadManager,imageResourcesPath:l.imageResourcesPath||"",renderForms:l.renderForms!==!1,svgFactory:new qt,annotationStorage:l.annotationStorage||new ZR,enableScripting:l.enableScripting===!0,hasJSActions:l.hasJSActions,fieldObjects:l.fieldObjects,parent:this,elements:null};for(const W of U){if(W.noHTML)continue;const c=W.annotationType===il.POPUP;if(c){const s=d.get(W.id);if(!s)continue;F.elements=s}else{const{width:s,height:b}=xZ(W.rect);if(s<=0||b<=0)continue}F.data=W;const t=wn.create(F);if(!t.isRenderable)continue;if(!c&&W.popupRef){const s=d.get(W.popupRef);s?s.push(t):d.set(W.popupRef,[t])}const N=t.render();W.hidden&&(N.style.visibility="hidden"),h(this,uF,fN).call(this,N,W.id),t._isEditable&&(Q(this,cF).set(t.data.id,t),(V=this._annotationEditorUIManager)==null||V.renderAnnotationElement(t))}h(this,uF,it).call(this)}update({viewport:l}){const U=this.div;this.viewport=l,BF(U,{rotation:l.rotation}),h(this,uF,it).call(this),U.hidden=!1}getEditableAnnotations(){return Array.from(Q(this,cF).values())}getEditableAnnotation(l){return Q(this,cF).get(l)}}hV=new WeakMap,WF=new WeakMap,cF=new WeakMap,uF=new WeakSet,fN=function(l,U){var d;const Z=l.firstChild||l;Z.id=`${OR}${U}`,this.div.append(l),(d=Q(this,hV))==null||d.moveElementInDOM(this.div,l,Z,!1)},it=function(){if(!Q(this,WF))return;const l=this.div;for(const[U,Z]of Q(this,WF)){const d=l.querySelector(`[data-annotation-id="${U}"]`);if(!d)continue;Z.className="annotationContent";const{firstChild:F}=d;F?F.nodeName==="CANVAS"?F.replaceWith(Z):F.classList.contains("annotationContent")?F.after(Z):F.before(Z):d.append(Z)}Q(this,WF).clear()};const WW=/\r\n?|\n/g;var mV,iV,MV,JV,GV,zU,cU,TV,tU,Y0,hl,AN,_N,qN,YW,OZ,XW,BW,$N,Jt,ls;const Wl=class Wl extends ${constructor(U){super({...U,name:"freeTextEditor"});i(this,hl);i(this,mV,this.editorDivBlur.bind(this));i(this,iV,this.editorDivFocus.bind(this));i(this,MV,this.editorDivInput.bind(this));i(this,JV,this.editorDivKeydown.bind(this));i(this,GV,this.editorDivPaste.bind(this));i(this,zU);i(this,cU,"");i(this,TV,`${this.id}-editor`);i(this,tU);i(this,Y0,null);a(this,zU,U.color||Wl._defaultColor||$._defaultLineColor),a(this,tU,U.fontSize||Wl._defaultFontSize)}static get _keyboardManager(){const U=Wl.prototype,Z=V=>V.isEmpty(),d=eF.TRANSLATE_SMALL,F=eF.TRANSLATE_BIG;return P(this,"_keyboardManager",new AV([[["ctrl+s","mac+meta+s","ctrl+p","mac+meta+p"],U.commitOrRemove,{bubbles:!0}],[["ctrl+Enter","mac+meta+Enter","Escape","mac+Escape"],U.commitOrRemove],[["ArrowLeft","mac+ArrowLeft"],U._translateEmpty,{args:[-d,0],checker:Z}],[["ctrl+ArrowLeft","mac+shift+ArrowLeft"],U._translateEmpty,{args:[-F,0],checker:Z}],[["ArrowRight","mac+ArrowRight"],U._translateEmpty,{args:[d,0],checker:Z}],[["ctrl+ArrowRight","mac+shift+ArrowRight"],U._translateEmpty,{args:[F,0],checker:Z}],[["ArrowUp","mac+ArrowUp"],U._translateEmpty,{args:[0,-d],checker:Z}],[["ctrl+ArrowUp","mac+shift+ArrowUp"],U._translateEmpty,{args:[0,-F],checker:Z}],[["ArrowDown","mac+ArrowDown"],U._translateEmpty,{args:[0,d],checker:Z}],[["ctrl+ArrowDown","mac+shift+ArrowDown"],U._translateEmpty,{args:[0,F],checker:Z}]]))}static initialize(U,Z){$.initialize(U,Z,{strings:["pdfjs-free-text-default-content"]});const d=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(d.getPropertyValue("--freetext-padding"))}static updateDefaultParams(U,Z){switch(U){case C.FREETEXT_SIZE:Wl._defaultFontSize=Z;break;case C.FREETEXT_COLOR:Wl._defaultColor=Z;break}}updateParams(U,Z){switch(U){case C.FREETEXT_SIZE:h(this,hl,AN).call(this,Z);break;case C.FREETEXT_COLOR:h(this,hl,_N).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[C.FREETEXT_SIZE,Wl._defaultFontSize],[C.FREETEXT_COLOR,Wl._defaultColor||$._defaultLineColor]]}get propertiesToUpdate(){return[[C.FREETEXT_SIZE,Q(this,tU)],[C.FREETEXT_COLOR,Q(this,zU)]]}_translateEmpty(U,Z){this._uiManager.translateSelectedEditors(U,Z,!0)}getInitialTranslation(){const U=this.parentScale;return[-Wl._internalPadding*U,-(Wl._internalPadding+Q(this,tU))*U]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.isAttachedToDOM||this.parent.add(this)))}enableEditMode(){if(this.isInEditMode())return;this.parent.setEditingState(!1),this.parent.updateToolbar(v.FREETEXT),super.enableEditMode(),this.overlayDiv.classList.remove("enabled"),this.editorDiv.contentEditable=!0,this._isDraggable=!1,this.div.removeAttribute("aria-activedescendant");const U=this._uiManager._signal;this.editorDiv.addEventListener("keydown",Q(this,JV),{signal:U}),this.editorDiv.addEventListener("focus",Q(this,iV),{signal:U}),this.editorDiv.addEventListener("blur",Q(this,mV),{signal:U}),this.editorDiv.addEventListener("input",Q(this,MV),{signal:U}),this.editorDiv.addEventListener("paste",Q(this,GV),{signal:U})}disableEditMode(){this.isInEditMode()&&(this.parent.setEditingState(!0),super.disableEditMode(),this.overlayDiv.classList.add("enabled"),this.editorDiv.contentEditable=!1,this.div.setAttribute("aria-activedescendant",Q(this,TV)),this._isDraggable=!0,this.editorDiv.removeEventListener("keydown",Q(this,JV)),this.editorDiv.removeEventListener("focus",Q(this,iV)),this.editorDiv.removeEventListener("blur",Q(this,mV)),this.editorDiv.removeEventListener("input",Q(this,MV)),this.editorDiv.removeEventListener("paste",Q(this,GV)),this.div.focus({preventScroll:!0}),this.isEditing=!1,this.parent.div.classList.add("freetextEditing"))}focusin(U){this._focusEventsAllowed&&(super.focusin(U),U.target!==this.editorDiv&&this.editorDiv.focus())}onceAdded(){var U;this.width||(this.enableEditMode(),this.editorDiv.focus(),(U=this._initialOptions)!=null&&U.isCentered&&this.center(),this._initialOptions=null)}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===""}remove(){this.isEditing=!1,this.parent&&(this.parent.setEditingState(!0),this.parent.div.classList.add("freetextEditing")),super.remove()}commit(){if(!this.isInEditMode())return;super.commit(),this.disableEditMode();const U=Q(this,cU),Z=a(this,cU,h(this,hl,qN).call(this).trimEnd());if(U===Z)return;const d=F=>{if(a(this,cU,F),!F){this.remove();return}h(this,hl,BW).call(this),this._uiManager.rebuild(this),h(this,hl,YW).call(this)};this.addCommands({cmd:()=>{d(Z)},undo:()=>{d(U)},mustExec:!1}),h(this,hl,YW).call(this)}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode(),this.editorDiv.focus()}dblclick(U){this.enterInEditMode()}keydown(U){U.target===this.div&&U.key==="Enter"&&(this.enterInEditMode(),U.preventDefault())}editorDivKeydown(U){Wl._keyboardManager.exec(this,U)}editorDivFocus(U){this.isEditing=!0}editorDivBlur(U){this.isEditing=!1}editorDivInput(U){this.parent.div.classList.toggle("freetextEditing",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute("role","comment"),this.editorDiv.removeAttribute("aria-multiline")}enableEditing(){this.editorDiv.setAttribute("role","textbox"),this.editorDiv.setAttribute("aria-multiline",!0)}render(){if(this.div)return this.div;let U,Z;this.width&&(U=this.x,Z=this.y),super.render(),this.editorDiv=document.createElement("div"),this.editorDiv.className="internal",this.editorDiv.setAttribute("id",Q(this,TV)),this.editorDiv.setAttribute("data-l10n-id","pdfjs-free-text"),this.enableEditing(),$._l10nPromise.get("pdfjs-free-text-default-content").then(F=>{var V;return(V=this.editorDiv)==null?void 0:V.setAttribute("default-content",F)}),this.editorDiv.contentEditable=!0;const{style:d}=this.editorDiv;if(d.fontSize=`calc(${Q(this,tU)}px * var(--scale-factor))`,d.color=Q(this,zU),this.div.append(this.editorDiv),this.overlayDiv=document.createElement("div"),this.overlayDiv.classList.add("overlay","enabled"),this.div.append(this.overlayDiv),CW(this,this.div,["dblclick","keydown"]),this.width){const[F,V]=this.parentDimensions;if(this.annotationElementId){const{position:W}=Q(this,Y0);let[c,t]=this.getInitialTranslation();[c,t]=this.pageTranslationToScreen(c,t);const[N,s]=this.pageDimensions,[b,n]=this.pageTranslation;let m,M;switch(this.rotation){case 0:m=U+(W[0]-b)/N,M=Z+this.height-(W[1]-n)/s;break;case 90:m=U+(W[0]-b)/N,M=Z-(W[1]-n)/s,[c,t]=[t,-c];break;case 180:m=U-this.width+(W[0]-b)/N,M=Z-(W[1]-n)/s,[c,t]=[-c,-t];break;case 270:m=U+(W[0]-b-this.height*s)/N,M=Z+(W[1]-n-this.width*N)/s,[c,t]=[-t,c];break}this.setAt(m*F,M*V,c,t)}else this.setAt(U*F,Z*V,this.width*F,this.height*V);h(this,hl,BW).call(this),this._isDraggable=!0,this.editorDiv.contentEditable=!1}else this._isDraggable=!1,this.editorDiv.contentEditable=!0;return this.div}editorDivPaste(U){var m,M,G;const Z=U.clipboardData||window.clipboardData,{types:d}=Z;if(d.length===1&&d[0]==="text/plain")return;U.preventDefault();const F=h(m=Wl,OZ,Jt).call(m,Z.getData("text")||"").replaceAll(WW,`
`);if(!F)return;const V=window.getSelection();if(!V.rangeCount)return;this.editorDiv.normalize(),V.deleteFromDocument();const W=V.getRangeAt(0);if(!F.includes(`
`)){W.insertNode(document.createTextNode(F)),this.editorDiv.normalize(),V.collapseToStart();return}const{startContainer:c,startOffset:t}=W,N=[],s=[];if(c.nodeType===Node.TEXT_NODE){const J=c.parentElement;if(s.push(c.nodeValue.slice(t).replaceAll(WW,"")),J!==this.editorDiv){let T=N;for(const S of this.editorDiv.childNodes){if(S===J){T=s;continue}T.push(h(M=Wl,OZ,XW).call(M,S))}}N.push(c.nodeValue.slice(0,t).replaceAll(WW,""))}else if(c===this.editorDiv){let J=N,T=0;for(const S of this.editorDiv.childNodes)T++===t&&(J=s),J.push(h(G=Wl,OZ,XW).call(G,S))}a(this,cU,`${N.join(`
`)}${F}${s.join(`
`)}`),h(this,hl,BW).call(this);const b=new Range;let n=N.reduce((J,T)=>J+T.length,0);for(const{firstChild:J}of this.editorDiv.childNodes)if(J.nodeType===Node.TEXT_NODE){const T=J.nodeValue.length;if(n<=T){b.setStart(J,n),b.setEnd(J,n);break}n-=T}V.removeAllRanges(),V.addRange(b)}get contentDiv(){return this.editorDiv}static deserialize(U,Z,d){var W;let F=null;if(U instanceof KN){const{data:{defaultAppearanceData:{fontSize:c,fontColor:t},rect:N,rotation:s,id:b},textContent:n,textPosition:m,parent:{page:{pageNumber:M}}}=U;if(!n||n.length===0)return null;F=U={annotationType:v.FREETEXT,color:Array.from(t),fontSize:c,value:n.join(`
`),position:m,pageIndex:M-1,rect:N.slice(0),rotation:s,id:b,deleted:!1}}const V=super.deserialize(U,Z,d);return a(V,tU,U.fontSize),a(V,zU,k.makeHexColor(...U.color)),a(V,cU,h(W=Wl,OZ,Jt).call(W,U.value)),V.annotationElementId=U.id||null,a(V,Y0,F),V}serialize(U=!1){if(this.isEmpty())return null;if(this.deleted)return{pageIndex:this.pageIndex,id:this.annotationElementId,deleted:!0};const Z=Wl._internalPadding*this.parentScale,d=this.getRect(Z,Z),F=$._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:Q(this,zU)),V={annotationType:v.FREETEXT,color:F,fontSize:Q(this,tU),value:h(this,hl,$N).call(this),pageIndex:this.pageIndex,rect:d,rotation:this.rotation,structTreeParentId:this._structTreeParentId};return U?V:this.annotationElementId&&!h(this,hl,ls).call(this,V)?null:(V.id=this.annotationElementId,V)}renderAnnotationElement(U){const Z=super.renderAnnotationElement(U);if(this.deleted)return Z;const{style:d}=Z;d.fontSize=`calc(${Q(this,tU)}px * var(--scale-factor))`,d.color=Q(this,zU),Z.replaceChildren();for(const V of Q(this,cU).split(`
`)){const W=document.createElement("div");W.append(V?document.createTextNode(V):document.createElement("br")),Z.append(W)}const F=Wl._internalPadding*this.parentScale;return U.updateEdited({rect:this.getRect(F,F),popupContent:Q(this,cU)}),Z}resetAnnotationElement(U){super.resetAnnotationElement(U),U.resetEdited()}};mV=new WeakMap,iV=new WeakMap,MV=new WeakMap,JV=new WeakMap,GV=new WeakMap,zU=new WeakMap,cU=new WeakMap,TV=new WeakMap,tU=new WeakMap,Y0=new WeakMap,hl=new WeakSet,AN=function(U){const Z=F=>{this.editorDiv.style.fontSize=`calc(${F}px * var(--scale-factor))`,this.translate(0,-(F-Q(this,tU))*this.parentScale),a(this,tU,F),h(this,hl,YW).call(this)},d=Q(this,tU);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.FREETEXT_SIZE,overwriteIfSameType:!0,keepUndo:!0})},_N=function(U){const Z=F=>{a(this,zU,this.editorDiv.style.color=F)},d=Q(this,zU);this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.FREETEXT_COLOR,overwriteIfSameType:!0,keepUndo:!0})},qN=function(){var Z;const U=[];this.editorDiv.normalize();for(const d of this.editorDiv.childNodes)U.push(h(Z=Wl,OZ,XW).call(Z,d));return U.join(`
`)},YW=function(){const[U,Z]=this.parentDimensions;let d;if(this.isAttachedToDOM)d=this.div.getBoundingClientRect();else{const{currentLayer:F,div:V}=this,W=V.style.display,c=V.classList.contains("hidden");V.classList.remove("hidden"),V.style.display="hidden",F.div.append(this.div),d=V.getBoundingClientRect(),V.remove(),V.style.display=W,V.classList.toggle("hidden",c)}this.rotation%180===this.parentRotation%180?(this.width=d.width/U,this.height=d.height/Z):(this.width=d.height/U,this.height=d.width/Z),this.fixAndSetPosition()},OZ=new WeakSet,XW=function(U){return(U.nodeType===Node.TEXT_NODE?U.nodeValue:U.innerText).replaceAll(WW,"")},BW=function(){if(this.editorDiv.replaceChildren(),!!Q(this,cU))for(const U of Q(this,cU).split(`
`)){const Z=document.createElement("div");Z.append(U?document.createTextNode(U):document.createElement("br")),this.editorDiv.append(Z)}},$N=function(){return Q(this,cU).replaceAll(" "," ")},Jt=function(U){return U.replaceAll(" "," ")},ls=function(U){const{value:Z,fontSize:d,color:F,pageIndex:V}=Q(this,Y0);return this._hasBeenMoved||U.value!==Z||U.fontSize!==d||U.color.some((W,c)=>W!==F[c])||U.pageIndex!==V},i(Wl,OZ),j(Wl,"_freeTextDefaultContent",""),j(Wl,"_internalPadding",0),j(Wl,"_defaultColor",null),j(Wl,"_defaultFontSize",10),j(Wl,"_type","freetext"),j(Wl,"_editorType",v.FREETEXT);let Mt=Wl;var SV,cd,LU,fl,Us,eW,Zs,ds,Gt;class LR{constructor(l,U=0,Z=0,d=!0){i(this,fl);i(this,SV);i(this,cd,[]);i(this,LU,[]);let F=1/0,V=-1/0,W=1/0,c=-1/0;const N=10**-4;for(const{x:J,y:T,width:S,height:Y}of l){const e=Math.floor((J-U)/N)*N,X=Math.ceil((J+S+U)/N)*N,B=Math.floor((T-U)/N)*N,p=Math.ceil((T+Y+U)/N)*N,u=[e,B,p,!0],I=[X,B,p,!1];Q(this,cd).push(u,I),F=Math.min(F,e),V=Math.max(V,X),W=Math.min(W,B),c=Math.max(c,p)}const s=V-F+2*Z,b=c-W+2*Z,n=F-Z,m=W-Z,M=Q(this,cd).at(d?-1:-2),G=[M[0],M[2]];for(const J of Q(this,cd)){const[T,S,Y]=J;J[0]=(T-n)/s,J[1]=(S-m)/b,J[2]=(Y-m)/b}a(this,SV,{x:n,y:m,width:s,height:b,lastPoint:G})}getOutlines(){Q(this,cd).sort((U,Z)=>U[0]-Z[0]||U[1]-Z[1]||U[2]-Z[2]);const l=[];for(const U of Q(this,cd))U[3]?(l.push(...h(this,fl,Gt).call(this,U)),h(this,fl,Zs).call(this,U)):(h(this,fl,ds).call(this,U),l.push(...h(this,fl,Gt).call(this,U)));return h(this,fl,Us).call(this,l)}}SV=new WeakMap,cd=new WeakMap,LU=new WeakMap,fl=new WeakSet,Us=function(l){const U=[],Z=new Set;for(const V of l){const[W,c,t]=V;U.push([W,c,V],[W,t,V])}U.sort((V,W)=>V[1]-W[1]||V[0]-W[0]);for(let V=0,W=U.length;V<W;V+=2){const c=U[V][2],t=U[V+1][2];c.push(t),t.push(c),Z.add(c),Z.add(t)}const d=[];let F;for(;Z.size>0;){const V=Z.values().next().value;let[W,c,t,N,s]=V;Z.delete(V);let b=W,n=c;for(F=[W,t],d.push(F);;){let m;if(Z.has(N))m=N;else if(Z.has(s))m=s;else break;Z.delete(m),[W,c,t,N,s]=m,b!==W&&(F.push(b,n,W,n===c?c:t),b=W),n=n===c?t:c}F.push(b,n)}return new Fa(d,Q(this,SV))},eW=function(l){const U=Q(this,LU);let Z=0,d=U.length-1;for(;Z<=d;){const F=Z+d>>1,V=U[F][0];if(V===l)return F;V<l?Z=F+1:d=F-1}return d+1},Zs=function([,l,U]){const Z=h(this,fl,eW).call(this,l);Q(this,LU).splice(Z,0,[l,U])},ds=function([,l,U]){const Z=h(this,fl,eW).call(this,l);for(let d=Z;d<Q(this,LU).length;d++){const[F,V]=Q(this,LU)[d];if(F!==l)break;if(F===l&&V===U){Q(this,LU).splice(d,1);return}}for(let d=Z-1;d>=0;d--){const[F,V]=Q(this,LU)[d];if(F!==l)break;if(F===l&&V===U){Q(this,LU).splice(d,1);return}}},Gt=function(l){const[U,Z,d]=l,F=[[U,Z,d]],V=h(this,fl,eW).call(this,d);for(let W=0;W<V;W++){const[c,t]=Q(this,LU)[W];for(let N=0,s=F.length;N<s;N++){const[,b,n]=F[N];if(!(t<=b||n<=c)){if(b>=c){if(n>t)F[N][1]=t;else{if(s===1)return[];F.splice(N,1),N--,s--}continue}F[N][2]=c,n>t&&F.push([U,t,n])}}}return F};class Fs{toSVGPath(){throw new Error("Abstract method `toSVGPath` must be implemented.")}get box(){throw new Error("Abstract getter `box` must be implemented.")}serialize(l,U){throw new Error("Abstract method `serialize` must be implemented.")}get free(){return this instanceof St}}var YV,X0;class Fa extends Fs{constructor(U,Z){super();i(this,YV);i(this,X0);a(this,X0,U),a(this,YV,Z)}toSVGPath(){const U=[];for(const Z of Q(this,X0)){let[d,F]=Z;U.push(`M${d} ${F}`);for(let V=2;V<Z.length;V+=2){const W=Z[V],c=Z[V+1];W===d?(U.push(`V${c}`),F=c):c===F&&(U.push(`H${W}`),d=W)}U.push("Z")}return U.join(" ")}serialize([U,Z,d,F],V){const W=[],c=d-U,t=F-Z;for(const N of Q(this,X0)){const s=new Array(N.length);for(let b=0;b<N.length;b+=2)s[b]=U+N[b]*c,s[b+1]=F-N[b+1]*t;W.push(s)}return W}get box(){return Q(this,YV)}}YV=new WeakMap,X0=new WeakMap;var PU,uZ,B0,e0,fU,H,tF,RF,XV,BV,p0,u0,td,eV,Vc,Wc,pV,Tt;const NZ=class NZ{constructor({x:l,y:U},Z,d,F,V,W=0){i(this,pV);i(this,PU);i(this,uZ,[]);i(this,B0);i(this,e0);i(this,fU,[]);i(this,H,new Float64Array(18));i(this,tF);i(this,RF);i(this,XV);i(this,BV);i(this,p0);i(this,u0);i(this,td,[]);a(this,PU,Z),a(this,u0,F*d),a(this,e0,V),Q(this,H).set([NaN,NaN,NaN,NaN,l,U],6),a(this,B0,W),a(this,BV,Q(NZ,eV)*d),a(this,XV,Q(NZ,Wc)*d),a(this,p0,d),Q(this,td).push(l,U)}get free(){return!0}isEmpty(){return isNaN(Q(this,H)[8])}add({x:l,y:U}){var u;a(this,tF,l),a(this,RF,U);const[Z,d,F,V]=Q(this,PU);let[W,c,t,N]=Q(this,H).subarray(8,12);const s=l-t,b=U-N,n=Math.hypot(s,b);if(n<Q(this,XV))return!1;const m=n-Q(this,BV),M=m/n,G=M*s,J=M*b;let T=W,S=c;W=t,c=N,t+=G,N+=J,(u=Q(this,td))==null||u.push(l,U);const Y=-J/m,e=G/m,X=Y*Q(this,u0),B=e*Q(this,u0);return Q(this,H).set(Q(this,H).subarray(2,8),0),Q(this,H).set([t+X,N+B],4),Q(this,H).set(Q(this,H).subarray(14,18),12),Q(this,H).set([t-X,N-B],16),isNaN(Q(this,H)[6])?(Q(this,fU).length===0&&(Q(this,H).set([W+X,c+B],2),Q(this,fU).push(NaN,NaN,NaN,NaN,(W+X-Z)/F,(c+B-d)/V),Q(this,H).set([W-X,c-B],14),Q(this,uZ).push(NaN,NaN,NaN,NaN,(W-X-Z)/F,(c-B-d)/V)),Q(this,H).set([T,S,W,c,t,N],6),!this.isEmpty()):(Q(this,H).set([T,S,W,c,t,N],6),Math.abs(Math.atan2(S-c,T-W)-Math.atan2(J,G))<Math.PI/2?([W,c,t,N]=Q(this,H).subarray(2,6),Q(this,fU).push(NaN,NaN,NaN,NaN,((W+t)/2-Z)/F,((c+N)/2-d)/V),[W,c,T,S]=Q(this,H).subarray(14,18),Q(this,uZ).push(NaN,NaN,NaN,NaN,((T+W)/2-Z)/F,((S+c)/2-d)/V),!0):([T,S,W,c,t,N]=Q(this,H).subarray(0,6),Q(this,fU).push(((T+5*W)/6-Z)/F,((S+5*c)/6-d)/V,((5*W+t)/6-Z)/F,((5*c+N)/6-d)/V,((W+t)/2-Z)/F,((c+N)/2-d)/V),[t,N,W,c,T,S]=Q(this,H).subarray(12,18),Q(this,uZ).push(((T+5*W)/6-Z)/F,((S+5*c)/6-d)/V,((5*W+t)/6-Z)/F,((5*c+N)/6-d)/V,((W+t)/2-Z)/F,((c+N)/2-d)/V),!0))}toSVGPath(){if(this.isEmpty())return"";const l=Q(this,fU),U=Q(this,uZ),Z=Q(this,H).subarray(4,6),d=Q(this,H).subarray(16,18),[F,V,W,c]=Q(this,PU),[t,N,s,b]=h(this,pV,Tt).call(this);if(isNaN(Q(this,H)[6])&&!this.isEmpty())return`M${(Q(this,H)[2]-F)/W} ${(Q(this,H)[3]-V)/c} L${(Q(this,H)[4]-F)/W} ${(Q(this,H)[5]-V)/c} L${t} ${N} L${s} ${b} L${(Q(this,H)[16]-F)/W} ${(Q(this,H)[17]-V)/c} L${(Q(this,H)[14]-F)/W} ${(Q(this,H)[15]-V)/c} Z`;const n=[];n.push(`M${l[4]} ${l[5]}`);for(let m=6;m<l.length;m+=6)isNaN(l[m])?n.push(`L${l[m+4]} ${l[m+5]}`):n.push(`C${l[m]} ${l[m+1]} ${l[m+2]} ${l[m+3]} ${l[m+4]} ${l[m+5]}`);n.push(`L${(Z[0]-F)/W} ${(Z[1]-V)/c} L${t} ${N} L${s} ${b} L${(d[0]-F)/W} ${(d[1]-V)/c}`);for(let m=U.length-6;m>=6;m-=6)isNaN(U[m])?n.push(`L${U[m+4]} ${U[m+5]}`):n.push(`C${U[m]} ${U[m+1]} ${U[m+2]} ${U[m+3]} ${U[m+4]} ${U[m+5]}`);return n.push(`L${U[4]} ${U[5]} Z`),n.join(" ")}getOutlines(){var J;const l=Q(this,fU),U=Q(this,uZ),Z=Q(this,H),d=Z.subarray(4,6),F=Z.subarray(16,18),[V,W,c,t]=Q(this,PU),N=new Float64Array((((J=Q(this,td))==null?void 0:J.length)??0)+2);for(let T=0,S=N.length-2;T<S;T+=2)N[T]=(Q(this,td)[T]-V)/c,N[T+1]=(Q(this,td)[T+1]-W)/t;N[N.length-2]=(Q(this,tF)-V)/c,N[N.length-1]=(Q(this,RF)-W)/t;const[s,b,n,m]=h(this,pV,Tt).call(this);if(isNaN(Z[6])&&!this.isEmpty()){const T=new Float64Array(36);return T.set([NaN,NaN,NaN,NaN,(Z[2]-V)/c,(Z[3]-W)/t,NaN,NaN,NaN,NaN,(Z[4]-V)/c,(Z[5]-W)/t,NaN,NaN,NaN,NaN,s,b,NaN,NaN,NaN,NaN,n,m,NaN,NaN,NaN,NaN,(Z[16]-V)/c,(Z[17]-W)/t,NaN,NaN,NaN,NaN,(Z[14]-V)/c,(Z[15]-W)/t],0),new St(T,N,Q(this,PU),Q(this,p0),Q(this,B0),Q(this,e0))}const M=new Float64Array(Q(this,fU).length+24+Q(this,uZ).length);let G=l.length;for(let T=0;T<G;T+=2){if(isNaN(l[T])){M[T]=M[T+1]=NaN;continue}M[T]=l[T],M[T+1]=l[T+1]}M.set([NaN,NaN,NaN,NaN,(d[0]-V)/c,(d[1]-W)/t,NaN,NaN,NaN,NaN,s,b,NaN,NaN,NaN,NaN,n,m,NaN,NaN,NaN,NaN,(F[0]-V)/c,(F[1]-W)/t],G),G+=24;for(let T=U.length-6;T>=6;T-=6)for(let S=0;S<6;S+=2){if(isNaN(U[T+S])){M[G]=M[G+1]=NaN,G+=2;continue}M[G]=U[T+S],M[G+1]=U[T+S+1],G+=2}return M.set([NaN,NaN,NaN,NaN,U[4],U[5]],G),new St(M,N,Q(this,PU),Q(this,p0),Q(this,B0),Q(this,e0))}};PU=new WeakMap,uZ=new WeakMap,B0=new WeakMap,e0=new WeakMap,fU=new WeakMap,H=new WeakMap,tF=new WeakMap,RF=new WeakMap,XV=new WeakMap,BV=new WeakMap,p0=new WeakMap,u0=new WeakMap,td=new WeakMap,eV=new WeakMap,Vc=new WeakMap,Wc=new WeakMap,pV=new WeakSet,Tt=function(){const l=Q(this,H).subarray(4,6),U=Q(this,H).subarray(16,18),[Z,d,F,V]=Q(this,PU);return[(Q(this,tF)+(l[0]-U[0])/2-Z)/F,(Q(this,RF)+(l[1]-U[1])/2-d)/V,(Q(this,tF)+(U[0]-l[0])/2-Z)/F,(Q(this,RF)+(U[1]-l[1])/2-d)/V]},i(NZ,eV,8),i(NZ,Vc,2),i(NZ,Wc,Q(NZ,eV)+Q(NZ,Vc));let jW=NZ;var y0,NF,yZ,uV,RU,yV,bl,lU,lQ,UQ,Qs;class St extends Fs{constructor(U,Z,d,F,V,W){super();i(this,lU);i(this,y0);i(this,NF,null);i(this,yZ);i(this,uV);i(this,RU);i(this,yV);i(this,bl);a(this,bl,U),a(this,RU,Z),a(this,y0,d),a(this,yV,F),a(this,yZ,V),a(this,uV,W),h(this,lU,Qs).call(this,W);const{x:c,y:t,width:N,height:s}=Q(this,NF);for(let b=0,n=U.length;b<n;b+=2)U[b]=(U[b]-c)/N,U[b+1]=(U[b+1]-t)/s;for(let b=0,n=Z.length;b<n;b+=2)Z[b]=(Z[b]-c)/N,Z[b+1]=(Z[b+1]-t)/s}toSVGPath(){const U=[`M${Q(this,bl)[4]} ${Q(this,bl)[5]}`];for(let Z=6,d=Q(this,bl).length;Z<d;Z+=6){if(isNaN(Q(this,bl)[Z])){U.push(`L${Q(this,bl)[Z+4]} ${Q(this,bl)[Z+5]}`);continue}U.push(`C${Q(this,bl)[Z]} ${Q(this,bl)[Z+1]} ${Q(this,bl)[Z+2]} ${Q(this,bl)[Z+3]} ${Q(this,bl)[Z+4]} ${Q(this,bl)[Z+5]}`)}return U.push("Z"),U.join(" ")}serialize([U,Z,d,F],V){const W=d-U,c=F-Z;let t,N;switch(V){case 0:t=h(this,lU,lQ).call(this,Q(this,bl),U,F,W,-c),N=h(this,lU,lQ).call(this,Q(this,RU),U,F,W,-c);break;case 90:t=h(this,lU,UQ).call(this,Q(this,bl),U,Z,W,c),N=h(this,lU,UQ).call(this,Q(this,RU),U,Z,W,c);break;case 180:t=h(this,lU,lQ).call(this,Q(this,bl),d,Z,-W,c),N=h(this,lU,lQ).call(this,Q(this,RU),d,Z,-W,c);break;case 270:t=h(this,lU,UQ).call(this,Q(this,bl),d,F,-W,-c),N=h(this,lU,UQ).call(this,Q(this,RU),d,F,-W,-c);break}return{outline:Array.from(t),points:[Array.from(N)]}}get box(){return Q(this,NF)}getNewOutline(U,Z){const{x:d,y:F,width:V,height:W}=Q(this,NF),[c,t,N,s]=Q(this,y0),b=V*N,n=W*s,m=d*N+c,M=F*s+t,G=new jW({x:Q(this,RU)[0]*b+m,y:Q(this,RU)[1]*n+M},Q(this,y0),Q(this,yV),U,Q(this,uV),Z??Q(this,yZ));for(let J=2;J<Q(this,RU).length;J+=2)G.add({x:Q(this,RU)[J]*b+m,y:Q(this,RU)[J+1]*n+M});return G.getOutlines()}}y0=new WeakMap,NF=new WeakMap,yZ=new WeakMap,uV=new WeakMap,RU=new WeakMap,yV=new WeakMap,bl=new WeakMap,lU=new WeakSet,lQ=function(U,Z,d,F,V){const W=new Float64Array(U.length);for(let c=0,t=U.length;c<t;c+=2)W[c]=Z+U[c]*F,W[c+1]=d+U[c+1]*V;return W},UQ=function(U,Z,d,F,V){const W=new Float64Array(U.length);for(let c=0,t=U.length;c<t;c+=2)W[c]=Z+U[c+1]*F,W[c+1]=d+U[c]*V;return W},Qs=function(U){const Z=Q(this,bl);let d=Z[4],F=Z[5],V=d,W=F,c=d,t=F,N=d,s=F;const b=U?Math.max:Math.min;for(let J=6,T=Z.length;J<T;J+=6){if(isNaN(Z[J]))V=Math.min(V,Z[J+4]),W=Math.min(W,Z[J+5]),c=Math.max(c,Z[J+4]),t=Math.max(t,Z[J+5]),s<Z[J+5]?(N=Z[J+4],s=Z[J+5]):s===Z[J+5]&&(N=b(N,Z[J+4]));else{const S=k.bezierBoundingBox(d,F,...Z.slice(J,J+6));V=Math.min(V,S[0]),W=Math.min(W,S[1]),c=Math.max(c,S[2]),t=Math.max(t,S[3]),s<S[3]?(N=S[2],s=S[3]):s===S[3]&&(N=b(N,S[2]))}d=Z[J+4],F=Z[J+5]}const n=V-Q(this,yZ),m=W-Q(this,yZ),M=c-V+2*Q(this,yZ),G=t-W+2*Q(this,yZ);a(this,NF,{x:n,y:m,width:M,height:G,lastPoint:[N,s]})};var zV,LV,kU,sF,z0,Jl,kV,L0,oV,DV,oU,k0,Vl,Yt,Xt,Vs,Sd,Ws,PZ;const sZ=class sZ{constructor({editor:l=null,uiManager:U=null}){i(this,Vl);i(this,zV,h(this,Vl,Vs).bind(this));i(this,LV,h(this,Vl,Ws).bind(this));i(this,kU,null);i(this,sF,null);i(this,z0);i(this,Jl,null);i(this,kV,!1);i(this,L0,!1);i(this,oV,null);i(this,DV);i(this,oU,null);i(this,k0);var Z;l?(a(this,L0,!1),a(this,k0,C.HIGHLIGHT_COLOR),a(this,oV,l)):(a(this,L0,!0),a(this,k0,C.HIGHLIGHT_DEFAULT_COLOR)),a(this,oU,(l==null?void 0:l._uiManager)||U),a(this,DV,Q(this,oU)._eventBus),a(this,z0,(l==null?void 0:l.color)||((Z=Q(this,oU))==null?void 0:Z.highlightColors.values().next().value)||"#FFFF98")}static get _keyboardManager(){return P(this,"_keyboardManager",new AV([[["Escape","mac+Escape"],sZ.prototype._hideDropdownFromKeyboard],[[" ","mac+ "],sZ.prototype._colorSelectFromKeyboard],[["ArrowDown","ArrowRight","mac+ArrowDown","mac+ArrowRight"],sZ.prototype._moveToNext],[["ArrowUp","ArrowLeft","mac+ArrowUp","mac+ArrowLeft"],sZ.prototype._moveToPrevious],[["Home","mac+Home"],sZ.prototype._moveToBeginning],[["End","mac+End"],sZ.prototype._moveToEnd]]))}renderButton(){const l=a(this,kU,document.createElement("button"));l.className="colorPicker",l.tabIndex="0",l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-button"),l.setAttribute("aria-haspopup",!0);const U=Q(this,oU)._signal;l.addEventListener("click",h(this,Vl,Sd).bind(this),{signal:U}),l.addEventListener("keydown",Q(this,zV),{signal:U});const Z=a(this,sF,document.createElement("span"));return Z.className="swatch",Z.setAttribute("aria-hidden",!0),Z.style.backgroundColor=Q(this,z0),l.append(Z),l}renderMainDropdown(){const l=a(this,Jl,h(this,Vl,Yt).call(this));return l.setAttribute("aria-orientation","horizontal"),l.setAttribute("aria-labelledby","highlightColorPickerLabel"),l}_colorSelectFromKeyboard(l){if(l.target===Q(this,kU)){h(this,Vl,Sd).call(this,l);return}const U=l.target.getAttribute("data-color");U&&h(this,Vl,Xt).call(this,U,l)}_moveToNext(l){var U,Z;if(!Q(this,Vl,PZ)){h(this,Vl,Sd).call(this,l);return}if(l.target===Q(this,kU)){(U=Q(this,Jl).firstChild)==null||U.focus();return}(Z=l.target.nextSibling)==null||Z.focus()}_moveToPrevious(l){var U,Z;if(l.target===((U=Q(this,Jl))==null?void 0:U.firstChild)||l.target===Q(this,kU)){Q(this,Vl,PZ)&&this._hideDropdownFromKeyboard();return}Q(this,Vl,PZ)||h(this,Vl,Sd).call(this,l),(Z=l.target.previousSibling)==null||Z.focus()}_moveToBeginning(l){var U;if(!Q(this,Vl,PZ)){h(this,Vl,Sd).call(this,l);return}(U=Q(this,Jl).firstChild)==null||U.focus()}_moveToEnd(l){var U;if(!Q(this,Vl,PZ)){h(this,Vl,Sd).call(this,l);return}(U=Q(this,Jl).lastChild)==null||U.focus()}hideDropdown(){var l;(l=Q(this,Jl))==null||l.classList.add("hidden"),window.removeEventListener("pointerdown",Q(this,LV))}_hideDropdownFromKeyboard(){var l;if(!Q(this,L0)){if(!Q(this,Vl,PZ)){(l=Q(this,oV))==null||l.unselect();return}this.hideDropdown(),Q(this,kU).focus({preventScroll:!0,focusVisible:Q(this,kV)})}}updateColor(l){if(Q(this,sF)&&(Q(this,sF).style.backgroundColor=l),!Q(this,Jl))return;const U=Q(this,oU).highlightColors.values();for(const Z of Q(this,Jl).children)Z.setAttribute("aria-selected",U.next().value===l)}destroy(){var l,U;(l=Q(this,kU))==null||l.remove(),a(this,kU,null),a(this,sF,null),(U=Q(this,Jl))==null||U.remove(),a(this,Jl,null)}};zV=new WeakMap,LV=new WeakMap,kU=new WeakMap,sF=new WeakMap,z0=new WeakMap,Jl=new WeakMap,kV=new WeakMap,L0=new WeakMap,oV=new WeakMap,DV=new WeakMap,oU=new WeakMap,k0=new WeakMap,Vl=new WeakSet,Yt=function(){const l=document.createElement("div"),U=Q(this,oU)._signal;l.addEventListener("contextmenu",UU,{signal:U}),l.className="dropdown",l.role="listbox",l.setAttribute("aria-multiselectable",!1),l.setAttribute("aria-orientation","vertical"),l.setAttribute("data-l10n-id","pdfjs-editor-colorpicker-dropdown");for(const[Z,d]of Q(this,oU).highlightColors){const F=document.createElement("button");F.tabIndex="0",F.role="option",F.setAttribute("data-color",d),F.title=Z,F.setAttribute("data-l10n-id",`pdfjs-editor-colorpicker-${Z}`);const V=document.createElement("span");F.append(V),V.className="swatch",V.style.backgroundColor=d,F.setAttribute("aria-selected",d===Q(this,z0)),F.addEventListener("click",h(this,Vl,Xt).bind(this,d),{signal:U}),l.append(F)}return l.addEventListener("keydown",Q(this,zV),{signal:U}),l},Xt=function(l,U){U.stopPropagation(),Q(this,DV).dispatch("switchannotationeditorparams",{source:this,type:Q(this,k0),value:l})},Vs=function(l){sZ._keyboardManager.exec(this,l)},Sd=function(l){if(Q(this,Vl,PZ)){this.hideDropdown();return}if(a(this,kV,l.detail===0),window.addEventListener("pointerdown",Q(this,LV),{signal:Q(this,oU)._signal}),Q(this,Jl)){Q(this,Jl).classList.remove("hidden");return}const U=a(this,Jl,h(this,Vl,Yt).call(this));Q(this,kU).append(U)},Ws=function(l){var U;(U=Q(this,Jl))!=null&&U.contains(l.target)||this.hideDropdown()},PZ=function(){return Q(this,Jl)&&!Q(this,Jl).classList.contains("hidden")};let OW=sZ;var o0,IV,Rd,bF,D0,iU,EV,CV,nF,DU,Hl,NU,cc,I0,aF,Gl,E0,AU,wV,g,Bt,et,cs,ts,Rs,pt,ZQ,GU,rF,Ns,pW,dQ,ss,bs,ns,as;const q=class q extends ${constructor(U){super({...U,name:"highlightEditor"});i(this,g);i(this,o0,null);i(this,IV,0);i(this,Rd);i(this,bF,null);i(this,D0,null);i(this,iU,null);i(this,EV,null);i(this,CV,0);i(this,nF,null);i(this,DU,null);i(this,Hl,null);i(this,NU,!1);i(this,cc,h(this,g,Ns).bind(this));i(this,I0,null);i(this,aF);i(this,Gl,null);i(this,E0,"");i(this,AU);i(this,wV,"");this.color=U.color||q._defaultColor,a(this,AU,U.thickness||q._defaultThickness),a(this,aF,U.opacity||q._defaultOpacity),a(this,Rd,U.boxes||null),a(this,wV,U.methodOfCreation||""),a(this,E0,U.text||""),this._isDraggable=!1,U.highlightId>-1?(a(this,NU,!0),h(this,g,et).call(this,U),h(this,g,ZQ).call(this)):(a(this,o0,U.anchorNode),a(this,IV,U.anchorOffset),a(this,EV,U.focusNode),a(this,CV,U.focusOffset),h(this,g,Bt).call(this),h(this,g,ZQ).call(this),this.rotate(this.rotation))}static get _keyboardManager(){const U=q.prototype;return P(this,"_keyboardManager",new AV([[["ArrowLeft","mac+ArrowLeft"],U._moveCaret,{args:[0]}],[["ArrowRight","mac+ArrowRight"],U._moveCaret,{args:[1]}],[["ArrowUp","mac+ArrowUp"],U._moveCaret,{args:[2]}],[["ArrowDown","mac+ArrowDown"],U._moveCaret,{args:[3]}]]))}get telemetryInitialData(){return{action:"added",type:Q(this,NU)?"free_highlight":"highlight",color:this._uiManager.highlightColorNames.get(this.color),thickness:Q(this,AU),methodOfCreation:Q(this,wV)}}get telemetryFinalData(){return{type:"highlight",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(U){return{numberOfColors:U.get("color").size}}static initialize(U,Z){var d;$.initialize(U,Z),q._defaultColor||(q._defaultColor=((d=Z.highlightColors)==null?void 0:d.values().next().value)||"#fff066")}static updateDefaultParams(U,Z){switch(U){case C.HIGHLIGHT_DEFAULT_COLOR:q._defaultColor=Z;break;case C.HIGHLIGHT_THICKNESS:q._defaultThickness=Z;break}}translateInPage(U,Z){}get toolbarPosition(){return Q(this,I0)}updateParams(U,Z){switch(U){case C.HIGHLIGHT_COLOR:h(this,g,cs).call(this,Z);break;case C.HIGHLIGHT_THICKNESS:h(this,g,ts).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[C.HIGHLIGHT_DEFAULT_COLOR,q._defaultColor],[C.HIGHLIGHT_THICKNESS,q._defaultThickness]]}get propertiesToUpdate(){return[[C.HIGHLIGHT_COLOR,this.color||q._defaultColor],[C.HIGHLIGHT_THICKNESS,Q(this,AU)||q._defaultThickness],[C.HIGHLIGHT_FREE,Q(this,NU)]]}async addEditToolbar(){const U=await super.addEditToolbar();return U?(this._uiManager.highlightColors&&(a(this,D0,new OW({editor:this})),U.addColorPicker(Q(this,D0))),U):null}disableEditing(){super.disableEditing(),this.div.classList.toggle("disabled",!0)}enableEditing(){super.enableEditing(),this.div.classList.toggle("disabled",!1)}fixAndSetPosition(){return super.fixAndSetPosition(h(this,g,dQ).call(this))}getBaseTranslation(){return[0,0]}getRect(U,Z){return super.getRect(U,Z,h(this,g,dQ).call(this))}onceAdded(){this.parent.addUndoableEditor(this),this.div.focus()}remove(){h(this,g,pt).call(this),this._reportTelemetry({action:"deleted"}),super.remove()}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(h(this,g,ZQ).call(this),this.isAttachedToDOM||this.parent.add(this)))}setParent(U){var d;let Z=!1;this.parent&&!U?h(this,g,pt).call(this):U&&(h(this,g,ZQ).call(this,U),Z=!this.parent&&((d=this.div)==null?void 0:d.classList.contains("selectedEditor"))),super.setParent(U),this.show(this._isVisible),Z&&this.select()}rotate(U){var F,V,W;const{drawLayer:Z}=this.parent;let d;Q(this,NU)?(U=(U-this.rotation+360)%360,d=h(F=q,GU,rF).call(F,Q(this,DU).box,U)):d=h(V=q,GU,rF).call(V,this,U),Z.rotate(Q(this,Hl),U),Z.rotate(Q(this,Gl),U),Z.updateBox(Q(this,Hl),d),Z.updateBox(Q(this,Gl),h(W=q,GU,rF).call(W,Q(this,iU).box,U))}render(){if(this.div)return this.div;const U=super.render();Q(this,E0)&&(U.setAttribute("aria-label",Q(this,E0)),U.setAttribute("role","mark")),Q(this,NU)?U.classList.add("free"):this.div.addEventListener("keydown",Q(this,cc),{signal:this._uiManager._signal});const Z=a(this,nF,document.createElement("div"));U.append(Z),Z.setAttribute("aria-hidden","true"),Z.className="internal",Z.style.clipPath=Q(this,bF);const[d,F]=this.parentDimensions;return this.setDims(this.width*d,this.height*F),CW(this,Q(this,nF),["pointerover","pointerleave"]),this.enableEditing(),U}pointerover(){this.parent.drawLayer.addClass(Q(this,Gl),"hovered")}pointerleave(){this.parent.drawLayer.removeClass(Q(this,Gl),"hovered")}_moveCaret(U){switch(this.parent.unselect(this),U){case 0:case 2:h(this,g,pW).call(this,!0);break;case 1:case 3:h(this,g,pW).call(this,!1);break}}select(){var U,Z;super.select(),Q(this,Gl)&&((U=this.parent)==null||U.drawLayer.removeClass(Q(this,Gl),"hovered"),(Z=this.parent)==null||Z.drawLayer.addClass(Q(this,Gl),"selected"))}unselect(){var U;super.unselect(),Q(this,Gl)&&((U=this.parent)==null||U.drawLayer.removeClass(Q(this,Gl),"selected"),Q(this,NU)||h(this,g,pW).call(this,!1))}get _mustFixPosition(){return!Q(this,NU)}show(U=this._isVisible){super.show(U),this.parent&&(this.parent.drawLayer.show(Q(this,Hl),U),this.parent.drawLayer.show(Q(this,Gl),U))}static startHighlighting(U,Z,{target:d,x:F,y:V}){const{x:W,y:c,width:t,height:N}=d.getBoundingClientRect(),s=G=>{h(this,GU,ns).call(this,U,G)},b=U._signal,n={capture:!0,passive:!1,signal:b},m=G=>{G.preventDefault(),G.stopPropagation()},M=G=>{d.removeEventListener("pointermove",s),window.removeEventListener("blur",M),window.removeEventListener("pointerup",M),window.removeEventListener("pointerdown",m,n),window.removeEventListener("contextmenu",UU),h(this,GU,as).call(this,U,G)};window.addEventListener("blur",M,{signal:b}),window.addEventListener("pointerup",M,{signal:b}),window.addEventListener("pointerdown",m,n),window.addEventListener("contextmenu",UU,{signal:b}),d.addEventListener("pointermove",s,{signal:b}),this._freeHighlight=new jW({x:F,y:V},[W,c,t,N],U.scale,this._defaultThickness/2,Z,.001),{id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=U.drawLayer.highlight(this._freeHighlight,this._defaultColor,this._defaultOpacity,!0)}static deserialize(U,Z,d){var M;const F=super.deserialize(U,Z,d),{rect:[V,W,c,t],color:N,quadPoints:s}=U;F.color=k.makeHexColor(...N),a(F,aF,U.opacity);const[b,n]=F.pageDimensions;F.width=(c-V)/b,F.height=(t-W)/n;const m=a(F,Rd,[]);for(let G=0;G<s.length;G+=8)m.push({x:(s[4]-c)/b,y:(t-(1-s[G+5]))/n,width:(s[G+2]-s[G])/b,height:(s[G+5]-s[G+1])/n});return h(M=F,g,Bt).call(M),F}serialize(U=!1){if(this.isEmpty()||U)return null;const Z=this.getRect(0,0),d=$._colorManager.convert(this.color);return{annotationType:v.HIGHLIGHT,color:d,opacity:Q(this,aF),thickness:Q(this,AU),quadPoints:h(this,g,ss).call(this),outlines:h(this,g,bs).call(this,Z),pageIndex:this.pageIndex,rect:Z,rotation:h(this,g,dQ).call(this),structTreeParentId:this._structTreeParentId}}static canCreateNewEmptyEditor(){return!1}};o0=new WeakMap,IV=new WeakMap,Rd=new WeakMap,bF=new WeakMap,D0=new WeakMap,iU=new WeakMap,EV=new WeakMap,CV=new WeakMap,nF=new WeakMap,DU=new WeakMap,Hl=new WeakMap,NU=new WeakMap,cc=new WeakMap,I0=new WeakMap,aF=new WeakMap,Gl=new WeakMap,E0=new WeakMap,AU=new WeakMap,wV=new WeakMap,g=new WeakSet,Bt=function(){const U=new LR(Q(this,Rd),.001);a(this,DU,U.getOutlines()),{x:this.x,y:this.y,width:this.width,height:this.height}=Q(this,DU).box;const Z=new LR(Q(this,Rd),.0025,.001,this._uiManager.direction==="ltr");a(this,iU,Z.getOutlines());const{lastPoint:d}=Q(this,iU).box;a(this,I0,[(d[0]-this.x)/this.width,(d[1]-this.y)/this.height])},et=function({highlightOutlines:U,highlightId:Z,clipPathId:d}){var s,b;if(a(this,DU,U),a(this,iU,U.getNewOutline(Q(this,AU)/2+1.5,.0025)),Z>=0)a(this,Hl,Z),a(this,bF,d),this.parent.drawLayer.finalizeLine(Z,U),a(this,Gl,this.parent.drawLayer.highlightOutline(Q(this,iU)));else if(this.parent){const n=this.parent.viewport.rotation;this.parent.drawLayer.updateLine(Q(this,Hl),U),this.parent.drawLayer.updateBox(Q(this,Hl),h(s=q,GU,rF).call(s,Q(this,DU).box,(n-this.rotation+360)%360)),this.parent.drawLayer.updateLine(Q(this,Gl),Q(this,iU)),this.parent.drawLayer.updateBox(Q(this,Gl),h(b=q,GU,rF).call(b,Q(this,iU).box,n))}const{x:V,y:W,width:c,height:t}=U.box;switch(this.rotation){case 0:this.x=V,this.y=W,this.width=c,this.height=t;break;case 90:{const[n,m]=this.parentDimensions;this.x=W,this.y=1-V,this.width=c*m/n,this.height=t*n/m;break}case 180:this.x=1-V,this.y=1-W,this.width=c,this.height=t;break;case 270:{const[n,m]=this.parentDimensions;this.x=1-W,this.y=V,this.width=c*m/n,this.height=t*n/m;break}}const{lastPoint:N}=Q(this,iU).box;a(this,I0,[(N[0]-V)/c,(N[1]-W)/t])},cs=function(U){const Z=F=>{var V,W;this.color=F,(V=this.parent)==null||V.drawLayer.changeColor(Q(this,Hl),F),(W=Q(this,D0))==null||W.updateColor(F)},d=this.color;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.HIGHLIGHT_COLOR,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"color_changed",color:this._uiManager.highlightColorNames.get(U)},!0)},ts=function(U){const Z=Q(this,AU),d=F=>{a(this,AU,F),h(this,g,Rs).call(this,F)};this.addCommands({cmd:d.bind(this,U),undo:d.bind(this,Z),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0}),this._reportTelemetry({action:"thickness_changed",thickness:U},!0)},Rs=function(U){if(!Q(this,NU))return;h(this,g,et).call(this,{highlightOutlines:Q(this,DU).getNewOutline(U/2)}),this.fixAndSetPosition();const[Z,d]=this.parentDimensions;this.setDims(this.width*Z,this.height*d)},pt=function(){Q(this,Hl)===null||!this.parent||(this.parent.drawLayer.remove(Q(this,Hl)),a(this,Hl,null),this.parent.drawLayer.remove(Q(this,Gl)),a(this,Gl,null))},ZQ=function(U=this.parent){Q(this,Hl)===null&&({id:ZU(this,Hl)._,clipPathId:ZU(this,bF)._}=U.drawLayer.highlight(Q(this,DU),this.color,Q(this,aF)),a(this,Gl,U.drawLayer.highlightOutline(Q(this,iU))),Q(this,nF)&&(Q(this,nF).style.clipPath=Q(this,bF)))},GU=new WeakSet,rF=function({x:U,y:Z,width:d,height:F},V){switch(V){case 90:return{x:1-Z-F,y:U,width:F,height:d};case 180:return{x:1-U-d,y:1-Z-F,width:d,height:F};case 270:return{x:Z,y:1-U-d,width:F,height:d}}return{x:U,y:Z,width:d,height:F}},Ns=function(U){q._keyboardManager.exec(this,U)},pW=function(U){if(!Q(this,o0))return;const Z=window.getSelection();U?Z.setPosition(Q(this,o0),Q(this,IV)):Z.setPosition(Q(this,EV),Q(this,CV))},dQ=function(){return Q(this,NU)?this.rotation:0},ss=function(){if(Q(this,NU))return null;const[U,Z]=this.pageDimensions,[d,F]=this.pageTranslation,V=Q(this,Rd),W=new Float32Array(V.length*8);let c=0;for(const{x:t,y:N,width:s,height:b}of V){const n=t*U+d,m=(1-N-b)*Z+F;W[c]=W[c+4]=n,W[c+1]=W[c+3]=m,W[c+2]=W[c+6]=n+s*U,W[c+5]=W[c+7]=m+b*Z,c+=8}return W},bs=function(U){return Q(this,DU).serialize(U,h(this,g,dQ).call(this))},ns=function(U,Z){this._freeHighlight.add(Z)&&U.drawLayer.updatePath(this._freeHighlightId,this._freeHighlight)},as=function(U,Z){this._freeHighlight.isEmpty()?U.drawLayer.removeFreeHighlight(this._freeHighlightId):U.createAndAddNewEditor(Z,!1,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:"main_toolbar"}),this._freeHighlightId=-1,this._freeHighlight=null,this._freeHighlightClipId=""},i(q,GU),j(q,"_defaultColor",null),j(q,"_defaultOpacity",1),j(q,"_defaultThickness",12),j(q,"_l10nPromise"),j(q,"_type","highlight"),j(q,"_editorType",v.HIGHLIGHT),j(q,"_freeHighlightId",-1),j(q,"_freeHighlight",null),j(q,"_freeHighlightClipId","");let rW=q;var hF,mF,xV,jV,OV,iF,_U,zZ,MU,MF,JF,LZ,GF,TF,Nd,z,hs,ms,is,Ms,yt,Js,zt,Gs,Ts,Ss,Ys,Xs,Yd,Lt,uW,yW,gF,kt,zW,gZ,Bs,ot,es,ps,Dt,LW,FQ;const Rl=class Rl extends ${constructor(U){super({...U,name:"inkEditor"});i(this,z);i(this,hF,0);i(this,mF,0);i(this,xV,this.canvasPointermove.bind(this));i(this,jV,this.canvasPointerleave.bind(this));i(this,OV,this.canvasPointerup.bind(this));i(this,iF,this.canvasPointerdown.bind(this));i(this,_U,null);i(this,zZ,new Path2D);i(this,MU,!1);i(this,MF,!1);i(this,JF,!1);i(this,LZ,null);i(this,GF,0);i(this,TF,0);i(this,Nd,null);this.color=U.color||null,this.thickness=U.thickness||null,this.opacity=U.opacity||null,this.paths=[],this.bezierPath2D=[],this.allRawPaths=[],this.currentPath=[],this.scaleFactor=1,this.translationX=this.translationY=0,this.x=0,this.y=0,this._willKeepAspectRatio=!0}static initialize(U,Z){$.initialize(U,Z)}static updateDefaultParams(U,Z){switch(U){case C.INK_THICKNESS:Rl._defaultThickness=Z;break;case C.INK_COLOR:Rl._defaultColor=Z;break;case C.INK_OPACITY:Rl._defaultOpacity=Z/100;break}}updateParams(U,Z){switch(U){case C.INK_THICKNESS:h(this,z,hs).call(this,Z);break;case C.INK_COLOR:h(this,z,ms).call(this,Z);break;case C.INK_OPACITY:h(this,z,is).call(this,Z);break}}static get defaultPropertiesToUpdate(){return[[C.INK_THICKNESS,Rl._defaultThickness],[C.INK_COLOR,Rl._defaultColor||$._defaultLineColor],[C.INK_OPACITY,Math.round(Rl._defaultOpacity*100)]]}get propertiesToUpdate(){return[[C.INK_THICKNESS,this.thickness||Rl._defaultThickness],[C.INK_COLOR,this.color||Rl._defaultColor||$._defaultLineColor],[C.INK_OPACITY,Math.round(100*(this.opacity??Rl._defaultOpacity))]]}rebuild(){this.parent&&(super.rebuild(),this.div!==null&&(this.canvas||(h(this,z,uW).call(this),h(this,z,yW).call(this)),this.isAttachedToDOM||(this.parent.add(this),h(this,z,gF).call(this)),h(this,z,FQ).call(this)))}remove(){var U;this.canvas!==null&&(this.isEmpty()||this.commit(),this.canvas.width=this.canvas.height=0,this.canvas.remove(),this.canvas=null,Q(this,_U)&&(clearTimeout(Q(this,_U)),a(this,_U,null)),(U=Q(this,LZ))==null||U.disconnect(),a(this,LZ,null),super.remove())}setParent(U){!this.parent&&U?this._uiManager.removeShouldRescale(this):this.parent&&U===null&&this._uiManager.addShouldRescale(this),super.setParent(U)}onScaleChanging(){const[U,Z]=this.parentDimensions,d=this.width*U,F=this.height*Z;this.setDimensions(d,F)}enableEditMode(){Q(this,MU)||this.canvas===null||(super.enableEditMode(),this._isDraggable=!1,this.canvas.addEventListener("pointerdown",Q(this,iF),{signal:this._uiManager._signal}))}disableEditMode(){!this.isInEditMode()||this.canvas===null||(super.disableEditMode(),this._isDraggable=!this.isEmpty(),this.div.classList.remove("editing"),this.canvas.removeEventListener("pointerdown",Q(this,iF)))}onceAdded(){this._isDraggable=!this.isEmpty()}isEmpty(){return this.paths.length===0||this.paths.length===1&&this.paths[0].length===0}commit(){Q(this,MU)||(super.commit(),this.isEditing=!1,this.disableEditMode(),this.setInForeground(),a(this,MU,!0),this.div.classList.add("disabled"),h(this,z,FQ).call(this,!0),this.select(),this.parent.addInkEditorIfNeeded(!0),this.moveInDOM(),this.div.focus({preventScroll:!0}))}focusin(U){this._focusEventsAllowed&&(super.focusin(U),this.enableEditMode())}canvasPointerdown(U){U.button!==0||!this.isInEditMode()||Q(this,MU)||(this.setInForeground(),U.preventDefault(),this.div.contains(document.activeElement)||this.div.focus({preventScroll:!0}),h(this,z,Js).call(this,U.offsetX,U.offsetY))}canvasPointermove(U){U.preventDefault(),h(this,z,zt).call(this,U.offsetX,U.offsetY)}canvasPointerup(U){U.preventDefault(),h(this,z,Lt).call(this,U)}canvasPointerleave(U){h(this,z,Lt).call(this,U)}get isResizable(){return!this.isEmpty()&&Q(this,MU)}render(){if(this.div)return this.div;let U,Z;this.width&&(U=this.x,Z=this.y),super.render(),this.div.setAttribute("data-l10n-id","pdfjs-ink");const[d,F,V,W]=h(this,z,Ms).call(this);if(this.setAt(d,F,0,0),this.setDims(V,W),h(this,z,uW).call(this),this.width){const[c,t]=this.parentDimensions;this.setAspectRatio(this.width*c,this.height*t),this.setAt(U*c,Z*t,this.width*c,this.height*t),a(this,JF,!0),h(this,z,gF).call(this),this.setDims(this.width*c,this.height*t),h(this,z,Yd).call(this),this.div.classList.add("disabled")}else this.div.classList.add("editing"),this.enableEditMode();return h(this,z,yW).call(this),this.div}setDimensions(U,Z){const d=Math.round(U),F=Math.round(Z);if(Q(this,GF)===d&&Q(this,TF)===F)return;a(this,GF,d),a(this,TF,F),this.canvas.style.visibility="hidden";const[V,W]=this.parentDimensions;this.width=U/V,this.height=Z/W,this.fixAndSetPosition(),Q(this,MU)&&h(this,z,kt).call(this,U,Z),h(this,z,gF).call(this),h(this,z,Yd).call(this),this.canvas.style.visibility="visible",this.fixDims()}static deserialize(U,Z,d){var G,J,T;if(U instanceof vN)return null;const F=super.deserialize(U,Z,d);F.thickness=U.thickness,F.color=k.makeHexColor(...U.color),F.opacity=U.opacity;const[V,W]=F.pageDimensions,c=F.width*V,t=F.height*W,N=F.parentScale,s=U.thickness/2;a(F,MU,!0),a(F,GF,Math.round(c)),a(F,TF,Math.round(t));const{paths:b,rect:n,rotation:m}=U;for(let{bezier:S}of b){S=h(G=Rl,gZ,es).call(G,S,n,m);const Y=[];F.paths.push(Y);let e=N*(S[0]-s),X=N*(S[1]-s);for(let p=2,u=S.length;p<u;p+=6){const I=N*(S[p]-s),D=N*(S[p+1]-s),A=N*(S[p+2]-s),K=N*(S[p+3]-s),ll=N*(S[p+4]-s),_=N*(S[p+5]-s);Y.push([[e,X],[I,D],[A,K],[ll,_]]),e=ll,X=_}const B=h(this,gZ,Bs).call(this,Y);F.bezierPath2D.push(B)}const M=h(J=F,z,Dt).call(J);return a(F,mF,Math.max($.MIN_SIZE,M[2]-M[0])),a(F,hF,Math.max($.MIN_SIZE,M[3]-M[1])),h(T=F,z,kt).call(T,c,t),F}serialize(){if(this.isEmpty())return null;const U=this.getRect(0,0),Z=$._colorManager.convert(this.ctx.strokeStyle);return{annotationType:v.INK,color:Z,thickness:this.thickness,opacity:this.opacity,paths:h(this,z,ps).call(this,this.scaleFactor/this.parentScale,this.translationX,this.translationY,U),pageIndex:this.pageIndex,rect:U,rotation:this.rotation,structTreeParentId:this._structTreeParentId}}};hF=new WeakMap,mF=new WeakMap,xV=new WeakMap,jV=new WeakMap,OV=new WeakMap,iF=new WeakMap,_U=new WeakMap,zZ=new WeakMap,MU=new WeakMap,MF=new WeakMap,JF=new WeakMap,LZ=new WeakMap,GF=new WeakMap,TF=new WeakMap,Nd=new WeakMap,z=new WeakSet,hs=function(U){const Z=F=>{this.thickness=F,h(this,z,FQ).call(this)},d=this.thickness;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.INK_THICKNESS,overwriteIfSameType:!0,keepUndo:!0})},ms=function(U){const Z=F=>{this.color=F,h(this,z,Yd).call(this)},d=this.color;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.INK_COLOR,overwriteIfSameType:!0,keepUndo:!0})},is=function(U){const Z=F=>{this.opacity=F,h(this,z,Yd).call(this)};U/=100;const d=this.opacity;this.addCommands({cmd:Z.bind(this,U),undo:Z.bind(this,d),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:!0,type:C.INK_OPACITY,overwriteIfSameType:!0,keepUndo:!0})},Ms=function(){const{parentRotation:U,parentDimensions:[Z,d]}=this;switch(U){case 90:return[0,d,d,Z];case 180:return[Z,d,Z,d];case 270:return[Z,0,d,Z];default:return[0,0,Z,d]}},yt=function(){const{ctx:U,color:Z,opacity:d,thickness:F,parentScale:V,scaleFactor:W}=this;U.lineWidth=F*V/W,U.lineCap="round",U.lineJoin="round",U.miterLimit=10,U.strokeStyle=`${Z}${ub(d)}`},Js=function(U,Z){const d=this._uiManager._signal;this.canvas.addEventListener("contextmenu",UU,{signal:d}),this.canvas.addEventListener("pointerleave",Q(this,jV),{signal:d}),this.canvas.addEventListener("pointermove",Q(this,xV),{signal:d}),this.canvas.addEventListener("pointerup",Q(this,OV),{signal:d}),this.canvas.removeEventListener("pointerdown",Q(this,iF)),this.isEditing=!0,Q(this,JF)||(a(this,JF,!0),h(this,z,gF).call(this),this.thickness||(this.thickness=Rl._defaultThickness),this.color||(this.color=Rl._defaultColor||$._defaultLineColor),this.opacity??(this.opacity=Rl._defaultOpacity)),this.currentPath.push([U,Z]),a(this,MF,!1),h(this,z,yt).call(this),a(this,Nd,()=>{h(this,z,Ss).call(this),Q(this,Nd)&&window.requestAnimationFrame(Q(this,Nd))}),window.requestAnimationFrame(Q(this,Nd))},zt=function(U,Z){const[d,F]=this.currentPath.at(-1);if(this.currentPath.length>1&&U===d&&Z===F)return;const V=this.currentPath;let W=Q(this,zZ);if(V.push([U,Z]),a(this,MF,!0),V.length<=2){W.moveTo(...V[0]),W.lineTo(U,Z);return}V.length===3&&(a(this,zZ,W=new Path2D),W.moveTo(...V[0])),h(this,z,Ys).call(this,W,...V.at(-3),...V.at(-2),U,Z)},Gs=function(){if(this.currentPath.length===0)return;const U=this.currentPath.at(-1);Q(this,zZ).lineTo(...U)},Ts=function(U,Z){a(this,Nd,null),U=Math.min(Math.max(U,0),this.canvas.width),Z=Math.min(Math.max(Z,0),this.canvas.height),h(this,z,zt).call(this,U,Z),h(this,z,Gs).call(this);let d;if(this.currentPath.length!==1)d=h(this,z,Xs).call(this);else{const t=[U,Z];d=[[t,t.slice(),t.slice(),t]]}const F=Q(this,zZ),V=this.currentPath;this.currentPath=[],a(this,zZ,new Path2D);const W=()=>{this.allRawPaths.push(V),this.paths.push(d),this.bezierPath2D.push(F),this._uiManager.rebuild(this)},c=()=>{this.allRawPaths.pop(),this.paths.pop(),this.bezierPath2D.pop(),this.paths.length===0?this.remove():(this.canvas||(h(this,z,uW).call(this),h(this,z,yW).call(this)),h(this,z,FQ).call(this))};this.addCommands({cmd:W,undo:c,mustExec:!0})},Ss=function(){if(!Q(this,MF))return;a(this,MF,!1);const U=Math.ceil(this.thickness*this.parentScale),Z=this.currentPath.slice(-3),d=Z.map(W=>W[0]),F=Z.map(W=>W[1]);Math.min(...d)-U,Math.max(...d)+U,Math.min(...F)-U,Math.max(...F)+U;const{ctx:V}=this;V.save(),V.clearRect(0,0,this.canvas.width,this.canvas.height);for(const W of this.bezierPath2D)V.stroke(W);V.stroke(Q(this,zZ)),V.restore()},Ys=function(U,Z,d,F,V,W,c){const t=(Z+F)/2,N=(d+V)/2,s=(F+W)/2,b=(V+c)/2;U.bezierCurveTo(t+2*(F-t)/3,N+2*(V-N)/3,s+2*(F-s)/3,b+2*(V-b)/3,s,b)},Xs=function(){const U=this.currentPath;if(U.length<=2)return[[U[0],U[0],U.at(-1),U.at(-1)]];const Z=[];let d,[F,V]=U[0];for(d=1;d<U.length-2;d++){const[n,m]=U[d],[M,G]=U[d+1],J=(n+M)/2,T=(m+G)/2,S=[F+2*(n-F)/3,V+2*(m-V)/3],Y=[J+2*(n-J)/3,T+2*(m-T)/3];Z.push([[F,V],S,Y,[J,T]]),[F,V]=[J,T]}const[W,c]=U[d],[t,N]=U[d+1],s=[F+2*(W-F)/3,V+2*(c-V)/3],b=[t+2*(W-t)/3,N+2*(c-N)/3];return Z.push([[F,V],s,b,[t,N]]),Z},Yd=function(){if(this.isEmpty()){h(this,z,zW).call(this);return}h(this,z,yt).call(this);const{canvas:U,ctx:Z}=this;Z.setTransform(1,0,0,1,0,0),Z.clearRect(0,0,U.width,U.height),h(this,z,zW).call(this);for(const d of this.bezierPath2D)Z.stroke(d)},Lt=function(U){this.canvas.removeEventListener("pointerleave",Q(this,jV)),this.canvas.removeEventListener("pointermove",Q(this,xV)),this.canvas.removeEventListener("pointerup",Q(this,OV)),this.canvas.addEventListener("pointerdown",Q(this,iF),{signal:this._uiManager._signal}),Q(this,_U)&&clearTimeout(Q(this,_U)),a(this,_U,setTimeout(()=>{a(this,_U,null),this.canvas.removeEventListener("contextmenu",UU)},10)),h(this,z,Ts).call(this,U.offsetX,U.offsetY),this.addToAnnotationStorage(),this.setInBackground()},uW=function(){this.canvas=document.createElement("canvas"),this.canvas.width=this.canvas.height=0,this.canvas.className="inkEditorCanvas",this.canvas.setAttribute("data-l10n-id","pdfjs-ink-canvas"),this.div.append(this.canvas),this.ctx=this.canvas.getContext("2d")},yW=function(){a(this,LZ,new ResizeObserver(U=>{const Z=U[0].contentRect;Z.width&&Z.height&&this.setDimensions(Z.width,Z.height)})),Q(this,LZ).observe(this.div),this._uiManager._signal.addEventListener("abort",()=>{var U;(U=Q(this,LZ))==null||U.disconnect(),a(this,LZ,null)},{once:!0})},gF=function(){if(!Q(this,JF))return;const[U,Z]=this.parentDimensions;this.canvas.width=Math.ceil(this.width*U),this.canvas.height=Math.ceil(this.height*Z),h(this,z,zW).call(this)},kt=function(U,Z){const d=h(this,z,LW).call(this),F=(U-d)/Q(this,mF),V=(Z-d)/Q(this,hF);this.scaleFactor=Math.min(F,V)},zW=function(){const U=h(this,z,LW).call(this)/2;this.ctx.setTransform(this.scaleFactor,0,0,this.scaleFactor,this.translationX*this.scaleFactor+U,this.translationY*this.scaleFactor+U)},gZ=new WeakSet,Bs=function(U){const Z=new Path2D;for(let d=0,F=U.length;d<F;d++){const[V,W,c,t]=U[d];d===0&&Z.moveTo(...V),Z.bezierCurveTo(W[0],W[1],c[0],c[1],t[0],t[1])}return Z},ot=function(U,Z,d){const[F,V,W,c]=Z;switch(d){case 0:for(let t=0,N=U.length;t<N;t+=2)U[t]+=F,U[t+1]=c-U[t+1];break;case 90:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=U[t+1]+F,U[t+1]=s+V}break;case 180:for(let t=0,N=U.length;t<N;t+=2)U[t]=W-U[t],U[t+1]+=V;break;case 270:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=W-U[t+1],U[t+1]=c-s}break;default:throw new Error("Invalid rotation")}return U},es=function(U,Z,d){const[F,V,W,c]=Z;switch(d){case 0:for(let t=0,N=U.length;t<N;t+=2)U[t]-=F,U[t+1]=c-U[t+1];break;case 90:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=U[t+1]-V,U[t+1]=s-F}break;case 180:for(let t=0,N=U.length;t<N;t+=2)U[t]=W-U[t],U[t+1]-=V;break;case 270:for(let t=0,N=U.length;t<N;t+=2){const s=U[t];U[t]=c-U[t+1],U[t+1]=W-s}break;default:throw new Error("Invalid rotation")}return U},ps=function(U,Z,d,F){var N,s;const V=[],W=this.thickness/2,c=U*Z+W,t=U*d+W;for(const b of this.paths){const n=[],m=[];for(let M=0,G=b.length;M<G;M++){const[J,T,S,Y]=b[M];if(J[0]===Y[0]&&J[1]===Y[1]&&G===1){const K=U*J[0]+c,ll=U*J[1]+t;n.push(K,ll),m.push(K,ll);break}const e=U*J[0]+c,X=U*J[1]+t,B=U*T[0]+c,p=U*T[1]+t,u=U*S[0]+c,I=U*S[1]+t,D=U*Y[0]+c,A=U*Y[1]+t;M===0&&(n.push(e,X),m.push(e,X)),n.push(B,p,u,I,D,A),m.push(B,p),M===G-1&&m.push(D,A)}V.push({bezier:h(N=Rl,gZ,ot).call(N,n,F,this.rotation),points:h(s=Rl,gZ,ot).call(s,m,F,this.rotation)})}return V},Dt=function(){let U=1/0,Z=-1/0,d=1/0,F=-1/0;for(const V of this.paths)for(const[W,c,t,N]of V){const s=k.bezierBoundingBox(...W,...c,...t,...N);U=Math.min(U,s[0]),d=Math.min(d,s[1]),Z=Math.max(Z,s[2]),F=Math.max(F,s[3])}return[U,d,Z,F]},LW=function(){return Q(this,MU)?Math.ceil(this.thickness*this.parentScale):0},FQ=function(U=!1){if(this.isEmpty())return;if(!Q(this,MU)){h(this,z,Yd).call(this);return}const Z=h(this,z,Dt).call(this),d=h(this,z,LW).call(this);a(this,mF,Math.max($.MIN_SIZE,Z[2]-Z[0])),a(this,hF,Math.max($.MIN_SIZE,Z[3]-Z[1]));const F=Math.ceil(d+Q(this,mF)*this.scaleFactor),V=Math.ceil(d+Q(this,hF)*this.scaleFactor),[W,c]=this.parentDimensions;this.width=F/W,this.height=V/c,this.setAspectRatio(F,V);const t=this.translationX,N=this.translationY;this.translationX=-Z[0],this.translationY=-Z[1],h(this,z,gF).call(this),h(this,z,Yd).call(this),a(this,GF,F),a(this,TF,V),this.setDims(F,V);const s=U?d/this.scaleFactor/2:0;this.translate(t-this.translationX-s,N-this.translationY-s)},i(Rl,gZ),j(Rl,"_defaultColor",null),j(Rl,"_defaultOpacity",1),j(Rl,"_defaultThickness",1),j(Rl,"_type","ink"),j(Rl,"_editorType",v.INK);let ut=Rl;var kl,ol,sd,kZ,bd,C0,qU,rV,oZ,$U,IU,gV,f,QQ,VQ,kW,Et,us,ys,zs,Ct,oW,Ls;const RQ=class RQ extends ${constructor(U){super({...U,name:"stampEditor"});i(this,f);i(this,kl,null);i(this,ol,null);i(this,sd,null);i(this,kZ,null);i(this,bd,null);i(this,C0,"");i(this,qU,null);i(this,rV,!1);i(this,oZ,null);i(this,$U,null);i(this,IU,!1);i(this,gV,!1);a(this,kZ,U.bitmapUrl),a(this,bd,U.bitmapFile)}static initialize(U,Z){$.initialize(U,Z)}static get supportedTypes(){return P(this,"supportedTypes",["apng","avif","bmp","gif","jpeg","png","svg+xml","webp","x-icon"].map(Z=>`image/${Z}`))}static get supportedTypesStr(){return P(this,"supportedTypesStr",this.supportedTypes.join(","))}static isHandlingMimeForPasting(U){return this.supportedTypes.includes(U)}static paste(U,Z){Z.pasteEditor(v.STAMP,{bitmapFile:U.getAsFile()})}remove(){var U,Z;Q(this,ol)&&(a(this,kl,null),this._uiManager.imageManager.deleteId(Q(this,ol)),(U=Q(this,qU))==null||U.remove(),a(this,qU,null),(Z=Q(this,oZ))==null||Z.disconnect(),a(this,oZ,null),Q(this,$U)&&(clearTimeout(Q(this,$U)),a(this,$U,null))),super.remove()}rebuild(){if(!this.parent){Q(this,ol)&&h(this,f,kW).call(this);return}super.rebuild(),this.div!==null&&(Q(this,ol)&&Q(this,qU)===null&&h(this,f,kW).call(this),this.isAttachedToDOM||this.parent.add(this))}onceAdded(){this._isDraggable=!0,this.div.focus()}isEmpty(){return!(Q(this,sd)||Q(this,kl)||Q(this,kZ)||Q(this,bd)||Q(this,ol))}get isResizable(){return!0}render(){if(this.div)return this.div;let U,Z;if(this.width&&(U=this.x,Z=this.y),super.render(),this.div.hidden=!0,this.addAltTextButton(),Q(this,kl)?h(this,f,Et).call(this):h(this,f,kW).call(this),this.width){const[d,F]=this.parentDimensions;this.setAt(U*d,Z*F,this.width*d,this.height*F)}return this.div}getImageForAltText(){return Q(this,qU)}static deserialize(U,Z,d){if(U instanceof PN)return null;const F=super.deserialize(U,Z,d),{rect:V,bitmapUrl:W,bitmapId:c,isSvg:t,accessibilityData:N}=U;c&&d.imageManager.isValidId(c)?a(F,ol,c):a(F,kZ,W),a(F,IU,t);const[s,b]=F.pageDimensions;return F.width=(V[2]-V[0])/s,F.height=(V[3]-V[1])/b,N&&(F.altTextData=N),F}serialize(U=!1,Z=null){if(this.isEmpty())return null;const d={annotationType:v.STAMP,bitmapId:Q(this,ol),pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:Q(this,IU),structTreeParentId:this._structTreeParentId};if(U)return d.bitmapUrl=h(this,f,oW).call(this,!0),d.accessibilityData=this.altTextData,d;const{decorative:F,altText:V}=this.altTextData;if(!F&&V&&(d.accessibilityData={type:"Figure",alt:V}),Z===null)return d;Z.stamps||(Z.stamps=new Map);const W=Q(this,IU)?(d.rect[2]-d.rect[0])*(d.rect[3]-d.rect[1]):null;if(!Z.stamps.has(Q(this,ol)))Z.stamps.set(Q(this,ol),{area:W,serialized:d}),d.bitmap=h(this,f,oW).call(this,!1);else if(Q(this,IU)){const c=Z.stamps.get(Q(this,ol));W>c.area&&(c.area=W,c.serialized.bitmap.close(),c.serialized.bitmap=h(this,f,oW).call(this,!1))}return d}};kl=new WeakMap,ol=new WeakMap,sd=new WeakMap,kZ=new WeakMap,bd=new WeakMap,C0=new WeakMap,qU=new WeakMap,rV=new WeakMap,oZ=new WeakMap,$U=new WeakMap,IU=new WeakMap,gV=new WeakMap,f=new WeakSet,QQ=function(U,Z=!1){if(!U){this.remove();return}a(this,kl,U.bitmap),Z||(a(this,ol,U.id),a(this,IU,U.isSvg)),U.file&&a(this,C0,U.file.name),h(this,f,Et).call(this)},VQ=function(){a(this,sd,null),this._uiManager.enableWaiting(!1),Q(this,qU)&&this.div.focus()},kW=function(){if(Q(this,ol)){this._uiManager.enableWaiting(!0),this._uiManager.imageManager.getFromId(Q(this,ol)).then(d=>h(this,f,QQ).call(this,d,!0)).finally(()=>h(this,f,VQ).call(this));return}if(Q(this,kZ)){const d=Q(this,kZ);a(this,kZ,null),this._uiManager.enableWaiting(!0),a(this,sd,this._uiManager.imageManager.getFromUrl(d).then(F=>h(this,f,QQ).call(this,F)).finally(()=>h(this,f,VQ).call(this)));return}if(Q(this,bd)){const d=Q(this,bd);a(this,bd,null),this._uiManager.enableWaiting(!0),a(this,sd,this._uiManager.imageManager.getFromFile(d).then(F=>h(this,f,QQ).call(this,F)).finally(()=>h(this,f,VQ).call(this)));return}const U=document.createElement("input");U.type="file",U.accept=RQ.supportedTypesStr;const Z=this._uiManager._signal;a(this,sd,new Promise(d=>{U.addEventListener("change",async()=>{if(!U.files||U.files.length===0)this.remove();else{this._uiManager.enableWaiting(!0);const F=await this._uiManager.imageManager.getFromFile(U.files[0]);h(this,f,QQ).call(this,F)}d()},{signal:Z}),U.addEventListener("cancel",()=>{this.remove(),d()},{signal:Z})}).finally(()=>h(this,f,VQ).call(this))),U.click()},Et=function(){const{div:U}=this;let{width:Z,height:d}=Q(this,kl);const[F,V]=this.pageDimensions,W=.75;if(this.width)Z=this.width*F,d=this.height*V;else if(Z>W*F||d>W*V){const s=Math.min(W*F/Z,W*V/d);Z*=s,d*=s}const[c,t]=this.parentDimensions;this.setDims(Z*c/F,d*t/V),this._uiManager.enableWaiting(!1);const N=a(this,qU,document.createElement("canvas"));U.append(N),U.hidden=!1,h(this,f,Ct).call(this,Z,d),h(this,f,Ls).call(this),Q(this,gV)||(this.parent.addUndoableEditor(this),a(this,gV,!0)),this._reportTelemetry({action:"inserted_image"}),Q(this,C0)&&N.setAttribute("aria-label",Q(this,C0))},us=function(U,Z){var W;const[d,F]=this.parentDimensions;this.width=U/d,this.height=Z/F,this.setDims(U,Z),(W=this._initialOptions)!=null&&W.isCentered?this.center():this.fixAndSetPosition(),this._initialOptions=null,Q(this,$U)!==null&&clearTimeout(Q(this,$U)),a(this,$U,setTimeout(()=>{a(this,$U,null),h(this,f,Ct).call(this,U,Z)},200))},ys=function(U,Z){const{width:d,height:F}=Q(this,kl);let V=d,W=F,c=Q(this,kl);for(;V>2*U||W>2*Z;){const t=V,N=W;V>2*U&&(V=V>=16384?Math.floor(V/2)-1:Math.ceil(V/2)),W>2*Z&&(W=W>=16384?Math.floor(W/2)-1:Math.ceil(W/2));const s=new OffscreenCanvas(V,W);s.getContext("2d").drawImage(c,0,0,t,N,0,0,V,W),c=s.transferToImageBitmap()}return c},zs=async function(U,Z,d){if(Q(this,rV)||(a(this,rV,!0),!await this._uiManager.isMLEnabledFor("altText")||this.hasAltText()))return;const W=new OffscreenCanvas(Z,d).getContext("2d",{willReadFrequently:!0});W.drawImage(U,0,0,U.width,U.height,0,0,Z,d);const c=await this._uiManager.mlGuess({service:"moz-image-to-text",request:{data:W.getImageData(0,0,Z,d).data,width:Z,height:d,channels:4}}),t=(c==null?void 0:c.output)||"";this.parent&&t&&!this.hasAltText()&&(this.altTextData={altText:t,decorative:!1})},Ct=function(U,Z){U=Math.ceil(U),Z=Math.ceil(Z);const d=Q(this,qU);if(!d||d.width===U&&d.height===Z)return;d.width=U,d.height=Z;const F=Q(this,IU)?Q(this,kl):h(this,f,ys).call(this,U,Z);h(this,f,zs).call(this,F,U,Z);const V=d.getContext("2d");V.filter=this._uiManager.hcmFilter,V.drawImage(F,0,0,F.width,F.height,0,0,U,Z)},oW=function(U){if(U){if(Q(this,IU)){const F=this._uiManager.imageManager.getSvgUrl(Q(this,ol));if(F)return F}const Z=document.createElement("canvas");return{width:Z.width,height:Z.height}=Q(this,kl),Z.getContext("2d").drawImage(Q(this,kl),0,0),Z.toDataURL()}if(Q(this,IU)){const[Z,d]=this.pageDimensions,F=Math.round(this.width*Z*md.PDF_TO_CSS_UNITS),V=Math.round(this.height*d*md.PDF_TO_CSS_UNITS),W=new OffscreenCanvas(F,V);return W.getContext("2d").drawImage(Q(this,kl),0,0,Q(this,kl).width,Q(this,kl).height,0,0,F,V),W.transferToImageBitmap()}return structuredClone(Q(this,kl))},Ls=function(){this._uiManager._signal&&(a(this,oZ,new ResizeObserver(U=>{const Z=U[0].contentRect;Z.width&&Z.height&&h(this,f,us).call(this,Z.width,Z.height)})),Q(this,oZ).observe(this.div),this._uiManager._signal.addEventListener("abort",()=>{var U;(U=Q(this,oZ))==null||U.disconnect(),a(this,oZ,null)},{once:!0}))},j(RQ,"_type","stamp"),j(RQ,"_editorType",v.STAMP);let It=RQ;var SF,w0,lZ,YF,DZ,IZ,EZ,sU,nd,x0,j0,Ol,o,ad,Dl,ks,xt,jt,Ot,DW;const TU=class TU{constructor({uiManager:l,pageIndex:U,div:Z,accessibilityManager:d,annotationLayer:F,drawLayer:V,textLayer:W,viewport:c,l10n:t}){i(this,Dl);i(this,SF);i(this,w0,!1);i(this,lZ,null);i(this,YF,null);i(this,DZ,null);i(this,IZ,null);i(this,EZ,null);i(this,sU,new Map);i(this,nd,!1);i(this,x0,!1);i(this,j0,!1);i(this,Ol,null);i(this,o);const N=[...Q(TU,ad).values()];if(!TU._initialized){TU._initialized=!0;for(const s of N)s.initialize(t,l)}l.registerEditorTypes(N),a(this,o,l),this.pageIndex=U,this.div=Z,a(this,SF,d),a(this,lZ,F),this.viewport=c,a(this,Ol,W),this.drawLayer=V,Q(this,o).addLayer(this)}get isEmpty(){return Q(this,sU).size===0}get isInvisible(){return this.isEmpty&&Q(this,o).getMode()===v.NONE}updateToolbar(l){Q(this,o).updateToolbar(l)}updateMode(l=Q(this,o).getMode()){switch(h(this,Dl,DW).call(this),l){case v.NONE:this.disableTextSelection(),this.togglePointerEvents(!1),this.toggleAnnotationLayerPointerEvents(!0),this.disableClick();return;case v.INK:this.addInkEditorIfNeeded(!1),this.disableTextSelection(),this.togglePointerEvents(!0),this.disableClick();break;case v.HIGHLIGHT:this.enableTextSelection(),this.togglePointerEvents(!1),this.disableClick();break;default:this.disableTextSelection(),this.togglePointerEvents(!0),this.enableClick()}this.toggleAnnotationLayerPointerEvents(!1);const{classList:U}=this.div;for(const Z of Q(TU,ad).values())U.toggle(`${Z._type}Editing`,l===Z._editorType);this.div.hidden=!1}hasTextLayer(l){var U;return l===((U=Q(this,Ol))==null?void 0:U.div)}addInkEditorIfNeeded(l){if(Q(this,o).getMode()!==v.INK)return;if(!l){for(const Z of Q(this,sU).values())if(Z.isEmpty()){Z.setInBackground();return}}this.createAndAddNewEditor({offsetX:0,offsetY:0},!1).setInBackground()}setEditingState(l){Q(this,o).setEditingState(l)}addCommands(l){Q(this,o).addCommands(l)}toggleDrawing(l=!1){this.div.classList.toggle("drawing",!l)}togglePointerEvents(l=!1){this.div.classList.toggle("disabled",!l)}toggleAnnotationLayerPointerEvents(l=!1){var U;(U=Q(this,lZ))==null||U.div.classList.toggle("disabled",!l)}enable(){this.div.tabIndex=0,this.togglePointerEvents(!0);const l=new Set;for(const Z of Q(this,sU).values())Z.enableEditing(),Z.show(!0),Z.annotationElementId&&(Q(this,o).removeChangedExistingAnnotation(Z),l.add(Z.annotationElementId));if(!Q(this,lZ))return;const U=Q(this,lZ).getEditableAnnotations();for(const Z of U){if(Z.hide(),Q(this,o).isDeletedAnnotationElement(Z.data.id)||l.has(Z.data.id))continue;const d=this.deserialize(Z);d&&(this.addOrRebuild(d),d.enableEditing())}}disable(){var d;a(this,j0,!0),this.div.tabIndex=-1,this.togglePointerEvents(!1);const l=new Map,U=new Map;for(const F of Q(this,sU).values())if(F.disableEditing(),!!F.annotationElementId){if(F.serialize()!==null){l.set(F.annotationElementId,F);continue}else U.set(F.annotationElementId,F);(d=this.getEditableAnnotation(F.annotationElementId))==null||d.show(),F.remove()}if(Q(this,lZ)){const F=Q(this,lZ).getEditableAnnotations();for(const V of F){const{id:W}=V.data;if(Q(this,o).isDeletedAnnotationElement(W))continue;let c=U.get(W);if(c){c.resetAnnotationElement(V),c.show(!1),V.show();continue}c=l.get(W),c&&(Q(this,o).addChangedExistingAnnotation(c),c.renderAnnotationElement(V),c.show(!1)),V.show()}}h(this,Dl,DW).call(this),this.isEmpty&&(this.div.hidden=!0);const{classList:Z}=this.div;for(const F of Q(TU,ad).values())Z.remove(`${F._type}Editing`);this.disableTextSelection(),this.toggleAnnotationLayerPointerEvents(!0),a(this,j0,!1)}getEditableAnnotation(l){var U;return((U=Q(this,lZ))==null?void 0:U.getEditableAnnotation(l))||null}setActiveEditor(l){Q(this,o).getActive()!==l&&Q(this,o).setActiveEditor(l)}enableTextSelection(){var l;this.div.tabIndex=-1,(l=Q(this,Ol))!=null&&l.div&&!Q(this,IZ)&&(a(this,IZ,h(this,Dl,ks).bind(this)),Q(this,Ol).div.addEventListener("pointerdown",Q(this,IZ),{signal:Q(this,o)._signal}),Q(this,Ol).div.classList.add("highlighting"))}disableTextSelection(){var l;this.div.tabIndex=0,(l=Q(this,Ol))!=null&&l.div&&Q(this,IZ)&&(Q(this,Ol).div.removeEventListener("pointerdown",Q(this,IZ)),a(this,IZ,null),Q(this,Ol).div.classList.remove("highlighting"))}enableClick(){if(Q(this,DZ))return;const l=Q(this,o)._signal;a(this,DZ,this.pointerdown.bind(this)),a(this,YF,this.pointerup.bind(this)),this.div.addEventListener("pointerdown",Q(this,DZ),{signal:l}),this.div.addEventListener("pointerup",Q(this,YF),{signal:l})}disableClick(){Q(this,DZ)&&(this.div.removeEventListener("pointerdown",Q(this,DZ)),this.div.removeEventListener("pointerup",Q(this,YF)),a(this,DZ,null),a(this,YF,null))}attach(l){Q(this,sU).set(l.id,l);const{annotationElementId:U}=l;U&&Q(this,o).isDeletedAnnotationElement(U)&&Q(this,o).removeDeletedAnnotationElement(l)}detach(l){var U;Q(this,sU).delete(l.id),(U=Q(this,SF))==null||U.removePointerInTextLayer(l.contentDiv),!Q(this,j0)&&l.annotationElementId&&Q(this,o).addDeletedAnnotationElement(l)}remove(l){this.detach(l),Q(this,o).removeEditor(l),l.div.remove(),l.isAttachedToDOM=!1,Q(this,x0)||this.addInkEditorIfNeeded(!1)}changeParent(l){var U;l.parent!==this&&(l.parent&&l.annotationElementId&&(Q(this,o).addDeletedAnnotationElement(l.annotationElementId),$.deleteAnnotationElement(l),l.annotationElementId=null),this.attach(l),(U=l.parent)==null||U.detach(l),l.setParent(this),l.div&&l.isAttachedToDOM&&(l.div.remove(),this.div.append(l.div)))}add(l){if(!(l.parent===this&&l.isAttachedToDOM)){if(this.changeParent(l),Q(this,o).addEditor(l),this.attach(l),!l.isAttachedToDOM){const U=l.render();this.div.append(U),l.isAttachedToDOM=!0}l.fixAndSetPosition(),l.onceAdded(),Q(this,o).addToAnnotationStorage(l),l._reportTelemetry(l.telemetryInitialData)}}moveEditorInDOM(l){var Z;if(!l.isAttachedToDOM)return;const{activeElement:U}=document;l.div.contains(U)&&!Q(this,EZ)&&(l._focusEventsAllowed=!1,a(this,EZ,setTimeout(()=>{a(this,EZ,null),l.div.contains(document.activeElement)?l._focusEventsAllowed=!0:(l.div.addEventListener("focusin",()=>{l._focusEventsAllowed=!0},{once:!0,signal:Q(this,o)._signal}),U.focus())},0))),l._structTreeParentId=(Z=Q(this,SF))==null?void 0:Z.moveElementInDOM(this.div,l.div,l.contentDiv,!0)}addOrRebuild(l){l.needsToBeRebuilt()?(l.parent||(l.parent=this),l.rebuild(),l.show()):this.add(l)}addUndoableEditor(l){const U=()=>l._uiManager.rebuild(l),Z=()=>{l.remove()};this.addCommands({cmd:U,undo:Z,mustExec:!1})}getNextId(){return Q(this,o).getId()}get _signal(){return Q(this,o)._signal}canCreateNewEmptyEditor(){var l;return(l=Q(this,Dl,xt))==null?void 0:l.canCreateNewEmptyEditor()}pasteEditor(l,U){Q(this,o).updateToolbar(l),Q(this,o).updateMode(l);const{offsetX:Z,offsetY:d}=h(this,Dl,Ot).call(this),F=this.getNextId(),V=h(this,Dl,jt).call(this,{parent:this,id:F,x:Z,y:d,uiManager:Q(this,o),isCentered:!0,...U});V&&this.add(V)}deserialize(l){var U;return((U=Q(TU,ad).get(l.annotationType??l.annotationEditorType))==null?void 0:U.deserialize(l,this,Q(this,o)))||null}createAndAddNewEditor(l,U,Z={}){const d=this.getNextId(),F=h(this,Dl,jt).call(this,{parent:this,id:d,x:l.offsetX,y:l.offsetY,uiManager:Q(this,o),isCentered:U,...Z});return F&&this.add(F),F}addNewEditor(){this.createAndAddNewEditor(h(this,Dl,Ot).call(this),!0)}setSelected(l){Q(this,o).setSelected(l)}toggleSelected(l){Q(this,o).toggleSelected(l)}isSelected(l){return Q(this,o).isSelected(l)}unselect(l){Q(this,o).unselect(l)}pointerup(l){const{isMac:U}=$l.platform;if(!(l.button!==0||l.ctrlKey&&U)&&l.target===this.div&&Q(this,nd)){if(a(this,nd,!1),!Q(this,w0)){a(this,w0,!0);return}if(Q(this,o).getMode()===v.STAMP){Q(this,o).unselectAll();return}this.createAndAddNewEditor(l,!1)}}pointerdown(l){if(Q(this,o).getMode()===v.HIGHLIGHT&&this.enableTextSelection(),Q(this,nd)){a(this,nd,!1);return}const{isMac:U}=$l.platform;if(l.button!==0||l.ctrlKey&&U||l.target!==this.div)return;a(this,nd,!0);const Z=Q(this,o).getActive();a(this,w0,!Z||Z.isEmpty())}findNewParent(l,U,Z){const d=Q(this,o).findParent(U,Z);return d===null||d===this?!1:(d.changeParent(l),!0)}destroy(){var l,U;((l=Q(this,o).getActive())==null?void 0:l.parent)===this&&(Q(this,o).commitOrRemove(),Q(this,o).setActiveEditor(null)),Q(this,EZ)&&(clearTimeout(Q(this,EZ)),a(this,EZ,null));for(const Z of Q(this,sU).values())(U=Q(this,SF))==null||U.removePointerInTextLayer(Z.contentDiv),Z.setParent(null),Z.isAttachedToDOM=!1,Z.div.remove();this.div=null,Q(this,sU).clear(),Q(this,o).removeLayer(this)}render({viewport:l}){this.viewport=l,BF(this.div,l);for(const U of Q(this,o).getEditors(this.pageIndex))this.add(U),U.rebuild();this.updateMode()}update({viewport:l}){Q(this,o).commitOrRemove(),h(this,Dl,DW).call(this);const U=this.viewport.rotation,Z=l.rotation;if(this.viewport=l,BF(this.div,{rotation:Z}),U!==Z)for(const d of Q(this,sU).values())d.rotate(Z);this.addInkEditorIfNeeded(!1)}get pageDimensions(){const{pageWidth:l,pageHeight:U}=this.viewport.rawDims;return[l,U]}get scale(){return Q(this,o).viewParameters.realScale}};SF=new WeakMap,w0=new WeakMap,lZ=new WeakMap,YF=new WeakMap,DZ=new WeakMap,IZ=new WeakMap,EZ=new WeakMap,sU=new WeakMap,nd=new WeakMap,x0=new WeakMap,j0=new WeakMap,Ol=new WeakMap,o=new WeakMap,ad=new WeakMap,Dl=new WeakSet,ks=function(l){Q(this,o).unselectAll();const{target:U}=l;if(U===Q(this,Ol).div||U.classList.contains("endOfContent")&&Q(this,Ol).div.contains(U)){const{isMac:Z}=$l.platform;if(l.button!==0||l.ctrlKey&&Z)return;Q(this,o).showAllEditors("highlight",!0,!0),Q(this,Ol).div.classList.add("free"),this.toggleDrawing(),rW.startHighlighting(this,Q(this,o).direction==="ltr",l),Q(this,Ol).div.addEventListener("pointerup",()=>{Q(this,Ol).div.classList.remove("free"),this.toggleDrawing(!0)},{once:!0,signal:Q(this,o)._signal}),l.preventDefault()}},xt=function(){return Q(TU,ad).get(Q(this,o).getMode())},jt=function(l){const U=Q(this,Dl,xt);return U?new U.prototype.constructor(l):null},Ot=function(){const{x:l,y:U,width:Z,height:d}=this.div.getBoundingClientRect(),F=Math.max(0,l),V=Math.max(0,U),W=Math.min(window.innerWidth,l+Z),c=Math.min(window.innerHeight,U+d),t=(F+W)/2-l,N=(V+c)/2-U,[s,b]=this.viewport.rotation%180===0?[t,N]:[N,t];return{offsetX:s,offsetY:b}},DW=function(){a(this,x0,!0);for(const l of Q(this,sU).values())l.isEmpty()&&l.remove();a(this,x0,!1)},j(TU,"_initialized",!1),i(TU,ad,new Map([Mt,ut,It,rW].map(l=>[l._editorType,l])));let wt=TU;var UZ,KV,Tl,hd,HV,gt,yF,Kt,os;const yl=class yl{constructor({pageIndex:l}){i(this,yF);i(this,UZ,null);i(this,KV,0);i(this,Tl,new Map);i(this,hd,new Map);this.pageIndex=l}setParent(l){if(!Q(this,UZ)){a(this,UZ,l);return}if(Q(this,UZ)!==l){if(Q(this,Tl).size>0)for(const U of Q(this,Tl).values())U.remove(),l.append(U);a(this,UZ,l)}}static get _svgFactory(){return P(this,"_svgFactory",new qt)}highlight(l,U,Z,d=!1){const F=ZU(this,KV)._++,V=h(this,yF,Kt).call(this,l.box);V.classList.add("highlight"),l.free&&V.classList.add("free");const W=yl._svgFactory.createElement("defs");V.append(W);const c=yl._svgFactory.createElement("path");W.append(c);const t=`path_p${this.pageIndex}_${F}`;c.setAttribute("id",t),c.setAttribute("d",l.toSVGPath()),d&&Q(this,hd).set(F,c);const N=h(this,yF,os).call(this,W,t),s=yl._svgFactory.createElement("use");return V.append(s),V.setAttribute("fill",U),V.setAttribute("fill-opacity",Z),s.setAttribute("href",`#${t}`),Q(this,Tl).set(F,V),{id:F,clipPathId:`url(#${N})`}}highlightOutline(l){const U=ZU(this,KV)._++,Z=h(this,yF,Kt).call(this,l.box);Z.classList.add("highlightOutline");const d=yl._svgFactory.createElement("defs");Z.append(d);const F=yl._svgFactory.createElement("path");d.append(F);const V=`path_p${this.pageIndex}_${U}`;F.setAttribute("id",V),F.setAttribute("d",l.toSVGPath()),F.setAttribute("vector-effect","non-scaling-stroke");let W;if(l.free){Z.classList.add("free");const N=yl._svgFactory.createElement("mask");d.append(N),W=`mask_p${this.pageIndex}_${U}`,N.setAttribute("id",W),N.setAttribute("maskUnits","objectBoundingBox");const s=yl._svgFactory.createElement("rect");N.append(s),s.setAttribute("width","1"),s.setAttribute("height","1"),s.setAttribute("fill","white");const b=yl._svgFactory.createElement("use");N.append(b),b.setAttribute("href",`#${V}`),b.setAttribute("stroke","none"),b.setAttribute("fill","black"),b.setAttribute("fill-rule","nonzero"),b.classList.add("mask")}const c=yl._svgFactory.createElement("use");Z.append(c),c.setAttribute("href",`#${V}`),W&&c.setAttribute("mask",`url(#${W})`);const t=c.cloneNode();return Z.append(t),c.classList.add("mainOutline"),t.classList.add("secondaryOutline"),Q(this,Tl).set(U,Z),U}finalizeLine(l,U){const Z=Q(this,hd).get(l);Q(this,hd).delete(l),this.updateBox(l,U.box),Z.setAttribute("d",U.toSVGPath())}updateLine(l,U){Q(this,Tl).get(l).firstChild.firstChild.setAttribute("d",U.toSVGPath())}removeFreeHighlight(l){this.remove(l),Q(this,hd).delete(l)}updatePath(l,U){Q(this,hd).get(l).setAttribute("d",U.toSVGPath())}updateBox(l,U){var Z;h(Z=yl,HV,gt).call(Z,Q(this,Tl).get(l),U)}show(l,U){Q(this,Tl).get(l).classList.toggle("hidden",!U)}rotate(l,U){Q(this,Tl).get(l).setAttribute("data-main-rotation",U)}changeColor(l,U){Q(this,Tl).get(l).setAttribute("fill",U)}changeOpacity(l,U){Q(this,Tl).get(l).setAttribute("fill-opacity",U)}addClass(l,U){Q(this,Tl).get(l).classList.add(U)}removeClass(l,U){Q(this,Tl).get(l).classList.remove(U)}remove(l){Q(this,UZ)!==null&&(Q(this,Tl).get(l).remove(),Q(this,Tl).delete(l))}destroy(){a(this,UZ,null);for(const l of Q(this,Tl).values())l.remove();Q(this,Tl).clear()}};UZ=new WeakMap,KV=new WeakMap,Tl=new WeakMap,hd=new WeakMap,HV=new WeakSet,gt=function(l,{x:U=0,y:Z=0,width:d=1,height:F=1}={}){const{style:V}=l;V.top=`${100*Z}%`,V.left=`${100*U}%`,V.width=`${100*d}%`,V.height=`${100*F}%`},yF=new WeakSet,Kt=function(l){var Z;const U=yl._svgFactory.create(1,1,!0);return Q(this,UZ).append(U),U.setAttribute("aria-hidden",!0),h(Z=yl,HV,gt).call(Z,U,l),U},os=function(l,U){const Z=yl._svgFactory.createElement("clipPath");l.append(Z);const d=`clip_${U}`;Z.setAttribute("id",d),Z.setAttribute("clipPathUnits","objectBoundingBox");const F=yl._svgFactory.createElement("use");return Z.append(F),F.setAttribute("href",`#${U}`),F.classList.add("clip"),d},i(yl,HV);let rt=yl;x.AbortException;x.AnnotationEditorLayer;x.AnnotationEditorParamsType;x.AnnotationEditorType;x.AnnotationEditorUIManager;var Qa=x.AnnotationLayer,kR=x.AnnotationMode;x.CMapCompressionType;x.ColorPicker;x.DOMSVGFactory;x.DrawLayer;x.FeatureTest;var Ds=x.GlobalWorkerOptions;x.ImageKind;x.InvalidPDFException;x.MissingPDFException;x.OPS;x.PDFDataRangeTransport;x.PDFDateString;x.PDFWorker;x.PasswordResponses;x.PermissionFlag;x.PixelsPerInch;x.RenderingCancelledException;var Va=x.TextLayer;x.UnexpectedResponseException;x.Util;x.VerbosityLevel;var Wa=x.XfaLayer;x.build;x.createValidAbsoluteUrl;x.fetchData;var oR=x.getDocument;x.getFilenameFromUrl;x.getPdfFilenameFromUrl;x.getXfaPageViewport;x.isDataScheme;x.isPdfFile;x.noContextMenu;x.normalizeUnicode;x.setLayerDimensions;x.shadow;x.version;var ca=Object.defineProperty,ta=(R,l,U)=>l in R?ca(R,l,{enumerable:!0,configurable:!0,writable:!0,value:U}):R[l]=U,Ra=(R,l,U)=>(ta(R,l+"",U),U);const cW="internal-link",Na="link",sa="file-attachment",ba="form-text",na="form-select",aa="form-checkbox",ha="form-radio",ma="form-button",DR=["click","dblclick","mouseover","input","change"];function K0(R,l,U){const Z=[];if(U)for(const d of U)d[R]===l&&Z.push(d);return Z}function EU(R,l){return{type:R,data:l}}function EF(R,l){switch(R.type){case"textarea":case"text":return EU(ba,{fieldName:R.name,value:R.value});case"select-one":case"select-multiple":const U=[];for(const d of R.options)U.push({value:d.value,label:d.label});const Z=[];for(const d of R.selectedOptions)Z.push({value:d.value,label:d.label});return EU(na,{fieldName:R.name,value:Z,options:U});case"checkbox":return EU(aa,{fieldName:R.name,checked:R.checked});case"radio":return EU(ha,{fieldName:R.name,...l});case"button":return EU(ma,{fieldName:R.name,...l})}}function ia(R){return EU(sa,R.file)}async function Ma(R,l){if(R.dest){let U;if(typeof R.dest=="string"?U=await l.getDestination(R.dest):U=R.dest,!Array.isArray(U))return console.warn(`Destination "${U}" is not a valid destination (dest="${R.dest}")`),EU(cW,{referencedPage:null,offset:null});let Z=null;U.length===5&&(Z={left:R.dest[2],bottom:R.dest[3]});const[d]=U;if(Number.isInteger(d))return EU(cW,{referencedPage:Number(d)+1,offset:Z});if(typeof d=="object"){const F=await l.getPageIndex(d);return EU(cW,{referencedPage:F+1,offset:Z})}else return console.warn(`Destination "${d}" is not a valid destination (dest="${R.dest}")`),EU(cW,{referencedPage:null,offset:null})}else if(R.url)return EU(Na,{url:R.url,unsafeUrl:R.unsafeUrl})}function IR(R){for(const l of R.getElementsByTagName("span")){let U=l.textContent;const Z=JSON.parse(l.dataset.l10nArgs??"{}");if(U)for(const d in Z)U=U.replace(`{{${d}}}`,Z[d]);l.textContent=U}}function Ja(R,l,U){var Z;let d=R.target.parentNode;if(d.tagName==="DIV"&&(d=d.firstChild),d.className==="linkAnnotation"&&R.type==="click"){const F=(Z=d.dataset)==null?void 0:Z.annotationId;if(F)return Ma(K0("id",F,U)[0],l)}else if(d.className.includes("popupAnnotation")||d.className.includes("textAnnotation"))IR(d);else if(d.className.includes("fileAttachmentAnnotation")){IR(d);const F=d.dataset.annotationId;if(F&&R.type==="dblclick")return ia(K0("id",F,U)[0])}else if(d.className.includes("textWidgetAnnotation")&&R.type==="input"){let F=d.getElementsByTagName("input")[0];return F||(F=d.getElementsByTagName("textarea")[0]),EF(F)}else{if(d.className.includes("choiceWidgetAnnotation")&&R.type==="input")return EF(d.getElementsByTagName("select")[0]);if(d.className.includes("buttonWidgetAnnotation checkBox")&&R.type==="change")return EF(d.getElementsByTagName("input")[0]);if(d.className.includes("buttonWidgetAnnotation radioButton")&&R.type==="change"){const F=d.dataset.annotationId;if(F){const V=K0("id",F,U)[0],W=[];for(const c of K0("fieldName",V.fieldName,U))c.buttonValue&&W.push(c.buttonValue);return EF(d.getElementsByTagName("input")[0],{value:V.buttonValue,defaultValue:V.fieldValue,options:W})}}else if(d.className.includes("buttonWidgetAnnotation pushButton")&&R.type==="click"){const F=d.dataset.annotationId;if(F){const V=K0("id",F,U)[0];return V.resetForm?EF({name:V.fieldName,type:"button"},{actions:V.actions,reset:!0}):EF({name:V.fieldName,type:"button"},{actions:V.actions,reset:!1})}}}}class Is{constructor(){Ra(this,"externalLinkEnabled"),this.externalLinkEnabled=!0}get pagesCount(){return 0}get page(){return 0}set page(l){}get rotation(){return 0}set rotation(l){}get isInPresentationMode(){return!1}async goToDestination(l){}goToPage(l){}addLinkAttributes(l,U,Z=!1){}getDestinationHash(l){return"#"}getAnchorUrl(l){return"#"}setHash(l){}executeNamedAction(l){}executeSetOCGState(l){}cachePageRef(l,U){}}const Ga=vV({__name:"AnnotationLayer",props:{page:{},viewport:{},document:{},annotationsFilter:{},annotationsMap:{},imageResourcesPath:{},hideForms:{type:Boolean},enableScripting:{type:Boolean},intent:{}},emits:["annotation","annotationLoaded"],setup(R,{emit:l}){const U=R,Z=l,d=CU(),F=CU();function V(s){const b=Ja(s,U.document,F.value);Promise.resolve(b).then(n=>{n&&Z("annotation",n)})}async function W(){var s;return await((s=WQ(U.document))==null?void 0:s.getFieldObjects())}async function c(){var s;return await((s=WQ(U.document))==null?void 0:s.hasJSActions())}async function t(){const s=U.page;let b=await(s==null?void 0:s.getAnnotations({intent:U.intent}));if(U.annotationsFilter){const n=U.annotationsFilter;b=b.filter(m=>{const M=m.subtype,G=m.fieldType?`${M}.${m.fieldType}`:null;return(n==null?void 0:n.includes(M))||G!==null&&(n==null?void 0:n.includes(G))})}return b}async function N(){var s,b;(b=(s=d.value).replaceChildren)==null||b.call(s);for(const Y of DR)d.value.removeEventListener(Y,V);const n=WQ(U.document),m=U.page,M=U.viewport;F.value=await t();const G=new Map([]);for(const Y of F.value)if(Y.subtype==="Widget"&&Y.fieldType==="Btn"&&Y.pushButton){const e=Y.rect[2]-Y.rect[0],X=Y.rect[3]-Y.rect[1],B=document.createElement("canvas");B.setAttribute("width",(e*M.scale).toString()),B.setAttribute("height",(X*M.scale).toString()),G.set(Y.id,B)}const J=n.annotationStorage;if(U.annotationsMap)for(const[Y,e]of Object.entries(U.annotationsMap))J.setValue(Y,e);const T={accessibilityManager:void 0,annotationCanvasMap:G,div:d.value,page:m,viewport:M.clone({dontFlip:!0}),annotationEditorUIManager:null,l10n:null},S={annotations:F.value,viewport:M.clone({dontFlip:!0}),linkService:new Is,annotationCanvasMap:G,div:d.value,annotationStorage:J,renderForms:!U.hideForms,page:m,enableScripting:!1,hasJSActions:await c(),fieldObjects:await W(),downloadManager:null,imageResourcesPath:U.imageResourcesPath};new Qa(T).render(S).then(async()=>{Z("annotationLoaded",await t())});for(const Y of DR)d.value.addEventListener(Y,V)}return XF(()=>U.viewport,()=>{U.page&&U.viewport&&d.value&&N()}),tc(()=>{U.page&&U.viewport&&d.value&&N()}),(s,b)=>(CZ(),PV("div",{ref_key:"layer",ref:d,class:"annotationLayer",style:{display:"block"}},null,512))}});function Ta(R,l,U){const Z=[];for(const N of R.items)if(N.hasEOL)if(N.str.endsWith("-")){const s=N.str.lastIndexOf("-");Z.push(N.str.substring(0,s))}else Z.push(N.str,`
`);else Z.push(N.str);const d=Z.join("").replace(/\n/g," "),F=["g"];U.ignoreCase&&F.push("i");let V=l.trim().replace(/[.*+?^${}()|[\]\\]/g,"\\$&");U.completeWords&&(V=`\\b${V}\\b`);const W=new RegExp(V,F.join("")),c=[];let t;for(;(t=W.exec(d))!==null;)c.push([t.index,t[0].length,t[0]]);return c}function Sa(R,l){function U(c){return c.hasEOL?c.str.endsWith("-")?-1:1:0}let Z=0,d=0;const F=l.items,V=F.length-1,W=[];for(let c=0;c<R.length;c++){let t=R[c][0];for(;Z!==V&&t>=d+F[Z].str.length;){const b=F[Z];d+=b.str.length+U(b),Z++}const N={idx:Z,offset:t-d};for(t+=R[c][1];Z!==V&&t>d+F[Z].str.length;){const b=F[Z];d+=b.str.length+U(b),Z++}const s={idx:Z,offset:t-d};W.push({start:N,end:s,str:R[c][2],oindex:R[c][0]})}return W}function Ya(R,l,U){function Z(d,F=-1,V=-1){const W=l.items[d],c=[];let t="",N="",s="",b=U[d];if(!b)return;if(b.nodeType===Node.TEXT_NODE){const M=document.createElement("span");b.before(M),M.append(b),U[d]=M,b=M}F>=0&&V>=0?t=W.str.substring(F,V):F<0&&V<0?t=W.str:F>=0?t=W.str.substring(F):V>=0&&(t=W.str.substring(0,V));const n=document.createTextNode(t),m=document.createElement("span");if(m.className="highlight appended",m.append(n),c.push(m),F>0)if(b.childNodes.length===1&&b.childNodes[0].nodeType===Node.TEXT_NODE){N=W.str.substring(0,F);const M=document.createTextNode(N);c.unshift(M)}else{let M=0;const G=[];for(const J of b.childNodes){const T=J.nodeType===Node.TEXT_NODE?J.nodeValue:J.firstChild.nodeValue;M+=T.length,M<=F?G.push(J):F>=M-T.length&&V<=M&&G.push(document.createTextNode(T.substring(0,F-(M-T.length))))}c.unshift(...G)}if(V>0){s=W.str.substring(V);const M=document.createTextNode(s);c.push(M)}b.replaceChildren(...c)}for(const d of R)if(d.start.idx===d.end.idx)Z(d.start.idx,d.start.offset,d.end.offset);else for(let F=d.start.idx,V=d.end.idx;F<=V;F++)F===d.start.idx?Z(F,d.start.offset):F===d.end.idx?Z(F,-1,d.end.offset):Z(F)}function Xa(R,l){const U=R.items.map(Z=>Z.str);for(let Z=0;Z<l.length;Z++){const d=l[Z];if(d&&d.nodeType!==Node.TEXT_NODE){const F=document.createTextNode(U[Z]);d.replaceChildren(F)}}}function Ba(R,l,U){const Z=[];for(const d of R){const F=Ta(l,d,U);Z.push(...Sa(F,l))}return Z}const ea=vV({__name:"TextLayer",props:{page:{},viewport:{},highlightText:{},highlightOptions:{}},emits:["highlight","textLoaded"],setup(R,{emit:l}){const U=R,Z=l,d=CU(),F=CU();let V=[];function W(){return Object.assign({},{ignoreCase:!0,completeWords:!1},U.highlightOptions)}async function c(b=!1){const n=U.page,m=await(n==null?void 0:n.getTextContent());if(m&&(b&&Xa(m,V),U.highlightText)){const M=typeof U.highlightText=="string"?[U.highlightText]:U.highlightText,G=Ba(M,m,W());Ya(G,m,V),Z("highlight",{matches:G,textContent:m,textDivs:V,page:(n==null?void 0:n.pageNumber)||1})}}function t(){var b,n;(n=(b=d.value).replaceChildren)==null||n.call(b);const m=U.page,M=U.viewport,G=m==null?void 0:m.streamTextContent({includeMarkedContent:!0,disableNormalization:!0}),J=new Va({container:d.value,textContentSource:G,viewport:M});J.render().then(async()=>{var T;V=J.textDivs;const S=await(m==null?void 0:m.getTextContent());Z("textLoaded",{textDivs:V,textContent:S});const Y=document.createElement("div");Y.className="endOfContent",(T=d.value)==null||T.appendChild(Y),F.value=Y,c()})}function N(){F.value&&F.value.classList.add("active")}function s(){F.value&&F.value.classList.remove("active")}return XF(()=>U.viewport,b=>{U.page&&U.viewport&&d.value&&t()}),XF(()=>[U.highlightText,U.highlightOptions],b=>{c(!0)},{deep:!0}),tc(()=>{U.page&&U.viewport&&d.value&&t()}),(b,n)=>(CZ(),PV("div",{ref_key:"layer",ref:d,class:"textLayer",style:{display:"block"},onMousedown:N,onMouseup:s},null,544))}}),pa=vV({__name:"XFALayer",props:{page:{},document:{},viewport:{}},emits:["xfaLoaded"],setup(R,{emit:l}){const U=R,Z=l,d=CU();async function F(){var V,W;(W=(V=d.value).replaceChildren)==null||W.call(V);const c=WQ(U.document),t=U.page,N=U.viewport;if(c.isPureXfa){const s=await t.getXfa(),b={div:d.value,viewport:N.clone({dontFlip:!0}),linkService:new Is,annotationStorage:c==null?void 0:c.annotationStorage,xfaHtml:s};Wa.render(b),Z("xfaLoaded")}}return XF(()=>U.viewport,V=>{U.page&&U.viewport&&d.value&&F()}),tc(()=>{U.page&&U.viewport&&d.value&&F()}),(V,W)=>(CZ(),PV("div",{ref_key:"layer",ref:d,style:{display:"block"}},null,512))}}),ua=CR("canvas",{dir:"ltr",style:{display:"block"},role:"main"},null,-1),ya=vV({__name:"VuePDF",props:{pdf:{},page:{default:1},scale:{default:1},rotation:{},fitParent:{type:Boolean},width:{},height:{},textLayer:{type:Boolean},imageResourcesPath:{},hideForms:{type:Boolean},intent:{default:"display"},annotationLayer:{type:Boolean},annotationsFilter:{},annotationsMap:{},watermarkText:{},watermarkOptions:{},highlightText:{},highlightOptions:{}},emits:["annotation","highlight","loaded","textLoaded","annotationLoaded","xfaLoaded"],setup(R,{expose:l,emit:U}){const Z=R,d=U,F=CU(),V=CU(),W=CU(!1);let c;const t=tW(()=>({viewport:void 0,document:void 0,page:void 0})),N=tW(()=>({annotationsMap:Z.annotationsMap,annotationsFilter:Z.annotationsFilter,imageResourcesPath:Z.imageResourcesPath,hideForms:Z.hideForms,intent:Z.intent})),s=tW(()=>({highlightText:Z.highlightText,highlightOptions:Z.highlightOptions}));function b(){return Object.assign({},{columns:4,rows:4,rotation:45,fontSize:18,color:"rgba(211, 210, 211, 0.4)"},Z.watermarkOptions)}function n(B){if(!(typeof B=="number"&&B%90===0))return 0;const p=B/90;return p>4?n(B-360):p<0?n(B+360):B}function m(B){let p=Z.scale;if(Z.fitParent){const u=F.value.parentNode.clientWidth,I=B.getViewport({scale:1}).width;p=u/I}else if(Z.width){const u=B.getViewport({scale:1}).width;p=Z.width/u}else if(Z.height){const u=B.getViewport({scale:1}).height;p=Z.height/u}return p}function M(B=1){if(!Z.watermarkText)return;const p=G();if(!p)return;const u=p.getContext("2d");if(!u)return;const I=b(),D=Z.watermarkText,A=I.columns,K=I.rows,ll=A*K,_=I.rotation,cl=I.fontSize*B;u.font=`${cl}px Trebuchet MS`,u.fillStyle=I.color;for(let E=0;E<ll;E++){const w=E%A*(p.width/A)+p.width/(A*2),oF=Math.floor(E/A)*(p.height/K)+p.height/(K*2),DF=u.measureText(D).width;u.save(),u.translate(w,oF),u.rotate(-_*(Math.PI/180)),u.fillText(D,-DF/2,cl/2),u.restore()}}function G(){var B;let p=null;return(B=F.value)==null||B.childNodes.forEach(u=>{u.tagName==="CANVAS"&&(p=u)}),p}function J(B){var p;let u;const I=G();I&&(I==null?void 0:I.getAttribute("role"))==="main"?u=I:(u=document.createElement("canvas"),u.style.display="block",u.setAttribute("dir","ltr"));const D=window.devicePixelRatio||1;return u.width=Math.floor(B.width*D),u.height=Math.floor(B.height*D),u.style.width=`${Math.floor(B.width)}px`,u.style.height=`${Math.floor(B.height)}px`,(p=F.value)==null||p.style.setProperty("--scale-factor",`${B.scale}`),V.value.style.width=`${Math.floor(B.width)}px`,V.value.style.height=`${Math.floor(B.height)}px`,V.value.style.top="0",V.value.style.left="0",W.value=!0,u}function T(){c&&c.cancel()}function S(B){var p;(p=WQ(t.value.document))==null||p.getPage(B).then(u=>{var I;T();const D=u.getViewport(),A={scale:m(u),rotation:n((Z.rotation||0)+D.rotation)},K=u.getViewport(A),ll=G(),_=J(K),cl=window.devicePixelRatio||1,E=cl!==1?[cl,0,0,cl,0,0]:void 0,w={canvasContext:_.getContext("2d"),viewport:K,annotationMode:Z.hideForms?kR.ENABLE:kR.ENABLE_FORMS,transform:E,intent:Z.intent};(_==null?void 0:_.getAttribute("role"))!=="main"?ll&&((I=F.value)==null||I.replaceChild(_,ll)):_.removeAttribute("role"),t.value.page=u,t.value.viewport=K,c=u.render(w),c.promise.then(()=>{W.value=!1,M(K.scale),d("loaded",t.value.viewport)}).catch(()=>{})})}function Y(B){B.promise.then(async p=>{t.value.document=p,S(Z.page)})}XF(()=>Z.pdf,B=>{B!==void 0&&Y(B)}),XF(()=>[Z.scale,Z.width,Z.height,Z.rotation,Z.page,Z.hideForms,Z.intent],()=>{S(Z.page)}),tc(()=>{Z.pdf!==void 0&&Y(Z.pdf)}),fs(()=>{var B;(B=Z.pdf)==null||B.destroy()});function e(){S(Z.page)}function X(){T()}return l({reload:e,cancel:X}),(B,p)=>(CZ(),PV("div",{ref_key:"container",ref:F,style:{position:"relative",display:"block"}},[ua,B.annotationLayer?(CZ(),IW(Ga,Tc({key:0},{...t.value,...N.value},{onAnnotation:p[0]||(p[0]=u=>d("annotation",u)),onAnnotationLoaded:p[1]||(p[1]=u=>d("annotationLoaded",u))}),null,16)):uc("",!0),B.textLayer?(CZ(),IW(ea,Tc({key:1},{...t.value,...s.value},{onHighlight:p[2]||(p[2]=u=>d("highlight",u)),onTextLoaded:p[3]||(p[3]=u=>d("textLoaded",u))}),null,16)):uc("",!0),Sl(pa,Tc({...t.value},{onXfaLoaded:p[4]||(p[4]=u=>d("xfaLoaded"))}),null,16),As(CR("div",{ref_key:"loadingLayer",ref:V,style:{position:"absolute"}},[qs(B.$slots,"default")],512),[[_s,W.value]])],512))}}),za="data:application/javascript;base64,";function La(R){return!!(typeof R=="object"&&R&&"gen"in R&&"num"in R)}async function ka(R,l){return typeof l=="string"?R.getDestination(l):l}async function oa(R,l){return l&&La(l[0])?l[0]:null}const Da=R=>R.type==="XYZ"&&R.spec.length===3,Ia=R=>R.type==="Fit"&&R.spec.length===0,Ea=R=>R.type==="FitH"&&R.spec.length===1,Ca=R=>R.type==="FitV"&&R.spec.length===1,wa=R=>R.type==="FitR"&&R.spec.length===4,xa=R=>R.type==="FitB"&&R.spec.length===0,ja=R=>R.type==="FitBH"&&R.spec.length===1,Oa=R=>R.type==="FitBV"&&R.spec.length===1;function ra(R,l){const U={type:R,spec:l};return Da(U)||Ia(U)||Ea(U)||Ca(U)||wa(U)||xa(U)||ja(U)||Oa(U)?U:(console.warn("no location type found for ",R,l),null)}const ga=R=>R&&R.every(l=>!isNaN(l));async function Ka(){return new Promise((R,l)=>{const U=document.createElement("iframe");U.width="0px",U.height="0px",U.style.cssText="position: absolute; top:0; left:0",U.style.display="none",U.onload=function(){R(U)},document.body.appendChild(U)})}function Ha(R,l,U){const Z=R.document.createElement("style");Z.textContent=`
    @page {
      margin: 0;
      size: ${l}pt ${U}pt;
    }
    body {
      margin: 0;
      width: 100%;
    }
    canvas {
      width: 100%;
      page-break-after: always;
      page-break-before: avoid;
      page-break-inside: avoid;
    }
  `,R.document.head.appendChild(Z)}function va(R){Ds.workerSrc=R}function Pa(R,l={onProgress:void 0,onPassword:void 0,onError:void 0,password:""}){var U;(U=Ds)!=null&&U.workerSrc||va(za);const Z=ZW(),d=ZW(),F=ZW(0),V=ZW({});function W(s){d.value&&d.value.destroy();const b=oR(s);if(l.onProgress&&(b.onProgress=l.onProgress),l.onPassword)b.onPassword=l.onPassword;else if(l.password){const n=(m,M)=>{m(l.password??"")};b.onPassword=n}b.promise.then(async n=>{d.value=n,Z.value=n.loadingTask,F.value=n.numPages;const m=await n.getMetadata(),M=await n.getAttachments(),G=await n.getJSActions(),J=await n.getOutline();V.value={metadata:m,attachments:M,javascript:G,outline:J}},n=>{typeof l.onError=="function"&&l.onError(n)})}async function c(s){var b;const n=await((b=Z.value)==null?void 0:b.promise);if(!n)return null;const m=await ka(n,s),M=await oa(n,m);if(!M||!m)return null;const G=await n.getPageIndex(M),J=m[1].name,T=m.slice(2),S=ga(T)?ra(J,T):null;return{pageIndex:G,location:S??{type:"Fit",spec:[]}}}async function t(s="filename"){var b;if(!d.value)throw new Error("Current PDFDocumentProxy have not loaded yet");const n=await((b=d.value)==null?void 0:b.saveDocument()),m=new Blob([n],{type:"application/pdf"}),M=URL.createObjectURL(m),G=document.createElement("a");document.body.appendChild(G),G.href=M,G.download=s,G.style.display="none",G.click(),setTimeout(()=>{URL.revokeObjectURL(M),document.body.removeChild(G)},10)}async function N(s=150,b="filename"){var n,m;if(!d.value)throw new Error("Current PDFDocumentProxy have not loaded yet");const M=await((n=d.value)==null?void 0:n.saveDocument()),G=await oR(M.buffer).promise,J=s/72,T=96/72,S=await Ka(),Y=S.contentWindow;Y.document.title=b;const e=[...Array(G.numPages).keys()].map(X=>X+1);for(const X of e){const B=await G.getPage(X),p=B.getViewport({scale:1});X===1&&Ha(Y,p.width*J/T,p.height*J/T);const u=document.createElement("canvas");u.width=p.width*J,u.height=p.height*J;const I=u.cloneNode();Y==null||Y.document.body.appendChild(I),await(B==null?void 0:B.render({canvasContext:u.getContext("2d"),intent:"print",transform:[J,0,0,J,0,0],viewport:p}).promise),(m=I.getContext("2d"))==null||m.drawImage(u,0,0)}Y==null||Y.focus(),Y==null||Y.print(),document.body.removeChild(S)}return Ps(R)?(R.value&&W(R.value),XF(R,()=>{R.value&&W(R.value)})):R&&W(R),{pdf:Z,pages:F,info:V,print:N,download:t,getPDFDestination:c}}const fa={class:"w-full h-full overflow-hidden p-3"},Uh=vV({__name:"index",setup(R){const{message:l}=$s.useApp(),U=ws(),{data:Z,isError:d,isFetching:F}=xs(),V=CU(0),W=tW(()=>{if(Z.value&&Z.value.length>0){if(V.value<0||V.value>=Z.value.length)return null;const Y=Z.value[V.value];return U(Y)}return null}),c=CU(1),t=CU(1),{pdf:N,pages:s}=Pa(W),b=()=>{c.value=c.value%s.value+1},n=()=>{c.value=c.value-1||s.value},m=()=>{t.value=t.value+.1},M=()=>{t.value=t.value-.1},G=()=>{Z.value&&(V.value=(V.value+1)%Z.value.length)},J=()=>{Z.value&&(V.value===0?V.value=Z.value.length-1:V.value-=1)},T=()=>{c.value=1,t.value=1};return Hs((Y,e)=>{const X=e.data;X==="page:next"?b():X==="page:prev"?n():X==="scale:up"?m():X==="scale:down"?M():X==="file:next"?G():X==="file:prev"?J():X==="settings:reset"?T():console.warn("Unknown command:",X)},(Y,e)=>l.error("WebSocket 连接失败，请检查日志"),Y=>l.info("WebSocket 连接成功"),Y=>l.info("WebSocket 连接已关闭")),(Y,e)=>(CZ(),PV("div",fa,[Sl(tl(vs),{class:"w-full h-full",justify:"center",align:"center"},{default:VZ(()=>[Sl(tl(js),{spinning:tl(F)},{default:VZ(()=>[tl(N)?(CZ(),IW(tl(ya),{key:0,pdf:tl(N),page:tl(c),scale:tl(t)},null,8,["pdf","page","scale"])):tl(F)?uc("",!0):(CZ(),IW(tl(Os),{key:1,title:"资源加载失败，请检查日志",status:404}))]),_:1},8,["spinning"])]),_:1}),Sl(tl(lb),{class:"right-20",shape:"square"},{default:VZ(()=>[Sl(tl(IF),{onClick:n},{icon:VZ(()=>[Sl(tl(vt))]),_:1}),Sl(tl(IF),{onClick:b},{icon:VZ(()=>[Sl(tl(rs))]),_:1}),Sl(tl(IF),{onClick:m},{icon:VZ(()=>[Sl(tl(ft))]),_:1}),Sl(tl(IF),{onClick:M},{icon:VZ(()=>[Sl(tl(Pt))]),_:1}),Sl(tl(IF),{onClick:J},{icon:VZ(()=>[Sl(tl(gs))]),_:1}),Sl(tl(IF),{onClick:G},{icon:VZ(()=>[Sl(tl(Ks))]),_:1})]),_:1})]))}});export{Uh as default};
